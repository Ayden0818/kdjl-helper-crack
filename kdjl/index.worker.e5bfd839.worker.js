(function(e) {
    var t = {};

    function n(r) {
        if (t[r]) return t[r].exports;
        var a = t[r] = {
            i: r,
            l: !1,
            exports: {}
        };
        return e[r].call(a.exports, a, a.exports, n), a.l = !0, a.exports
    }
    n.m = e, n.c = t, n.d = function(e, t, r) {
        n.o(e, t) || Object.defineProperty(e, t, {
            enumerable: !0,
            get: r
        })
    }, n.r = function(e) {
        "undefined" !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(e, "__esModule", {
            value: !0
        })
    }, n.t = function(e, t) {
        if (1 & t && (e = n(e)), 8 & t) return e;
        if (4 & t && "object" === typeof e && e && e.__esModule) return e;
        var r = Object.create(null);
        if (n.r(r), Object.defineProperty(r, "default", {
                enumerable: !0,
                value: e
            }), 2 & t && "string" != typeof e)
            for (var a in e) n.d(r, a, function(t) {
                return e[t]
            }.bind(null, a));
        return r
    }, n.n = function(e) {
        var t = e && e.__esModule ? function() {
            return e["default"]
        } : function() {
            return e
        };
        return n.d(t, "a", t), t
    }, n.o = function(e, t) {
        return Object.prototype.hasOwnProperty.call(e, t)
    }, n.p = "//static.i-weather.cn/kdjl-helper/", n(n.s = "36b3")
})({
    0: function(e, t) {},
    "0088": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("96cf");
        var a = r(n("3b8d"));
        n("c5f6");
        var s = n("3f7e"),
            c = [{
                title: "元宝宝箱钥匙",
                npc: "1000",
                code: "~q1"
            }, {
                title: "七棱水晶币",
                npc: "1000",
                code: "~q2"
            }, {
                title: "一天VIP金卡",
                npc: "1000",
                code: "~q3"
            }, {
                title: "彩云全集",
                npc: "1001",
                code: "~q1"
            }, {
                title: "钥匙和水晶币"
            }],
            u = new s.Task({
                title: "彩云兑换",
                tags: ["change"],
                form: [{
                    title: "兑换类型",
                    type: "picker",
                    range: c,
                    value: 0
                }, {
                    title: "兑换次数",
                    type: "input",
                    value: 1
                }],
                reset: function() {
                    this.form[0].value = 0, this.form[1].value = 1
                },
                set: function(e) {
                    var t = {
                        targetIndex: 0,
                        number: 1
                    };
                    Object.assign(t, e), this.form[0].value = t.targetIndex, this.form[1].value = t.number
                }
            }, (function() {
                var e, t, n, r = this.form[0].value,
                    u = Number(this.form[1].value) || 1;

                function i() {
                    return o.apply(this, arguments)
                }

                function o() {
                    return o = (0, a.default)(regeneratorRuntime.mark((function r() {
                        var a, c, o, f;
                        return regeneratorRuntime.wrap((function(r) {
                            while (1) switch (r.prev = r.next) {
                                case 0:
                                    return r.next = 2, s.task.sleep();
                                case 2:
                                    return r.next = 4, s.task.send("npc ".concat(e, " ").concat(t), ["[~1]", "请明天再来吧"]);
                                case 4:
                                    if (a = r.sent, c = a.index, 0 !== c) {
                                        r.next = 27;
                                        break
                                    }
                                    return r.next = 9, s.task.sleep();
                                case 9:
                                    return r.next = 11, s.task.send("1", ["查看地图", "得到", "需要"]);
                                case 11:
                                    if (o = r.sent, f = o.index, 0 !== f) {
                                        r.next = 22;
                                        break
                                    }
                                    return r.next = 16, s.task.sleep();
                                case 16:
                                    return r.next = 18, s.task.send("cl", ["cnt", "Command Unknown"]);
                                case 18:
                                    return r.next = 20, i();
                                case 20:
                                    r.next = 27;
                                    break;
                                case 22:
                                    if (1 !== f) {
                                        r.next = 27;
                                        break
                                    }
                                    if (n++, !(n < u)) {
                                        r.next = 27;
                                        break
                                    }
                                    return r.next = 27, i();
                                case 27:
                                case "end":
                                    return r.stop()
                            }
                        }), r)
                    }))), o.apply(this, arguments)
                }

                function f() {
                    return l.apply(this, arguments)
                }

                function l() {
                    return l = (0, a.default)(regeneratorRuntime.mark((function a() {
                        var u, o;
                        return regeneratorRuntime.wrap((function(a) {
                            while (1) switch (a.prev = a.next) {
                                case 0:
                                    return a.next = 2, s.task.move("lbsc 233", "彩云谷");
                                case 2:
                                    return u = 4 === r ? c[0] : c[r], e = u.npc, t = u.code, n = 0, a.next = 8, i();
                                case 8:
                                    if (4 !== r) {
                                        a.next = 15;
                                        break
                                    }
                                    return o = c[1], e = o.npc, t = o.code, n = 0, a.next = 15, i();
                                case 15:
                                case "end":
                                    return a.stop()
                            }
                        }), a)
                    }))), l.apply(this, arguments)
                }
                return f()
            }));
        t.default = u
    },
    "00a5": function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0;
        var r = n("3f7e"),
            a = new r.Task({
                title: "精灵学院大会考-领奖",
                tags: ["event"]
            }, (function() {
                return r.task.move("sgpy 107", "办公区").then((function() {
                    return r.task.sleep()
                })).then((function() {
                    return r.task.send("npc 1004 6", "<pmg")
                }))
            }));
        t.default = a
    },
    "00bb": function(e, t, n) {
        (function(t, r, a) {
            e.exports = r(n("21bf"), n("38ba"))
        })(0, (function(e) {
            return e.mode.CFB = function() {
                var t = e.lib.BlockCipherMode.extend();

                function n(e, t, n, r) {
                    var a, s = this._iv;
                    s ? (a = s.slice(0), this._iv = void 0) : a = this._prevBlock, r.encryptBlock(a, 0);
                    for (var c = 0; c < n; c++) e[t + c] ^= a[c]
                }
                return t.Encryptor = t.extend({
                    processBlock: function(e, t) {
                        var r = this._cipher,
                            a = r.blockSize;
                        n.call(this, e, t, a, r), this._prevBlock = e.slice(t, t + a)
                    }
                }), t.Decryptor = t.extend({
                    processBlock: function(e, t) {
                        var r = this._cipher,
                            a = r.blockSize,
                            s = e.slice(t, t + a);
                        n.call(this, e, t, a, r), this._prevBlock = s
                    }
                }), t
            }(), e.mode.CFB
        }))
    },
    "014b": function(e, t, n) {
        "use strict";
        var r = n("e53d"),
            a = n("07e3"),
            s = n("8e60"),
            c = n("63b6"),
            u = n("9138"),
            i = n("ebfd").KEY,
            o = n("294c"),
            f = n("dbdb"),
            l = n("45f2"),
            p = n("62a0"),
            d = n("5168"),
            x = n("ccb9"),
            h = n("6718"),
            k = n("47ee"),
            v = n("9003"),
            m = n("e4ae"),
            b = n("f772"),
            g = n("241e"),
            y = n("36c3"),
            w = n("1bc3"),
            _ = n("aebd"),
            R = n("a159"),
            M = n("0395"),
            j = n("bf0b"),
            E = n("9aa9"),
            S = n("d9f6"),
            O = n("c3a1"),
            P = j.f,
            A = S.f,
            T = M.f,
            B = r.Symbol,
            N = r.JSON,
            I = N && N.stringify,
            z = "prototype",
            C = d("_hidden"),
            D = d("toPrimitive"),
            L = {}.propertyIsEnumerable,
            H = f("symbol-registry"),
            F = f("symbols"),
            $ = f("op-symbols"),
            W = Object[z],
            q = "function" == typeof B && !!E.f,
            U = r.QObject,
            V = !U || !U[z] || !U[z].findChild,
            G = s && o((function() {
                return 7 != R(A({}, "a", {
                    get: function() {
                        return A(this, "a", {
                            value: 7
                        }).a
                    }
                })).a
            })) ? function(e, t, n) {
                var r = P(W, t);
                r && delete W[t], A(e, t, n), r && e !== W && A(W, t, r)
            } : A,
            K = function(e) {
                var t = F[e] = R(B[z]);
                return t._k = e, t
            },
            X = q && "symbol" == typeof B.iterator ? function(e) {
                return "symbol" == typeof e
            } : function(e) {
                return e instanceof B
            },
            Y = function(e, t, n) {
                return e === W && Y($, t, n), m(e), t = w(t, !0), m(n), a(F, t) ? (n.enumerable ? (a(e, C) && e[C][t] && (e[C][t] = !1), n = R(n, {
                    enumerable: _(0, !1)
                })) : (a(e, C) || A(e, C, _(1, {})), e[C][t] = !0), G(e, t, n)) : A(e, t, n)
            },
            J = function(e, t) {
                m(e);
                var n, r = k(t = y(t)),
                    a = 0,
                    s = r.length;
                while (s > a) Y(e, n = r[a++], t[n]);
                return e
            },
            Z = function(e, t) {
                return void 0 === t ? R(e) : J(R(e), t)
            },
            Q = function(e) {
                var t = L.call(this, e = w(e, !0));
                return !(this === W && a(F, e) && !a($, e)) && (!(t || !a(this, e) || !a(F, e) || a(this, C) && this[C][e]) || t)
            },
            ee = function(e, t) {
                if (e = y(e), t = w(t, !0), e !== W || !a(F, t) || a($, t)) {
                    var n = P(e, t);
                    return !n || !a(F, t) || a(e, C) && e[C][t] || (n.enumerable = !0), n
                }
            },
            te = function(e) {
                var t, n = T(y(e)),
                    r = [],
                    s = 0;
                while (n.length > s) a(F, t = n[s++]) || t == C || t == i || r.push(t);
                return r
            },
            ne = function(e) {
                var t, n = e === W,
                    r = T(n ? $ : y(e)),
                    s = [],
                    c = 0;
                while (r.length > c) !a(F, t = r[c++]) || n && !a(W, t) || s.push(F[t]);
                return s
            };
        q || (B = function() {
            if (this instanceof B) throw TypeError("Symbol is not a constructor!");
            var e = p(arguments.length > 0 ? arguments[0] : void 0),
                t = function(n) {
                    this === W && t.call($, n), a(this, C) && a(this[C], e) && (this[C][e] = !1), G(this, e, _(1, n))
                };
            return s && V && G(W, e, {
                configurable: !0,
                set: t
            }), K(e)
        }, u(B[z], "toString", (function() {
            return this._k
        })), j.f = ee, S.f = Y, n("6abf").f = M.f = te, n("355d").f = Q, E.f = ne, s && !n("b8e3") && u(W, "propertyIsEnumerable", Q, !0), x.f = function(e) {
            return K(d(e))
        }), c(c.G + c.W + c.F * !q, {
            Symbol: B
        });
        for (var re = "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","), ae = 0; re.length > ae;) d(re[ae++]);
        for (var se = O(d.store), ce = 0; se.length > ce;) h(se[ce++]);
        c(c.S + c.F * !q, "Symbol", {
            for: function(e) {
                return a(H, e += "") ? H[e] : H[e] = B(e)
            },
            keyFor: function(e) {
                if (!X(e)) throw TypeError(e + " is not a symbol!");
                for (var t in H)
                    if (H[t] === e) return t
            },
            useSetter: function() {
                V = !0
            },
            useSimple: function() {
                V = !1
            }
        }), c(c.S + c.F * !q, "Object", {
            create: Z,
            defineProperty: Y,
            defineProperties: J,
            getOwnPropertyDescriptor: ee,
            getOwnPropertyNames: te,
            getOwnPropertySymbols: ne
        });
        var ue = o((function() {
            E.f(1)
        }));
        c(c.S + c.F * ue, "Object", {
            getOwnPropertySymbols: function(e) {
                return E.f(g(e))
            }
        }), N && c(c.S + c.F * (!q || o((function() {
            var e = B();
            return "[null]" != I([e]) || "{}" != I({
                a: e
            }) || "{}" != I(Object(e))
        }))), "JSON", {
            stringify: function(e) {
                var t, n, r = [e],
                    a = 1;
                while (arguments.length > a) r.push(arguments[a++]);
                if (n = t = r[1], (b(t) || void 0 !== e) && !X(e)) return v(t) || (t = function(e, t) {
                    if ("function" == typeof n && (t = n.call(this, e, t)), !X(t)) return t
                }), r[1] = t, I.apply(N, r)
            }
        }), B[z][D] || n("35e8")(B[z], D, B[z].valueOf), l(B, "Symbol"), l(Math, "Math", !0), l(r.JSON, "JSON", !0)
    },
    "01f9": function(e, t, n) {
        "use strict";
        var r = n("2d00"),
            a = n("5ca1"),
            s = n("2aba"),
            c = n("32e9"),
            u = n("84f2"),
            i = n("41a0"),
            o = n("7f20"),
            f = n("38fd"),
            l = n("2b4c")("iterator"),
            p = !([].keys && "next" in [].keys()),
            d = "@@iterator",
            x = "keys",
            h = "values",
            k = function() {
                return this
            };
        e.exports = function(e, t, n, v, m, b, g) {
            i(n, t, v);
            var y, w, _, R = function(e) {
                    if (!p && e in S) return S[e];
                    switch (e) {
                        case x:
                            return function() {
                                return new n(this, e)
                            };
                        case h:
                            return function() {
                                return new n(this, e)
                            }
                    }
                    return function() {
                        return new n(this, e)
                    }
                },
                M = t + " Iterator",
                j = m == h,
                E = !1,
                S = e.prototype,
                O = S[l] || S[d] || m && S[m],
                P = O || R(m),
                A = m ? j ? R("entries") : P : void 0,
                T = "Array" == t && S.entries || O;
            if (T && (_ = f(T.call(new e)), _ !== Object.prototype && _.next && (o(_, M, !0), r || "function" == typeof _[l] || c(_, l, k))), j && O && O.name !== h && (E = !0, P = function() {
                    return O.call(this)
                }), r && !g || !p && !E && S[l] || c(S, l, P), u[t] = P, u[M] = k, m)
                if (y = {
                        values: j ? P : R(h),
                        keys: b ? P : R(x),
                        entries: A
                    }, g)
                    for (w in y) w in S || s(S, w, y[w]);
                else a(a.P + a.F * (p || E), t, y);
            return y
        }
    },
    "02c4": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("7514"), n("c5f6"), n("6762"), n("2fdb"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = [{
                title: "圣品.逆技能抗性宝石",
                menu: "普通",
                code: "0"
            }, {
                title: "圣品.逆物理抗性宝石",
                menu: "普通",
                code: "0"
            }, {
                title: "普通积分-自定义",
                menu: "普通",
                code: "0"
            }, {
                title: "神品.全蓝色剂30",
                menu: "高级",
                code: "1"
            }, {
                title: "圣品.技能抗性宝石",
                menu: "高级",
                code: "1"
            }, {
                title: "圣品.物理抗性宝石",
                menu: "高级",
                code: "1"
            }, {
                title: "高级积分-自定义",
                menu: "高级",
                code: "1"
            }],
            u = new s.Task({
                title: "战魂积分兑换",
                tags: ["change"],
                options: {
                    target: {},
                    taskMax: void 0,
                    taskIndex: void 0
                },
                before: function() {
                    var e = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var t, n, r, a, u, i, o, f, l;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return t = this.options, e.next = 3, (0, s.showActionSheet)({
                                        itemList: c.map((function(e) {
                                            var t = e.title;
                                            return t
                                        }))
                                    });
                                case 3:
                                    if (n = e.sent, r = n.tapIndex, !(r < 0)) {
                                        e.next = 7;
                                        break
                                    }
                                    throw new Error("取消");
                                case 7:
                                    if (Object.assign(t.target, c[r]), !t.target.title.includes("自定义")) {
                                        e.next = 17;
                                        break
                                    }
                                    return e.next = 11, (0, s.x0popup)("输入兑换物品名称", null, "input");
                                case 11:
                                    if (a = e.sent, u = a.button, i = a.text, "cancel" !== u && i) {
                                        e.next = 16;
                                        break
                                    }
                                    throw new Error("取消");
                                case 16:
                                    t.target.title = i;
                                case 17:
                                    return e.next = 19, (0, s.x0popup)({
                                        title: "输入兑换次数",
                                        type: "input",
                                        inputValue: "10"
                                    });
                                case 19:
                                    if (o = e.sent, f = o.button, l = o.text, l = Number(l), "cancel" !== f && l) {
                                        e.next = 25;
                                        break
                                    }
                                    throw new Error("取消");
                                case 25:
                                    t.taskMax = l, t.taskIndex = 0;
                                case 27:
                                case "end":
                                    return e.stop()
                            }
                        }), e, this)
                    })));

                    function t() {
                        return e.apply(this, arguments)
                    }
                    return t
                }()
            }, (function() {
                var e = this.options;

                function t() {
                    return n.apply(this, arguments)
                }

                function n() {
                    return n = (0, a.default)(regeneratorRuntime.mark((function n() {
                        var r, a, c, u, i, o, f, l, p;
                        return regeneratorRuntime.wrap((function(n) {
                            while (1) switch (n.prev = n.next) {
                                case 0:
                                    return n.next = 2, s.task.sleep();
                                case 2:
                                    return n.next = 4, s.task.send("npc 1001 ".concat(e.target.code), "想换点什么");
                                case 4:
                                    if (r = n.sent, a = r.text, c = (0, s.parseMsg)(a).data.list, u = c.find((function(t) {
                                            var n = t.title;
                                            return n.includes(e.target.title)
                                        })), u) {
                                        n.next = 14;
                                        break
                                    }
                                    return i = "未找到此物品", uni.showToast({
                                        title: i,
                                        icon: "none"
                                    }), n.next = 13, s.task.send("cnt", "cnt");
                                case 13:
                                    throw new Error(i);
                                case 14:
                                    return o = u.code, n.next = 17, s.task.sleep();
                                case 17:
                                    return n.next = 19, s.task.send(o, ["你准备使用", "你现在还兑换不了"]);
                                case 19:
                                    if (f = n.sent, l = f.index, p = f.text, 1 !== l) {
                                        n.next = 24;
                                        break
                                    }
                                    throw new Error(p);
                                case 24:
                                    return n.next = 26, s.task.sleep();
                                case 26:
                                    return n.next = 28, s.task.send("ok", "兑换好了");
                                case 28:
                                    if (e.taskIndex++, !(e.taskIndex < e.taskMax)) {
                                        n.next = 32;
                                        break
                                    }
                                    return n.next = 32, t();
                                case 32:
                                case "end":
                                    return n.stop()
                            }
                        }), n)
                    }))), n.apply(this, arguments)
                }
                return s.task.move("lsj 200", "里闪光.无垢者之城").then(t)
            }));
        t.default = u
    },
    "02f4": function(e, t, n) {
        var r = n("4588"),
            a = n("be13");
        e.exports = function(e) {
            return function(t, n) {
                var s, c, u = String(a(t)),
                    i = r(n),
                    o = u.length;
                return i < 0 || i >= o ? e ? "" : void 0 : (s = u.charCodeAt(i), s < 55296 || s > 56319 || i + 1 === o || (c = u.charCodeAt(i + 1)) < 56320 || c > 57343 ? e ? u.charAt(i) : s : e ? u.slice(i, i + 2) : c - 56320 + (s - 55296 << 10) + 65536)
            }
        }
    },
    "0390": function(e, t, n) {
        "use strict";
        var r = n("02f4")(!0);
        e.exports = function(e, t, n) {
            return t + (n ? r(e, t).length : 1)
        }
    },
    "0395": function(e, t, n) {
        var r = n("36c3"),
            a = n("6abf").f,
            s = {}.toString,
            c = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [],
            u = function(e) {
                try {
                    return a(e)
                } catch (t) {
                    return c.slice()
                }
            };
        e.exports.f = function(e) {
            return c && "[object Window]" == s.call(e) ? u(e) : a(r(e))
        }
    },
    "0458": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = r(n("275e")),
            u = new s.Task({
                title: "仙人修炼塔",
                tags: ["event"]
            }, (function() {
                var e = 0;

                function t() {
                    return n.apply(this, arguments)
                }

                function n() {
                    return n = (0, a.default)(regeneratorRuntime.mark((function n() {
                        var r, a;
                        return regeneratorRuntime.wrap((function(n) {
                            while (1) switch (n.prev = n.next) {
                                case 0:
                                    return n.next = 2, s.task.sleep();
                                case 2:
                                    if (10 !== e) {
                                        n.next = 4;
                                        break
                                    }
                                    return n.abrupt("return");
                                case 4:
                                    if (0 !== e) {
                                        n.next = 9;
                                        break
                                    }
                                    return n.next = 7, s.task.move("xrwst 107", "低级修炼区");
                                case 7:
                                    n.next = 12;
                                    break;
                                case 9:
                                    if (5 !== e) {
                                        n.next = 12;
                                        break
                                    }
                                    return n.next = 12, s.task.move("xrwst 108", "高级修炼区");
                                case 12:
                                    return n.next = 14, s.task.sleep();
                                case 14:
                                    return n.next = 16, s.task.send("npc 100".concat(e % 5, " 0"), ["方可获得奖励", "你得到了", "你今天已领过"]);
                                case 16:
                                    if (r = n.sent, a = r.index, 0 !== a) {
                                        n.next = 25;
                                        break
                                    }
                                    return c.default.reset(), c.default.set({
                                        code: "npc 100".concat(e % 5, " h"),
                                        find: /你获胜了/
                                    }), n.next = 23, c.default.start();
                                case 23:
                                    return n.next = 25, s.task.send("npc 100".concat(e % 5, " 0"), ["你得到了"]);
                                case 25:
                                    return e++, n.next = 28, t();
                                case 28:
                                case "end":
                                    return n.stop()
                            }
                        }), n)
                    }))), n.apply(this, arguments)
                }
                return t()
            }));
        t.default = u
    },
    "07e3": function(e, t) {
        var n = {}.hasOwnProperty;
        e.exports = function(e, t) {
            return n.call(e, t)
        }
    },
    "0800": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("6762"), n("2fdb"), n("c5f6"), n("7514"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = new s.Task({
                title: "全服竞技场",
                tags: ["event"],
                form: [{
                    title: "对手",
                    type: "input",
                    placeholder: "名称/序号",
                    focus: !0,
                    value: ""
                }]
            }, (function() {
                var e = this.form[0].value;
                if (e) return t();

                function t() {
                    return n.apply(this, arguments)
                }

                function n() {
                    return n = (0, a.default)(regeneratorRuntime.mark((function n() {
                        var r, a, c, u, i, o, f, l;
                        return regeneratorRuntime.wrap((function(n) {
                            while (1) switch (n.prev = n.next) {
                                case 0:
                                    return n.next = 2, s.task.sleep();
                                case 2:
                                    return n.next = 4, s.task.send("rg_pvp", "<menu");
                                case 4:
                                    return n.next = 6, s.task.sleep();
                                case 6:
                                    return n.next = 8, s.task.send("enter_room", ["<menu", "<pmg>你今天已经没有"]);
                                case 8:
                                    if (r = n.sent, a = r.text, c = r.index, !(c > 0)) {
                                        n.next = 13;
                                        break
                                    }
                                    throw new Error(a);
                                case 13:
                                    return u = (0, s.parseMsg)(a).data.list, i = u.find((function(t, n) {
                                        var r = t.title;
                                        return /^\d+$/.test(e) && Number(e) < 30 ? Number(e) === n + 1 : r.includes(e)
                                    })), n.next = 17, s.task.sleep();
                                case 17:
                                    if (i) {
                                        n.next = 25;
                                        break
                                    }
                                    return n.next = 20, s.task.cancel();
                                case 20:
                                    throw o = "目标未找到", s.task.log(o), new Error(o);
                                case 25:
                                    return n.next = 27, s.task.send(i.code, ["combat", "请重新挑战"]);
                                case 27:
                                    if (f = n.sent, l = f.index, 0 !== l) {
                                        n.next = 32;
                                        break
                                    }
                                    return n.next = 32, new Promise((function(e) {
                                        uni.$once("combatready", e)
                                    }));
                                case 32:
                                    return n.next = 34, t();
                                case 34:
                                case "end":
                                    return n.stop()
                            }
                        }), n)
                    }))), n.apply(this, arguments)
                }
            }));
        t.default = c
    },
    "0a49": function(e, t, n) {
        var r = n("9b43"),
            a = n("626a"),
            s = n("4bf8"),
            c = n("9def"),
            u = n("cd1c");
        e.exports = function(e, t) {
            var n = 1 == e,
                i = 2 == e,
                o = 3 == e,
                f = 4 == e,
                l = 6 == e,
                p = 5 == e || l,
                d = t || u;
            return function(t, u, x) {
                for (var h, k, v = s(t), m = a(v), b = r(u, x, 3), g = c(m.length), y = 0, w = n ? d(t, g) : i ? d(t, 0) : void 0; g > y; y++)
                    if ((p || y in m) && (h = m[y], k = b(h, y, v), e))
                        if (n) w[y] = k;
                        else if (k) switch (e) {
                    case 3:
                        return !0;
                    case 5:
                        return h;
                    case 6:
                        return y;
                    case 2:
                        w.push(h)
                } else if (f) return !1;
                return l ? -1 : o || f ? f : w
            }
        }
    },
    "0bfb": function(e, t, n) {
        "use strict";
        var r = n("cb7c");
        e.exports = function() {
            var e = r(this),
                t = "";
            return e.global && (t += "g"), e.ignoreCase && (t += "i"), e.multiline && (t += "m"), e.unicode && (t += "u"), e.sticky && (t += "y"), t
        }
    },
    "0c86": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("4917"), n("6762"), n("2fdb"), n("7514"), n("96cf");
        var a = r(n("3b8d"));
        n("c5f6");
        var s = n("3f7e"),
            c = new s.Task({
                title: "锻造宝石圣锻",
                tags: ["item"],
                form: [{
                    title: "装备名称",
                    type: "input",
                    focus: !0,
                    value: ""
                }, {
                    title: "最大次数",
                    type: "input",
                    value: 6
                }]
            }, (function() {
                var e = this.form[0].value || "xx",
                    t = Number(this.form[1].value) || 1;

                function n() {
                    return r.apply(this, arguments)
                }

                function r() {
                    return r = (0, a.default)(regeneratorRuntime.mark((function r() {
                        var a, c, u, i, o, f, l, p, d, x, h;
                        return regeneratorRuntime.wrap((function(r) {
                            while (1) switch (r.prev = r.next) {
                                case 0:
                                    return r.next = 2, s.task.sleep();
                                case 2:
                                    return r.next = 4, (0, s.findItem)(e, 1);
                                case 4:
                                    if (a = r.sent, a) {
                                        r.next = 7;
                                        break
                                    }
                                    throw new Error("装备未找到");
                                case 7:
                                    return c = a.list.find((function(e) {
                                        var t = e.title;
                                        return t.includes("圣锻")
                                    })), r.next = 10, s.task.sleep();
                                case 10:
                                    if (c) {
                                        r.next = 12;
                                        break
                                    }
                                    throw new Error("装备不支持圣锻");
                                case 12:
                                    return r.next = 14, s.task.send("".concat(a.code, " ").concat(c.code), ["选择石头", "你现在没有能用的", "圣锻满了"]);
                                case 14:
                                    if (u = r.sent, i = u.index, o = u.text, !(i > 0)) {
                                        r.next = 19;
                                        break
                                    }
                                    throw new Error(o);
                                case 19:
                                    return f = (0, s.parseMsg)(o).data.list, l = f.find((function(e) {
                                        var t = e.title;
                                        return "锻造宝石" === (0, s.clearText)(t)
                                    })), r.next = 23, s.task.sleep();
                                case 23:
                                    if (!l) {
                                        r.next = 37;
                                        break
                                    }
                                    return r.next = 26, s.task.send(l.code, ["圣锻成功", "圣锻失败"]);
                                case 26:
                                    if (p = r.sent, d = p.index, x = p.text, 0 !== d) {
                                        r.next = 33;
                                        break
                                    }
                                    if (h = x.match(/圣锻倍率.+\( (\d+) \/ (\d+) \)/), !(h[1] >= t || h[1] === h[2])) {
                                        r.next = 33;
                                        break
                                    }
                                    return r.abrupt("return");
                                case 33:
                                    return r.next = 35, n();
                                case 35:
                                    r.next = 40;
                                    break;
                                case 37:
                                    return r.next = 39, s.task.cancel(!0);
                                case 39:
                                    throw new Error("无锻造宝石");
                                case 40:
                                case "end":
                                    return r.stop()
                            }
                        }), r)
                    }))), r.apply(this, arguments)
                }
                return n()
            }));
        t.default = c
    },
    "0cdf": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("c5f6"), n("4917");
        var a = r(n("768b"));
        n("28a5"), n("96cf");
        var s = r(n("3b8d")),
            c = n("3f7e"),
            u = r(n("aa72")),
            i = r(n("5b6c")),
            o = r(n("e845")),
            f = r(n("31ee")),
            l = new c.Task({
                title: "月亮石活动(持续刷月)",
                tags: ["event"],
                batch: !1,
                form: [{
                    title: "挂机地点",
                    type: "picker",
                    range: [{
                        title: "夜雪宁地 用地、风",
                        code: "ylshd 101"
                    }, {
                        title: "残月平原 用火、风",
                        code: "ylshd 102"
                    }, {
                        title: "宁寂之谷 用水",
                        code: "ylshd 103"
                    }],
                    value: 1
                }, {
                    title: "爱心处理方式",
                    type: "picker",
                    range: ["奉献爱心", "不处理"],
                    value: 0
                }, {
                    title: "精魄处理方式",
                    type: "picker",
                    range: ["兑换经验", "兑换材料", "存仓库", "不处理"],
                    value: 1
                }, {
                    title: "月亮处理方式",
                    type: "picker",
                    range: ["打包", "存仓库", "不处理"],
                    value: 0
                }, {
                    title: "其他物品存仓",
                    type: "input",
                    placeholder: "多个用|分割",
                    value: ""
                }]
            }, (function() {
                var e = this.form[0],
                    t = e.range[e.value],
                    n = this.form[1].value,
                    r = this.form[2].value,
                    l = this.form[3].value,
                    p = (0, c.toArray)(this.form[4].value);

                function d() {
                    return x.apply(this, arguments)
                }

                function x() {
                    return x = (0, s.default)(regeneratorRuntime.mark((function e() {
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    if (n) {
                                        e.next = 3;
                                        break
                                    }
                                    return e.next = 3, u.default.start(!1);
                                case 3:
                                    if (2 !== r) {
                                        e.next = 7;
                                        break
                                    }
                                    p.push("燃烧的精魄"), e.next = 11;
                                    break;
                                case 7:
                                    if (3 === r) {
                                        e.next = 11;
                                        break
                                    }
                                    return i.default.set({
                                        target: r
                                    }), e.next = 11, i.default.start(!1);
                                case 11:
                                    if (0 !== l) {
                                        e.next = 16;
                                        break
                                    }
                                    return e.next = 14, o.default.start(!1, !0, 1);
                                case 14:
                                    e.next = 17;
                                    break;
                                case 16:
                                    1 === l && p.push("精灵王月亮石");
                                case 17:
                                    if (!p.length) {
                                        e.next = 22;
                                        break
                                    }
                                    return f.default.reset(), f.default.set({
                                        target: 0,
                                        items: p
                                    }), e.next = 22, f.default.start(!1, !1);
                                case 22:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), x.apply(this, arguments)
                }

                function h() {
                    return k.apply(this, arguments)
                }

                function k() {
                    return k = (0, s.default)(regeneratorRuntime.mark((function e() {
                        var n, r, s, u, i, o, f, l;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, c.task.sleep();
                                case 2:
                                    return e.next = 4, c.task.move(t.code, t.title.split(" ")[0]);
                                case 4:
                                    return e.next = 6, c.task.sleep();
                                case 6:
                                    return e.next = 8, c.task.send("npc 1002 h", ["你现在很累了", "<r>walk ", "combat"]);
                                case 8:
                                    if (n = e.sent, r = n.index, s = n.text, 0 !== r && 1 !== r) {
                                        e.next = 18;
                                        break
                                    }
                                    return console.warn(s), u = s.match(/(\d+) 秒之后就行/) || ["", 2], i = (0, a.default)(u, 2), i[0], o = i[1], e.next = 16, c.task.sleep(1e3 * Number(o));
                                case 16:
                                    e.next = 25;
                                    break;
                                case 18:
                                    return e.next = 20, new Promise((function(e) {
                                        uni.$once("combatready", e)
                                    }));
                                case 20:
                                    if (f = e.sent, l = f.needClear, !l) {
                                        e.next = 25;
                                        break
                                    }
                                    return e.next = 25, d();
                                case 25:
                                    return e.next = 27, h();
                                case 27:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), k.apply(this, arguments)
                }
                return h()
            }));
        t.default = l
    },
    "0d58": function(e, t, n) {
        var r = n("ce10"),
            a = n("e11e");
        e.exports = Object.keys || function(e) {
            return r(e, a)
        }
    },
    "0fc9": function(e, t, n) {
        var r = n("3a38"),
            a = Math.max,
            s = Math.min;
        e.exports = function(e, t) {
            return e = r(e), e < 0 ? a(e + t, 0) : s(e, t)
        }
    },
    "10b7": function(e, t, n) {
        (function(t, r) {
            e.exports = r(n("21bf"))
        })(0, (function(e) {
            /** @preserve
            	(c) 2012 by Cédric Mesnil. All rights reserved.

            	Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

            	    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
            	    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

            	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
            	*/
            return function(t) {
                var n = e,
                    r = n.lib,
                    a = r.WordArray,
                    s = r.Hasher,
                    c = n.algo,
                    u = a.create([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]),
                    i = a.create([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]),
                    o = a.create([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]),
                    f = a.create([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]),
                    l = a.create([0, 1518500249, 1859775393, 2400959708, 2840853838]),
                    p = a.create([1352829926, 1548603684, 1836072691, 2053994217, 0]),
                    d = c.RIPEMD160 = s.extend({
                        _doReset: function() {
                            this._hash = a.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520])
                        },
                        _doProcessBlock: function(e, t) {
                            for (var n = 0; n < 16; n++) {
                                var r = t + n,
                                    a = e[r];
                                e[r] = 16711935 & (a << 8 | a >>> 24) | 4278255360 & (a << 24 | a >>> 8)
                            }
                            var s, c, d, g, y, w, _, R, M, j, E, S = this._hash.words,
                                O = l.words,
                                P = p.words,
                                A = u.words,
                                T = i.words,
                                B = o.words,
                                N = f.words;
                            w = s = S[0], _ = c = S[1], R = d = S[2], M = g = S[3], j = y = S[4];
                            for (n = 0; n < 80; n += 1) E = s + e[t + A[n]] | 0, E += n < 16 ? x(c, d, g) + O[0] : n < 32 ? h(c, d, g) + O[1] : n < 48 ? k(c, d, g) + O[2] : n < 64 ? v(c, d, g) + O[3] : m(c, d, g) + O[4], E |= 0, E = b(E, B[n]), E = E + y | 0, s = y, y = g, g = b(d, 10), d = c, c = E, E = w + e[t + T[n]] | 0, E += n < 16 ? m(_, R, M) + P[0] : n < 32 ? v(_, R, M) + P[1] : n < 48 ? k(_, R, M) + P[2] : n < 64 ? h(_, R, M) + P[3] : x(_, R, M) + P[4], E |= 0, E = b(E, N[n]), E = E + j | 0, w = j, j = M, M = b(R, 10), R = _, _ = E;
                            E = S[1] + d + M | 0, S[1] = S[2] + g + j | 0, S[2] = S[3] + y + w | 0, S[3] = S[4] + s + _ | 0, S[4] = S[0] + c + R | 0, S[0] = E
                        },
                        _doFinalize: function() {
                            var e = this._data,
                                t = e.words,
                                n = 8 * this._nDataBytes,
                                r = 8 * e.sigBytes;
                            t[r >>> 5] |= 128 << 24 - r % 32, t[14 + (r + 64 >>> 9 << 4)] = 16711935 & (n << 8 | n >>> 24) | 4278255360 & (n << 24 | n >>> 8), e.sigBytes = 4 * (t.length + 1), this._process();
                            for (var a = this._hash, s = a.words, c = 0; c < 5; c++) {
                                var u = s[c];
                                s[c] = 16711935 & (u << 8 | u >>> 24) | 4278255360 & (u << 24 | u >>> 8)
                            }
                            return a
                        },
                        clone: function() {
                            var e = s.clone.call(this);
                            return e._hash = this._hash.clone(), e
                        }
                    });

                function x(e, t, n) {
                    return e ^ t ^ n
                }

                function h(e, t, n) {
                    return e & t | ~e & n
                }

                function k(e, t, n) {
                    return (e | ~t) ^ n
                }

                function v(e, t, n) {
                    return e & n | t & ~n
                }

                function m(e, t, n) {
                    return e ^ (t | ~n)
                }

                function b(e, t) {
                    return e << t | e >>> 32 - t
                }
                n.RIPEMD160 = s._createHelper(d), n.HmacRIPEMD160 = s._createHmacHelper(d)
            }(Math), e.RIPEMD160
        }))
    },
    1132: function(e, t, n) {
        (function(t, r) {
            e.exports = r(n("21bf"))
        })(0, (function(e) {
            return function() {
                var t = e,
                    n = t.lib,
                    r = n.WordArray,
                    a = t.enc;
                a.Base64 = {
                    stringify: function(e) {
                        var t = e.words,
                            n = e.sigBytes,
                            r = this._map;
                        e.clamp();
                        for (var a = [], s = 0; s < n; s += 3)
                            for (var c = t[s >>> 2] >>> 24 - s % 4 * 8 & 255, u = t[s + 1 >>> 2] >>> 24 - (s + 1) % 4 * 8 & 255, i = t[s + 2 >>> 2] >>> 24 - (s + 2) % 4 * 8 & 255, o = c << 16 | u << 8 | i, f = 0; f < 4 && s + .75 * f < n; f++) a.push(r.charAt(o >>> 6 * (3 - f) & 63));
                        var l = r.charAt(64);
                        if (l)
                            while (a.length % 4) a.push(l);
                        return a.join("")
                    },
                    parse: function(e) {
                        var t = e.length,
                            n = this._map,
                            r = this._reverseMap;
                        if (!r) {
                            r = this._reverseMap = [];
                            for (var a = 0; a < n.length; a++) r[n.charCodeAt(a)] = a
                        }
                        var c = n.charAt(64);
                        if (c) {
                            var u = e.indexOf(c); - 1 !== u && (t = u)
                        }
                        return s(e, t, r)
                    },
                    _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
                };

                function s(e, t, n) {
                    for (var a = [], s = 0, c = 0; c < t; c++)
                        if (c % 4) {
                            var u = n[e.charCodeAt(c - 1)] << c % 4 * 2,
                                i = n[e.charCodeAt(c)] >>> 6 - c % 4 * 2,
                                o = u | i;
                            a[s >>> 2] |= o << 24 - s % 4 * 8, s++
                        } return r.create(a, s)
                }
            }(), e.enc.Base64
        }))
    },
    "115a": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("4917"), n("c5f6"), n("6762"), n("2fdb"), n("7514"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = ["生产木材", "生产金属", "生产皮革"],
            u = new s.Task({
                title: "生产材料(木材/金属/皮革)",
                tags: ["item"],
                form: [{
                    title: "类型",
                    type: "picker",
                    range: c,
                    value: 0
                }]
            }, (function() {
                var e = this.form[0].value,
                    t = c[e];

                function n() {
                    return r.apply(this, arguments)
                }

                function r() {
                    return r = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var r, a, c, u, i, o, f, l, p, d, x, h;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.next = 4, s.task.send("pdg 0", "生产材料");
                                case 4:
                                    return r = e.sent, a = r.text, c = (0, s.parseMsg)(a).data.list, u = c.find((function(e) {
                                        var n = e.title;
                                        return n.includes(t)
                                    })), i = u ? Number(u.title.match(/(\d+) \//)[1]) : 0, e.next = 11, s.task.sleep();
                                case 11:
                                    if (!i) {
                                        e.next = 37;
                                        break
                                    }
                                    return e.next = 14, s.task.send(u.code, "<menu");
                                case 14:
                                    return o = e.sent, f = o.text, l = (0, s.parseMsg)(f).data.list, p = l[i - 1] || l[l.length - 2], e.next = 20, s.task.sleep();
                                case 20:
                                    return e.next = 22, s.task.send(p.code, "准备生产");
                                case 22:
                                    return e.next = 24, s.task.sleep();
                                case 24:
                                    return e.next = 26, s.task.send("scn", "<input");
                                case 26:
                                    return d = e.sent, x = d.text, h = x.match(/(\d+)次/)[1], e.next = 31, s.task.sleep();
                                case 31:
                                    return e.next = 33, s.task.send(h, "生产成功");
                                case 33:
                                    return e.next = 35, n();
                                case 35:
                                    e.next = 39;
                                    break;
                                case 37:
                                    return e.next = 39, s.task.send("cnt").sleep(1e3);
                                case 39:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), r.apply(this, arguments)
                }
                return n()
            }));
        t.default = u
    },
    1169: function(e, t, n) {
        var r = n("2d95");
        e.exports = Array.isArray || function(e) {
            return "Array" == r(e)
        }
    },
    1173: function(e, t) {
        e.exports = function(e, t, n, r) {
            if (!(e instanceof t) || void 0 !== r && r in e) throw TypeError(n + ": incorrect invocation!");
            return e
        }
    },
    "11e9": function(e, t, n) {
        var r = n("52a7"),
            a = n("4630"),
            s = n("6821"),
            c = n("6a99"),
            u = n("69a8"),
            i = n("c69a"),
            o = Object.getOwnPropertyDescriptor;
        t.f = n("9e1e") ? o : function(e, t) {
            if (e = s(e), t = c(t, !0), i) try {
                return o(e, t)
            } catch (n) {}
            if (u(e, t)) return a(!r.f.call(e, t), e[t])
        }
    },
    1363: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("6762"), n("2fdb"), n("7514"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = new s.Task({
                title: "参加战神挑战",
                tags: ["event"],
                form: [{
                    title: "挑战类型",
                    type: "picker",
                    range: ["集结", "峰会", "天骄", "无双", "大帝", "战神", "天下", "独步", "求败"],
                    value: 8
                }, {
                    title: "挑战级别",
                    type: "picker",
                    range: ["39级", "49级", "59级", "79级", "100级"],
                    value: 4
                }]
            }, (function() {
                var e = this.form[0].value,
                    t = this.form[1].value;

                function n() {
                    return r.apply(this, arguments)
                }

                function r() {
                    return r = (0, a.default)(regeneratorRuntime.mark((function r() {
                        var a, c, u, i, o, f;
                        return regeneratorRuntime.wrap((function(r) {
                            while (1) switch (r.prev = r.next) {
                                case 0:
                                    return r.next = 2, s.task.sleep();
                                case 2:
                                    return r.next = 4, (0, s.getMainDataAsync)();
                                case 4:
                                    return a = r.sent.map.npc, c = a.find((function(e) {
                                        var t = e.code;
                                        return "npc 1000" === t
                                    })), u = c.list, i = u.find((function(e) {
                                        var t = e.title;
                                        return t.includes("参加战神挑战") || t.includes("挑战圆月战魂")
                                    })), r.next = 9, s.task.send("npc 1000 ".concat(i.code), "参加哪");
                                case 9:
                                    return r.next = 11, s.task.sleep();
                                case 11:
                                    return r.next = 13, s.task.send("f".concat(e + 5, " ").concat(t + 1), "<menu");
                                case 13:
                                    return r.next = 15, s.task.sleep();
                                case 15:
                                    return r.next = 17, s.task.send("99_99", "<pmg");
                                case 17:
                                    return r.next = 19, s.task.sleep();
                                case 19:
                                    return r.next = 21, s.task.send("ok", ["不准", "不能", "<pmg"]);
                                case 21:
                                    if (o = r.sent, f = o.index, 2 !== f) {
                                        r.next = 28;
                                        break
                                    }
                                    return r.next = 26, new Promise((function(e) {
                                        uni.$once("combatready", e)
                                    }));
                                case 26:
                                    return r.next = 28, s.task.sleep();
                                case 28:
                                    return r.next = 30, n();
                                case 30:
                                case "end":
                                    return r.stop()
                            }
                        }), r)
                    }))), r.apply(this, arguments)
                }
                return s.task.move("lsj 200", "里闪光.无垢者之城").then(n)
            }));
        t.default = c
    },
    1382: function(e, t, n) {
        (function(t, r, a) {
            e.exports = r(n("21bf"), n("1132"), n("72fe"), n("2b79"), n("38ba"))
        })(0, (function(e) {
            return function() {
                var t = e,
                    n = t.lib,
                    r = n.StreamCipher,
                    a = t.algo,
                    s = [],
                    c = [],
                    u = [],
                    i = a.Rabbit = r.extend({
                        _doReset: function() {
                            for (var e = this._key.words, t = this.cfg.iv, n = 0; n < 4; n++) e[n] = 16711935 & (e[n] << 8 | e[n] >>> 24) | 4278255360 & (e[n] << 24 | e[n] >>> 8);
                            var r = this._X = [e[0], e[3] << 16 | e[2] >>> 16, e[1], e[0] << 16 | e[3] >>> 16, e[2], e[1] << 16 | e[0] >>> 16, e[3], e[2] << 16 | e[1] >>> 16],
                                a = this._C = [e[2] << 16 | e[2] >>> 16, 4294901760 & e[0] | 65535 & e[1], e[3] << 16 | e[3] >>> 16, 4294901760 & e[1] | 65535 & e[2], e[0] << 16 | e[0] >>> 16, 4294901760 & e[2] | 65535 & e[3], e[1] << 16 | e[1] >>> 16, 4294901760 & e[3] | 65535 & e[0]];
                            this._b = 0;
                            for (n = 0; n < 4; n++) o.call(this);
                            for (n = 0; n < 8; n++) a[n] ^= r[n + 4 & 7];
                            if (t) {
                                var s = t.words,
                                    c = s[0],
                                    u = s[1],
                                    i = 16711935 & (c << 8 | c >>> 24) | 4278255360 & (c << 24 | c >>> 8),
                                    f = 16711935 & (u << 8 | u >>> 24) | 4278255360 & (u << 24 | u >>> 8),
                                    l = i >>> 16 | 4294901760 & f,
                                    p = f << 16 | 65535 & i;
                                a[0] ^= i, a[1] ^= l, a[2] ^= f, a[3] ^= p, a[4] ^= i, a[5] ^= l, a[6] ^= f, a[7] ^= p;
                                for (n = 0; n < 4; n++) o.call(this)
                            }
                        },
                        _doProcessBlock: function(e, t) {
                            var n = this._X;
                            o.call(this), s[0] = n[0] ^ n[5] >>> 16 ^ n[3] << 16, s[1] = n[2] ^ n[7] >>> 16 ^ n[5] << 16, s[2] = n[4] ^ n[1] >>> 16 ^ n[7] << 16, s[3] = n[6] ^ n[3] >>> 16 ^ n[1] << 16;
                            for (var r = 0; r < 4; r++) s[r] = 16711935 & (s[r] << 8 | s[r] >>> 24) | 4278255360 & (s[r] << 24 | s[r] >>> 8), e[t + r] ^= s[r]
                        },
                        blockSize: 4,
                        ivSize: 2
                    });

                function o() {
                    for (var e = this._X, t = this._C, n = 0; n < 8; n++) c[n] = t[n];
                    t[0] = t[0] + 1295307597 + this._b | 0, t[1] = t[1] + 3545052371 + (t[0] >>> 0 < c[0] >>> 0 ? 1 : 0) | 0, t[2] = t[2] + 886263092 + (t[1] >>> 0 < c[1] >>> 0 ? 1 : 0) | 0, t[3] = t[3] + 1295307597 + (t[2] >>> 0 < c[2] >>> 0 ? 1 : 0) | 0, t[4] = t[4] + 3545052371 + (t[3] >>> 0 < c[3] >>> 0 ? 1 : 0) | 0, t[5] = t[5] + 886263092 + (t[4] >>> 0 < c[4] >>> 0 ? 1 : 0) | 0, t[6] = t[6] + 1295307597 + (t[5] >>> 0 < c[5] >>> 0 ? 1 : 0) | 0, t[7] = t[7] + 3545052371 + (t[6] >>> 0 < c[6] >>> 0 ? 1 : 0) | 0, this._b = t[7] >>> 0 < c[7] >>> 0 ? 1 : 0;
                    for (n = 0; n < 8; n++) {
                        var r = e[n] + t[n],
                            a = 65535 & r,
                            s = r >>> 16,
                            i = ((a * a >>> 17) + a * s >>> 15) + s * s,
                            o = ((4294901760 & r) * r | 0) + ((65535 & r) * r | 0);
                        u[n] = i ^ o
                    }
                    e[0] = u[0] + (u[7] << 16 | u[7] >>> 16) + (u[6] << 16 | u[6] >>> 16) | 0, e[1] = u[1] + (u[0] << 8 | u[0] >>> 24) + u[7] | 0, e[2] = u[2] + (u[1] << 16 | u[1] >>> 16) + (u[0] << 16 | u[0] >>> 16) | 0, e[3] = u[3] + (u[2] << 8 | u[2] >>> 24) + u[1] | 0, e[4] = u[4] + (u[3] << 16 | u[3] >>> 16) + (u[2] << 16 | u[2] >>> 16) | 0, e[5] = u[5] + (u[4] << 8 | u[4] >>> 24) + u[3] | 0, e[6] = u[6] + (u[5] << 16 | u[5] >>> 16) + (u[4] << 16 | u[4] >>> 16) | 0, e[7] = u[7] + (u[6] << 8 | u[6] >>> 24) + u[5] | 0
                }
                t.Rabbit = r._createHelper(i)
            }(), e.Rabbit
        }))
    },
    "13b1": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("6762"), n("2fdb"), n("7514"), n("96cf");
        var a = r(n("3b8d"));
        n("c5f6");
        var s = n("3f7e"),
            c = new s.Task({
                title: "销毁佣兵宝珠",
                tags: ["item"],
                form: [{
                    title: "宝珠名称",
                    type: "input",
                    placeholder: "关键词",
                    focus: !0,
                    value: ""
                }, {
                    title: "数量限制",
                    type: "input",
                    value: "10"
                }]
            }, (function() {
                var e = this.form[0].value || "xxx",
                    t = Number(this.form[1].value) || 10,
                    n = 0;

                function r() {
                    return c.apply(this, arguments)
                }

                function c() {
                    return c = (0, a.default)(regeneratorRuntime.mark((function a() {
                        var c, u, i, o, f;
                        return regeneratorRuntime.wrap((function(a) {
                            while (1) switch (a.prev = a.next) {
                                case 0:
                                    return a.next = 2, s.task.sleep();
                                case 2:
                                    return a.next = 4, s.task.send("vs_cmd vs_pearl", "<menu");
                                case 4:
                                    return a.next = 6, s.task.sleep();
                                case 6:
                                    return a.next = 8, s.task.send("t:l vspl_ds", ["<menu", "当前没有"]);
                                case 8:
                                    if (c = a.sent, u = c.index, i = c.text, 0 !== u) {
                                        a.next = 30;
                                        break
                                    }
                                    return o = (0, s.parseMsg)(i).data.list, f = o.find((function(t) {
                                        var n = t.title;
                                        return n.includes(e)
                                    })), a.next = 16, s.task.sleep();
                                case 16:
                                    if (f) {
                                        a.next = 20;
                                        break
                                    }
                                    return a.next = 19, s.task.cancel();
                                case 19:
                                    throw new Error("未找到");
                                case 20:
                                    return a.next = 22, s.task.send(f.code, "[y]");
                                case 22:
                                    return a.next = 24, s.task.sleep();
                                case 24:
                                    return a.next = 26, s.task.send("y", "你得到");
                                case 26:
                                    if (n++, !(n < t)) {
                                        a.next = 30;
                                        break
                                    }
                                    return a.next = 30, r();
                                case 30:
                                case "end":
                                    return a.stop()
                            }
                        }), a)
                    }))), c.apply(this, arguments)
                }
                return r()
            }));
        t.default = c
    },
    1495: function(e, t, n) {
        var r = n("86cc"),
            a = n("cb7c"),
            s = n("0d58");
        e.exports = n("9e1e") ? Object.defineProperties : function(e, t) {
            a(e);
            var n, c = s(t),
                u = c.length,
                i = 0;
            while (u > i) r.f(e, n = c[i++], t[n]);
            return e
        }
    },
    "14b8": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("6762"), n("2fdb"), n("a481"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = new s.Task({
                title: "加入家族",
                tags: ["other"],
                form: [{
                    title: "家族名称",
                    type: "input",
                    focus: !0,
                    value: ""
                }, {
                    title: "模糊搜索",
                    type: "checkbox",
                    value: !1
                }]
            }, (0, a.default)(regeneratorRuntime.mark((function e() {
                var t, n, r, c, u, i, o, f, l;
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                            return l = function() {
                                return l = (0, a.default)(regeneratorRuntime.mark((function e(r) {
                                    var a, c, u, i, l, p, d;
                                    return regeneratorRuntime.wrap((function(e) {
                                        while (1) switch (e.prev = e.next) {
                                            case 0:
                                                a = r.text, c = (0, s.parseMsg)(a).data.list, s.task.log("查找页数：".concat(++o)), u = 0;
                                            case 4:
                                                if (!(u < c.length)) {
                                                    e.next = 26;
                                                    break
                                                }
                                                if (i = c[u], l = i.title, p = i.code, l = l.replace(/({dt1})(.+)(a)/, "$2"), "(下一页)" !== l) {
                                                    e.next = 17;
                                                    break
                                                }
                                                return u = 0, e.next = 11, s.task.sleep();
                                            case 11:
                                                return e.next = 13, s.task.send("".concat(p), "<menu");
                                            case 13:
                                                return d = e.sent, e.next = 16, f(d);
                                            case 16:
                                                return e.abrupt("return", e.sent);
                                            case 17:
                                                if (!(n ? l.includes(t) : l === t)) {
                                                    e.next = 23;
                                                    break
                                                }
                                                return e.next = 20, s.task.sleep();
                                            case 20:
                                                return e.next = 22, s.task.send("".concat(p), ["提交成功", "已经满了"]);
                                            case 22:
                                                return e.abrupt("return", e.sent);
                                            case 23:
                                                u++, e.next = 4;
                                                break;
                                            case 26:
                                                return e.next = 28, s.task.sleep();
                                            case 28:
                                                return e.next = 30, s.task.cancel();
                                            case 30:
                                            case "end":
                                                return e.stop()
                                        }
                                    }), e)
                                }))), l.apply(this, arguments)
                            }, f = function(e) {
                                return l.apply(this, arguments)
                            }, t = this.form[0].value, n = this.form[1].value, e.next = 6, s.task.sleep();
                        case 6:
                            return e.next = 8, s.task.move("sgz 107", "后闪光镇东路");
                        case 8:
                            return r = "npc 1000", e.next = 11, (0, s.findNpcItem)({
                                code: r
                            }, "申请加入家族");
                        case 11:
                            return c = e.sent, u = c.code, e.next = 15, s.task.sleep();
                        case 15:
                            return e.next = 17, s.task.send("".concat(r, " ").concat(u), ["<menu", "[yes]"]);
                        case 17:
                            if (i = e.sent, o = 0, 1 !== i.index) {
                                e.next = 25;
                                break
                            }
                            return e.next = 22, s.task.sleep();
                        case 22:
                            return e.next = 24, s.task.send("yes", "<menu");
                        case 24:
                            i = e.sent;
                        case 25:
                            return e.next = 27, f(i);
                        case 27:
                        case "end":
                            return e.stop()
                    }
                }), e, this)
            }))));
        t.default = c
    },
    1654: function(e, t, n) {
        "use strict";
        var r = n("71c1")(!0);
        n("30f1")(String, "String", (function(e) {
            this._t = String(e), this._i = 0
        }), (function() {
            var e, t = this._t,
                n = this._i;
            return n >= t.length ? {
                value: void 0,
                done: !0
            } : (e = r(t, n), this._i += e.length, {
                value: e,
                done: !1
            })
        }))
    },
    1691: function(e, t) {
        e.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")
    },
    1799: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("7514"), n("4917"), n("f559"), n("20d6"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = r(n("275e")),
            u = [{
                title: "普通难度",
                code: "normal"
            }, {
                title: "冒险难度",
                code: "adventure"
            }, {
                title: "英雄难度",
                code: "hero"
            }, {
                title: "噩梦难度",
                code: "nightmare"
            }],
            i = ["烈焰之界", "木源之界", "水源之界", "雷鸣之界", "寒冰王座"],
            o = new s.Task({
                title: "精灵王的宝库",
                tags: ["event"],
                batch: !1,
                options: {
                    select: void 0,
                    mode: void 0,
                    oldMapIndex: void 0
                },
                before: function() {
                    var e = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var t, n, r, a, c, o, f;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return t = this.options, e.next = 3, (0, s.getMainDataAsync)();
                                case 3:
                                    if (n = e.sent.map.title, t.oldMapIndex = i.findIndex((function(e) {
                                            return n.startsWith(e)
                                        })), !(t.oldMapIndex < 0)) {
                                        e.next = 15;
                                        break
                                    }
                                    return e.next = 8, (0, s.showActionSheet)({
                                        itemList: u.map((function(e) {
                                            var t = e.title;
                                            return t
                                        }))
                                    });
                                case 8:
                                    if (r = e.sent, a = r.tapIndex, !(a < 0)) {
                                        e.next = 12;
                                        break
                                    }
                                    throw new Error("取消");
                                case 12:
                                    t.select = u[a], e.next = 17;
                                    break;
                                case 15:
                                    c = (n.match(/（(.+)）/) || [null, "普通"])[1], t.select = u.find((function(e) {
                                        var t = e.title;
                                        return t.startsWith(c)
                                    }));
                                case 17:
                                    return e.next = 19, (0, s.showActionSheet)({
                                        itemList: ["全部", "图一和BOSS", "图一和冰王"]
                                    });
                                case 19:
                                    if (o = e.sent, f = o.tapIndex, !(f < 0)) {
                                        e.next = 23;
                                        break
                                    }
                                    throw new Error("取消");
                                case 23:
                                    t.mode = f;
                                case 24:
                                case "end":
                                    return e.stop()
                            }
                        }), e, this)
                    })));

                    function t() {
                        return e.apply(this, arguments)
                    }
                    return t
                }()
            }, (function() {
                var e = this.options,
                    t = 0;

                function n() {
                    return r.apply(this, arguments)
                }

                function r() {
                    return r = (0, a.default)(regeneratorRuntime.mark((function t() {
                        var n, r, a, c, u;
                        return regeneratorRuntime.wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, (0, s.getMainDataAsync)();
                                case 2:
                                    if (n = t.sent.map.npc, r = n.find((function(e) {
                                            var t = e.code;
                                            return "npc 1002" === t
                                        })), !r) {
                                        t.next = 21;
                                        break
                                    }
                                    return a = r.list.find((function(t) {
                                        var n = t.title;
                                        return (0, s.clearText)(n).startsWith(e.select.title.substring(0, 2))
                                    })), t.next = 8, s.task.sleep();
                                case 8:
                                    return t.next = 10, s.task.send("npc 1002 ".concat(a.code), ["[~1]", "已击败0个", "得到了", "你得到", "您得到", "明天再来"]);
                                case 10:
                                    if (c = t.sent, u = c.index, 0 !== u) {
                                        t.next = 21;
                                        break
                                    }
                                    return t.next = 15, s.task.sleep();
                                case 15:
                                    return t.next = 17, s.task.send("1", "mps]");
                                case 17:
                                    return t.next = 19, s.task.sleep();
                                case 19:
                                    return t.next = 21, s.task.send("cl", "cnt");
                                case 21:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    }))), r.apply(this, arguments)
                }

                function u() {
                    return i.apply(this, arguments)
                }

                function i() {
                    return i = (0, a.default)(regeneratorRuntime.mark((function r() {
                        var a, i, o, f, l;
                        return regeneratorRuntime.wrap((function(r) {
                            while (1) switch (r.prev = r.next) {
                                case 0:
                                    if (!(e.oldMapIndex < 0)) {
                                        r.next = 30;
                                        break
                                    }
                                    return r.next = 3, s.task.sleep();
                                case 3:
                                    return r.next = 5, s.task.move("jlwbk 100", "宝库入口");
                                case 5:
                                    return r.next = 7, n();
                                case 7:
                                    return r.next = 9, s.task.sleep();
                                case 9:
                                    return r.next = 11, s.task.send("npc 1000 0", "<menu");
                                case 11:
                                    return r.next = 13, s.task.sleep();
                                case 13:
                                    return r.next = 15, s.task.send(e.select.code, ["<pmg>", "<pmg(c:[yes]确定"]);
                                case 15:
                                    if (a = r.sent, i = a.index, o = a.text, 0 !== i) {
                                        r.next = 20;
                                        break
                                    }
                                    throw new Error(o);
                                case 20:
                                    return r.next = 22, s.task.send("yes", "<title>");
                                case 22:
                                    if (!(t > 0)) {
                                        r.next = 28;
                                        break
                                    }
                                    return 2 === e.mode && (t = 4), r.next = 26, s.task.sleep();
                                case 26:
                                    return r.next = 28, s.task.send("t l 1000".concat(t), "<title>");
                                case 28:
                                    r.next = 31;
                                    break;
                                case 30:
                                    e.oldMapIndex = -1;
                                case 31:
                                    return r.next = 33, s.task.sleep();
                                case 33:
                                    for (f = [], l = 0; l < (t && e.mode ? 1 : 9); l++) f.push("npc 100".concat(l, " h"));
                                    return c.default.reset(), c.default.set({
                                        code: f,
                                        killMax: f.length,
                                        troop: !0
                                    }), r.next = 39, c.default.start(!1, !1);
                                case 39:
                                    return r.next = 41, s.task.sleep();
                                case 41:
                                    return r.next = 43, s.task.send("t l 6001", "请选择路线");
                                case 43:
                                    return r.next = 45, s.task.sleep();
                                case 45:
                                    return r.next = 47, s.task.send("t l 10005", "<title>");
                                case 47:
                                    if (t++, !(t < 5)) {
                                        r.next = 51;
                                        break
                                    }
                                    return r.next = 51, u();
                                case 51:
                                    return r.next = 53, n();
                                case 53:
                                case "end":
                                    return r.stop()
                            }
                        }), r)
                    }))), i.apply(this, arguments)
                }
                return e.oldMapIndex >= 0 && (t = e.oldMapIndex), u()
            }));
        t.default = o
    },
    "17e1": function(e, t, n) {
        (function(t, r) {
            e.exports = r(n("21bf"))
        })(0, (function(e) {
            return function() {
                if ("function" == typeof ArrayBuffer) {
                    var t = e,
                        n = t.lib,
                        r = n.WordArray,
                        a = r.init,
                        s = r.init = function(e) {
                            if (e instanceof ArrayBuffer && (e = new Uint8Array(e)), (e instanceof Int8Array || "undefined" !== typeof Uint8ClampedArray && e instanceof Uint8ClampedArray || e instanceof Int16Array || e instanceof Uint16Array || e instanceof Int32Array || e instanceof Uint32Array || e instanceof Float32Array || e instanceof Float64Array) && (e = new Uint8Array(e.buffer, e.byteOffset, e.byteLength)), e instanceof Uint8Array) {
                                for (var t = e.byteLength, n = [], r = 0; r < t; r++) n[r >>> 2] |= e[r] << 24 - r % 4 * 8;
                                a.call(this, n, t)
                            } else a.apply(this, arguments)
                        };
                    s.prototype = r
                }
            }(), e.lib.WordArray
        }))
    },
    "191b": function(e, t, n) {
        (function(t, r, a) {
            e.exports = r(n("21bf"), n("94f8"))
        })(0, (function(e) {
            return function() {
                var t = e,
                    n = t.lib,
                    r = n.WordArray,
                    a = t.algo,
                    s = a.SHA256,
                    c = a.SHA224 = s.extend({
                        _doReset: function() {
                            this._hash = new r.init([3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428])
                        },
                        _doFinalize: function() {
                            var e = s._doFinalize.call(this);
                            return e.sigBytes -= 4, e
                        }
                    });
                t.SHA224 = s._createHelper(c), t.HmacSHA224 = s._createHmacHelper(c)
            }(), e.SHA224
        }))
    },
    "1af6": function(e, t, n) {
        var r = n("63b6");
        r(r.S, "Array", {
            isArray: n("9003")
        })
    },
    "1bc3": function(e, t, n) {
        var r = n("f772");
        e.exports = function(e, t) {
            if (!r(e)) return e;
            var n, a;
            if (t && "function" == typeof(n = e.toString) && !r(a = n.call(e))) return a;
            if ("function" == typeof(n = e.valueOf) && !r(a = n.call(e))) return a;
            if (!t && "function" == typeof(n = e.toString) && !r(a = n.call(e))) return a;
            throw TypeError("Can't convert object to primitive value")
        }
    },
    "1e82": function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("a481"), n("6762"), n("2fdb"), n("7514");
        var r = n("3f7e"),
            a = new r.Task({
                title: "检查宠物",
                tags: ["other"]
            }, (function() {
                return r.task.sleep().then((function() {
                    return r.task.send("petcmd 8", ["暂时还没有宠物", "l]带出宠物)>"])
                })).then((function(e) {
                    return r.task.sleep().then((function() {
                        return Promise.resolve(e)
                    }))
                })).then((function(e) {
                    var t = e.index,
                        n = e.text;
                    if (0 === t) throw new Error(n);
                    var a = (0, r.parseMsg)(n).data.list;
                    if (console.log(a), !a.length) throw new Error("无宠物");
                    if (a.find((function(e) {
                            return e.title.includes("★跟随战斗")
                        }))) throw new Error("已有宠物带出");
                    return r.userSettings.getAsync("pet").then((function(e) {
                        var t = a.find((function(t) {
                            return t.title.replace(/\(\d+\)$/, "") === e
                        }));
                        return t || (t = a[0]), r.task.send("".concat(t.code, " l"), ['"<msg>', "cnt"])
                    }))
                })).catch((function(e) {
                    return console.warn(e), r.task.send("cnt", ["cnt", "<"])
                })).then((function() {
                    return r.task.sleep()
                }))
            }));
        t.default = a
    },
    "1ec9": function(e, t, n) {
        var r = n("f772"),
            a = n("e53d").document,
            s = r(a) && r(a.createElement);
        e.exports = function(e) {
            return s ? a.createElement(e) : {}
        }
    },
    "1f6b": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("6762"), n("2fdb"), n("7514"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = new s.Task({
                title: "魔界兑换徽章",
                tags: ["change"]
            }, (function() {
                function e() {
                    return t.apply(this, arguments)
                }

                function t() {
                    return t = (0, a.default)(regeneratorRuntime.mark((function t() {
                        var n, r, a, c, u, i;
                        return regeneratorRuntime.wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, (0, s.getMainDataAsync)();
                                case 2:
                                    return n = t.sent.map.npc, r = n.find((function(e) {
                                        var t = e.code;
                                        return "npc 1002" === t
                                    })), a = r.list, c = a.find((function(e) {
                                        var t = e.title;
                                        return t.includes("获得魔族核心")
                                    })), t.next = 7, s.task.sleep();
                                case 7:
                                    return t.next = 9, s.task.send("npc 1002 ".concat(c.code), "[~1]");
                                case 9:
                                    return t.next = 11, s.task.sleep();
                                case 11:
                                    return t.next = 13, s.task.send("1", ["mps]", "你得到", "/ 需要"]);
                                case 13:
                                    if (u = t.sent, i = u.index, 0 !== i) {
                                        t.next = 22;
                                        break
                                    }
                                    return t.next = 18, s.task.sleep();
                                case 18:
                                    return t.next = 20, s.task.send("cl", "cnt");
                                case 20:
                                    t.next = 24;
                                    break;
                                case 22:
                                    if (2 !== i) {
                                        t.next = 24;
                                        break
                                    }
                                    return t.abrupt("return");
                                case 24:
                                    return t.next = 26, e();
                                case 26:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    }))), t.apply(this, arguments)
                }
                return s.task.move("mjrk 101", "魔界入口1层").then(e)
            }));
        t.default = c
    },
    "20d6": function(e, t, n) {
        "use strict";
        var r = n("5ca1"),
            a = n("0a49")(6),
            s = "findIndex",
            c = !0;
        s in [] && Array(1)[s]((function() {
            c = !1
        })), r(r.P + r.F * c, "Array", {
            findIndex: function(e) {
                return a(this, e, arguments.length > 1 ? arguments[1] : void 0)
            }
        }), n("9c6c")(s)
    },
    "20fd": function(e, t, n) {
        "use strict";
        var r = n("d9f6"),
            a = n("aebd");
        e.exports = function(e, t, n) {
            t in e ? r.f(e, t, a(0, n)) : e[t] = n
        }
    },
    "214f": function(e, t, n) {
        "use strict";
        n("b0c5");
        var r = n("2aba"),
            a = n("32e9"),
            s = n("79e5"),
            c = n("be13"),
            u = n("2b4c"),
            i = n("520a"),
            o = u("species"),
            f = !s((function() {
                var e = /./;
                return e.exec = function() {
                    var e = [];
                    return e.groups = {
                        a: "7"
                    }, e
                }, "7" !== "".replace(e, "$<a>")
            })),
            l = function() {
                var e = /(?:)/,
                    t = e.exec;
                e.exec = function() {
                    return t.apply(this, arguments)
                };
                var n = "ab".split(e);
                return 2 === n.length && "a" === n[0] && "b" === n[1]
            }();
        e.exports = function(e, t, n) {
            var p = u(e),
                d = !s((function() {
                    var t = {};
                    return t[p] = function() {
                        return 7
                    }, 7 != "" [e](t)
                })),
                x = d ? !s((function() {
                    var t = !1,
                        n = /a/;
                    return n.exec = function() {
                        return t = !0, null
                    }, "split" === e && (n.constructor = {}, n.constructor[o] = function() {
                        return n
                    }), n[p](""), !t
                })) : void 0;
            if (!d || !x || "replace" === e && !f || "split" === e && !l) {
                var h = /./ [p],
                    k = n(c, p, "" [e], (function(e, t, n, r, a) {
                        return t.exec === i ? d && !a ? {
                            done: !0,
                            value: h.call(t, n, r)
                        } : {
                            done: !0,
                            value: e.call(n, t, r)
                        } : {
                            done: !1
                        }
                    })),
                    v = k[0],
                    m = k[1];
                r(String.prototype, e, v), a(RegExp.prototype, p, 2 == t ? function(e, t) {
                    return m.call(e, this, t)
                } : function(e) {
                    return m.call(e, this)
                })
            }
        }
    },
    2184: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("6762"), n("2fdb"), n("7514"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = new s.Task({
                title: "强行击杀",
                tags: ["other"],
                form: [{
                    title: "输入昵称",
                    type: "input",
                    focus: !0,
                    value: ""
                }]
            }, (0, a.default)(regeneratorRuntime.mark((function e() {
                var t, n, r;
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                            return r = function() {
                                return r = (0, a.default)(regeneratorRuntime.mark((function e() {
                                    var r, a, c, u, i, o;
                                    return regeneratorRuntime.wrap((function(e) {
                                        while (1) switch (e.prev = e.next) {
                                            case 0:
                                                return e.next = 2, s.task.sleep();
                                            case 2:
                                                return e.next = 4, s.task.send("5", "你附近有");
                                            case 4:
                                                return r = e.sent, a = r.text, c = (0, s.parseMsg)(a).data.list, u = c.find((function(e, n) {
                                                    var r = e.title,
                                                        a = e.list;
                                                    if (a.find((function(e) {
                                                            var t = e.code;
                                                            return "p" === t
                                                        }))) return r.includes(t)
                                                })), e.next = 10, s.task.sleep();
                                            case 10:
                                                if (u) {
                                                    e.next = 13;
                                                    break
                                                }
                                                return e.next = 13, s.task.cancel();
                                            case 13:
                                                return e.next = 15, s.task.send("".concat(u.code, " p"), ["[yes]"]);
                                            case 15:
                                                return e.next = 17, s.task.sleep();
                                            case 17:
                                                return e.next = 19, s.task.send("yes", ["combat", "已经无法战斗了", "已经离开这个房间了"]);
                                            case 19:
                                                if (i = e.sent, o = i.index, 0 !== o) {
                                                    e.next = 24;
                                                    break
                                                }
                                                return e.next = 24, new Promise((function(e) {
                                                    uni.$once("combatready", e)
                                                }));
                                            case 24:
                                                return e.next = 26, n();
                                            case 26:
                                            case "end":
                                                return e.stop()
                                        }
                                    }), e)
                                }))), r.apply(this, arguments)
                            }, n = function() {
                                return r.apply(this, arguments)
                            }, t = this.form[0].value || "xxxx", e.next = 5, n();
                        case 5:
                        case "end":
                            return e.stop()
                    }
                }), e, this)
            }))));
        t.default = c
    },
    "21bf": function(e, t, n) {
        (function(t) {
            (function(t, n) {
                e.exports = n()
            })(0, (function() {
                var e = e || function(e, r) {
                    var a;
                    if ("undefined" !== typeof window && window.crypto && (a = window.crypto), "undefined" !== typeof self && self.crypto && (a = self.crypto), "undefined" !== typeof globalThis && globalThis.crypto && (a = globalThis.crypto), !a && "undefined" !== typeof window && window.msCrypto && (a = window.msCrypto), !a && "undefined" !== typeof t && t.crypto && (a = t.crypto), !a) try {
                        a = n(0)
                    } catch (v) {}
                    var s = function() {
                            if (a) {
                                if ("function" === typeof a.getRandomValues) try {
                                    return a.getRandomValues(new Uint32Array(1))[0]
                                } catch (v) {}
                                if ("function" === typeof a.randomBytes) try {
                                    return a.randomBytes(4).readInt32LE()
                                } catch (v) {}
                            }
                            throw new Error("Native crypto module could not be used to get secure random number.")
                        },
                        c = Object.create || function() {
                            function e() {}
                            return function(t) {
                                var n;
                                return e.prototype = t, n = new e, e.prototype = null, n
                            }
                        }(),
                        u = {},
                        i = u.lib = {},
                        o = i.Base = function() {
                            return {
                                extend: function(e) {
                                    var t = c(this);
                                    return e && t.mixIn(e), t.hasOwnProperty("init") && this.init !== t.init || (t.init = function() {
                                        t.$super.init.apply(this, arguments)
                                    }), t.init.prototype = t, t.$super = this, t
                                },
                                create: function() {
                                    var e = this.extend();
                                    return e.init.apply(e, arguments), e
                                },
                                init: function() {},
                                mixIn: function(e) {
                                    for (var t in e) e.hasOwnProperty(t) && (this[t] = e[t]);
                                    e.hasOwnProperty("toString") && (this.toString = e.toString)
                                },
                                clone: function() {
                                    return this.init.prototype.extend(this)
                                }
                            }
                        }(),
                        f = i.WordArray = o.extend({
                            init: function(e, t) {
                                e = this.words = e || [], this.sigBytes = t != r ? t : 4 * e.length
                            },
                            toString: function(e) {
                                return (e || p).stringify(this)
                            },
                            concat: function(e) {
                                var t = this.words,
                                    n = e.words,
                                    r = this.sigBytes,
                                    a = e.sigBytes;
                                if (this.clamp(), r % 4)
                                    for (var s = 0; s < a; s++) {
                                        var c = n[s >>> 2] >>> 24 - s % 4 * 8 & 255;
                                        t[r + s >>> 2] |= c << 24 - (r + s) % 4 * 8
                                    } else
                                        for (var u = 0; u < a; u += 4) t[r + u >>> 2] = n[u >>> 2];
                                return this.sigBytes += a, this
                            },
                            clamp: function() {
                                var t = this.words,
                                    n = this.sigBytes;
                                t[n >>> 2] &= 4294967295 << 32 - n % 4 * 8, t.length = e.ceil(n / 4)
                            },
                            clone: function() {
                                var e = o.clone.call(this);
                                return e.words = this.words.slice(0), e
                            },
                            random: function(e) {
                                for (var t = [], n = 0; n < e; n += 4) t.push(s());
                                return new f.init(t, e)
                            }
                        }),
                        l = u.enc = {},
                        p = l.Hex = {
                            stringify: function(e) {
                                for (var t = e.words, n = e.sigBytes, r = [], a = 0; a < n; a++) {
                                    var s = t[a >>> 2] >>> 24 - a % 4 * 8 & 255;
                                    r.push((s >>> 4).toString(16)), r.push((15 & s).toString(16))
                                }
                                return r.join("")
                            },
                            parse: function(e) {
                                for (var t = e.length, n = [], r = 0; r < t; r += 2) n[r >>> 3] |= parseInt(e.substr(r, 2), 16) << 24 - r % 8 * 4;
                                return new f.init(n, t / 2)
                            }
                        },
                        d = l.Latin1 = {
                            stringify: function(e) {
                                for (var t = e.words, n = e.sigBytes, r = [], a = 0; a < n; a++) {
                                    var s = t[a >>> 2] >>> 24 - a % 4 * 8 & 255;
                                    r.push(String.fromCharCode(s))
                                }
                                return r.join("")
                            },
                            parse: function(e) {
                                for (var t = e.length, n = [], r = 0; r < t; r++) n[r >>> 2] |= (255 & e.charCodeAt(r)) << 24 - r % 4 * 8;
                                return new f.init(n, t)
                            }
                        },
                        x = l.Utf8 = {
                            stringify: function(e) {
                                try {
                                    return decodeURIComponent(escape(d.stringify(e)))
                                } catch (t) {
                                    throw new Error("Malformed UTF-8 data")
                                }
                            },
                            parse: function(e) {
                                return d.parse(unescape(encodeURIComponent(e)))
                            }
                        },
                        h = i.BufferedBlockAlgorithm = o.extend({
                            reset: function() {
                                this._data = new f.init, this._nDataBytes = 0
                            },
                            _append: function(e) {
                                "string" == typeof e && (e = x.parse(e)), this._data.concat(e), this._nDataBytes += e.sigBytes
                            },
                            _process: function(t) {
                                var n, r = this._data,
                                    a = r.words,
                                    s = r.sigBytes,
                                    c = this.blockSize,
                                    u = 4 * c,
                                    i = s / u;
                                i = t ? e.ceil(i) : e.max((0 | i) - this._minBufferSize, 0);
                                var o = i * c,
                                    l = e.min(4 * o, s);
                                if (o) {
                                    for (var p = 0; p < o; p += c) this._doProcessBlock(a, p);
                                    n = a.splice(0, o), r.sigBytes -= l
                                }
                                return new f.init(n, l)
                            },
                            clone: function() {
                                var e = o.clone.call(this);
                                return e._data = this._data.clone(), e
                            },
                            _minBufferSize: 0
                        }),
                        k = (i.Hasher = h.extend({
                            cfg: o.extend(),
                            init: function(e) {
                                this.cfg = this.cfg.extend(e), this.reset()
                            },
                            reset: function() {
                                h.reset.call(this), this._doReset()
                            },
                            update: function(e) {
                                return this._append(e), this._process(), this
                            },
                            finalize: function(e) {
                                e && this._append(e);
                                var t = this._doFinalize();
                                return t
                            },
                            blockSize: 16,
                            _createHelper: function(e) {
                                return function(t, n) {
                                    return new e.init(n).finalize(t)
                                }
                            },
                            _createHmacHelper: function(e) {
                                return function(t, n) {
                                    return new k.HMAC.init(e, n).finalize(t)
                                }
                            }
                        }), u.algo = {});
                    return u
                }(Math);
                return e
            }))
        }).call(this, n("c8ba"))
    },
    "230e": function(e, t, n) {
        var r = n("d3f4"),
            a = n("7726").document,
            s = r(a) && r(a.createElement);
        e.exports = function(e) {
            return s ? a.createElement(e) : {}
        }
    },
    "233a": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("f559"), n("6762"), n("2fdb"), n("7514"), n("c5f6"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = r(n("31ee")),
            u = new s.Task({
                title: "魔族入侵",
                tags: ["event"],
                batch: !1,
                form: [{
                    title: "刷怪模式",
                    type: "picker",
                    range: ["附近模式", "NPC模式"],
                    value: 1
                }, {
                    title: "回合上限",
                    type: "input",
                    value: "2"
                }, {
                    title: "超时重试",
                    type: "input",
                    value: "15000"
                }, {
                    title: "结束存仓",
                    type: "checkbox",
                    value: !1
                }]
            }, (0, a.default)(regeneratorRuntime.mark((function e() {
                var t, n, r, u, i, o, f, l;
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                            return l = function() {
                                return l = (0, a.default)(regeneratorRuntime.mark((function e() {
                                    var t, n, r, a;
                                    return regeneratorRuntime.wrap((function(e) {
                                        while (1) switch (e.prev = e.next) {
                                            case 0:
                                                return e.next = 2, (0, s.getMainDataAsync)();
                                            case 2:
                                                if (t = e.sent.map.title, t.startsWith("魔族入侵")) {
                                                    e.next = 15;
                                                    break
                                                }
                                                return e.next = 6, s.task.move("sgz 103", "光芒市场");
                                            case 6:
                                                return e.next = 8, s.task.sleep();
                                            case 8:
                                                return e.next = 10, s.task.send("t l 8004", ["现在不是魔族入侵活动时间", "魔族入侵"]);
                                            case 10:
                                                if (n = e.sent, r = n.index, a = n.text, 0 !== r) {
                                                    e.next = 15;
                                                    break
                                                }
                                                throw new Error(a);
                                            case 15:
                                            case "end":
                                                return e.stop()
                                        }
                                    }), e)
                                }))), l.apply(this, arguments)
                            }, f = function() {
                                return l.apply(this, arguments)
                            }, o = function() {
                                return s.task.sleep().then((0, a.default)(regeneratorRuntime.mark((function e() {
                                    var t;
                                    return regeneratorRuntime.wrap((function(e) {
                                        while (1) switch (e.prev = e.next) {
                                            case 0:
                                                return e.next = 2, (0, s.getMainDataAsync)();
                                            case 2:
                                                if (t = e.sent.map.title, !t.startsWith("光芒市场")) {
                                                    e.next = 5;
                                                    break
                                                }
                                                throw new Error("活动结束");
                                            case 5:
                                            case "end":
                                                return e.stop()
                                        }
                                    }), e)
                                })))).then((function() {
                                    return s.task.send("kill npc", ["非活动时间", "combat", "<menu", "没有这个人", "这人不见了", "对手正在战斗中", "该目标已不存在", "Command Unknown"], !1, r)
                                })).then((function() {
                                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                                        t = e.index,
                                        r = void 0 === t ? 3 : t,
                                        a = e.text;
                                    if (0 === r) throw new Error(a);
                                    return 2 === r ? s.task.sleep().then((function() {
                                        return s.task.send("cnt", "cnt")
                                    })) : r > 2 ? (console.warn(a), s.task.sleep()) : (0, s.setMainDataAsync)({
                                        combat: {
                                            stepMax: n
                                        }
                                    }).then((function() {
                                        return new Promise((function(e) {
                                            uni.$once("combatready", e)
                                        })).then((function() {
                                            return s.task.sleep()
                                        }))
                                    }))
                                })).then(o)
                            }, i = function() {
                                return s.task.sleep().then((function() {
                                    return s.task.send("5", ["你附近有", "附近没有东西", "cnt"])
                                })).then((function(e) {
                                    var t = e.index,
                                        n = e.text;
                                    if (0 === t) {
                                        var a = (0, s.parseMsg)(n).data.list;
                                        if (a.find((function(e) {
                                                var t = e.title;
                                                return t.includes("传送管理员")
                                            }))) throw new Error("活动结束");
                                        var c = a.find((function(e) {
                                            var t = e.title;
                                            return t.includes("魔族将领")
                                        })) || a.find((function(e) {
                                            var t = e.title;
                                            return t.includes("魔族精英")
                                        })) || a.find((function(e) {
                                            var t = e.title;
                                            return t.includes("魔族士兵")
                                        }));
                                        return c ? s.task.sleep().then((function() {
                                            return s.task.send("".concat(c.code, " h"), ["非活动时间", "combat", "<menu", "没有这个人", "这人不见了", "对手正在战斗中", "Command Unknown"], !1, r)
                                        })) : s.task.sleep().then((function() {
                                            return s.task.send("cnt")
                                        }))
                                    }
                                })).then((function() {
                                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                                        t = e.index,
                                        r = void 0 === t ? 3 : t,
                                        a = e.text;
                                    if (0 === r) throw new Error(a);
                                    return 2 === r ? s.task.sleep().then((function() {
                                        return s.task.send("cnt", "cnt")
                                    })) : r > 2 ? (console.warn(a), s.task.sleep()) : (0, s.setMainDataAsync)({
                                        combat: {
                                            stepMax: n
                                        }
                                    }).then((function() {
                                        return new Promise((function(e) {
                                            uni.$once("combatready", e)
                                        })).then((function() {
                                            return s.task.sleep()
                                        }))
                                    }))
                                })).then(i)
                            }, t = this.form[0].value, n = Number(this.form[1].value) || 0, r = Number(this.form[2].value) || 0, r = r > 1e3 ? r : 1, u = this.form[3].value, s.task.log("提示：使用历史操作时战斗超过设定战斗回合数将自动逃跑"), e.abrupt("return", f().then(0 === t ? i : o).catch(function() {
                                var e = (0, a.default)(regeneratorRuntime.mark((function e(t) {
                                    return regeneratorRuntime.wrap((function(e) {
                                        while (1) switch (e.prev = e.next) {
                                            case 0:
                                                if (!u) {
                                                    e.next = 5;
                                                    break
                                                }
                                                return c.default.reset(), c.default.set({
                                                    target: 0,
                                                    items: ["魔族印章"]
                                                }), e.next = 5, c.default.start(!1, !1);
                                            case 5:
                                                return e.abrupt("return", Promise.reject(t));
                                            case 6:
                                            case "end":
                                                return e.stop()
                                        }
                                    }), e)
                                })));
                                return function(t) {
                                    return e.apply(this, arguments)
                                }
                            }()));
                        case 11:
                        case "end":
                            return e.stop()
                    }
                }), e, this)
            }))));
        t.default = u
    },
    "23c6": function(e, t, n) {
        var r = n("2d95"),
            a = n("2b4c")("toStringTag"),
            s = "Arguments" == r(function() {
                return arguments
            }()),
            c = function(e, t) {
                try {
                    return e[t]
                } catch (n) {}
            };
        e.exports = function(e) {
            var t, n, u;
            return void 0 === e ? "Undefined" : null === e ? "Null" : "string" == typeof(n = c(t = Object(e), a)) ? n : s ? r(t) : "Object" == (u = r(t)) && "function" == typeof t.callee ? "Arguments" : u
        }
    },
    "241e": function(e, t, n) {
        var r = n("25eb");
        e.exports = function(e) {
            return Object(r(e))
        }
    },
    2437: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0;
        var r = n("3f7e"),
            a = new r.Task({
                title: "补充飞行之羽",
                tags: ["item"],
                form: [{
                    title: "忽略领取",
                    type: "checkbox",
                    value: !1
                }]
            }, (function() {
                var e = this.form[0].value;
                return (0, r.bcfxzy)(e)
            }));
        t.default = a
    },
    2469: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("6762"), n("2fdb"), n("7514"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = new s.Task({
                title: "声望兑换道具",
                tags: ["change"],
                form: [{
                    title: "道具名称",
                    type: "input",
                    placeholder: "道具名称",
                    focus: !0,
                    value: ""
                }]
            }, (function() {
                var e = this.form[0].value;

                function t() {
                    return n.apply(this, arguments)
                }

                function n() {
                    return n = (0, a.default)(regeneratorRuntime.mark((function n() {
                        var r, a, c, u, i, o, f;
                        return regeneratorRuntime.wrap((function(n) {
                            while (1) switch (n.prev = n.next) {
                                case 0:
                                    return n.next = 2, s.task.sleep();
                                case 2:
                                    return n.next = 4, s.task.send("npc 1001 3", ["<menu", "不好意思"]);
                                case 4:
                                    if (r = n.sent, a = r.text, c = r.index, !(c > 0)) {
                                        n.next = 9;
                                        break
                                    }
                                    throw new Error(a);
                                case 9:
                                    if (u = (0, s.parseMsg)(a).data.list, i = u.find((function(t) {
                                            var n = t.title;
                                            return n.includes(e)
                                        })), !i) {
                                        n.next = 27;
                                        break
                                    }
                                    return n.next = 14, s.task.sleep();
                                case 14:
                                    return n.next = 16, s.task.send(i.code, "[yes]");
                                case 16:
                                    return n.next = 18, s.task.sleep();
                                case 18:
                                    return n.next = 20, s.task.send("yes", ["你得到：", "点不足以兑换"]);
                                case 20:
                                    if (o = n.sent, f = o.index, 0 !== f) {
                                        n.next = 25;
                                        break
                                    }
                                    return n.next = 25, t();
                                case 25:
                                    n.next = 29;
                                    break;
                                case 27:
                                    return n.next = 29, s.task.cancel();
                                case 29:
                                case "end":
                                    return n.stop()
                            }
                        }), n)
                    }))), n.apply(this, arguments)
                }
                return s.task.move("msgd 101", "迷失之地").then(t)
            }));
        t.default = c
    },
    "24c5": function(e, t, n) {
        "use strict";
        var r, a, s, c, u = n("b8e3"),
            i = n("e53d"),
            o = n("d864"),
            f = n("40c3"),
            l = n("63b6"),
            p = n("f772"),
            d = n("79aa"),
            x = n("1173"),
            h = n("a22a"),
            k = n("f201"),
            v = n("4178").set,
            m = n("aba2")(),
            b = n("656e"),
            g = n("4439"),
            y = n("bc13"),
            w = n("cd78"),
            _ = "Promise",
            R = i.TypeError,
            M = i.process,
            j = M && M.versions,
            E = j && j.v8 || "",
            S = i[_],
            O = "process" == f(M),
            P = function() {},
            A = a = b.f,
            T = !! function() {
                try {
                    var e = S.resolve(1),
                        t = (e.constructor = {})[n("5168")("species")] = function(e) {
                            e(P, P)
                        };
                    return (O || "function" == typeof PromiseRejectionEvent) && e.then(P) instanceof t && 0 !== E.indexOf("6.6") && -1 === y.indexOf("Chrome/66")
                } catch (r) {}
            }(),
            B = function(e) {
                var t;
                return !(!p(e) || "function" != typeof(t = e.then)) && t
            },
            N = function(e, t) {
                if (!e._n) {
                    e._n = !0;
                    var n = e._c;
                    m((function() {
                        var r = e._v,
                            a = 1 == e._s,
                            s = 0,
                            c = function(t) {
                                var n, s, c, u = a ? t.ok : t.fail,
                                    i = t.resolve,
                                    o = t.reject,
                                    f = t.domain;
                                try {
                                    u ? (a || (2 == e._h && C(e), e._h = 1), !0 === u ? n = r : (f && f.enter(), n = u(r), f && (f.exit(), c = !0)), n === t.promise ? o(R("Promise-chain cycle")) : (s = B(n)) ? s.call(n, i, o) : i(n)) : o(r)
                                } catch (l) {
                                    f && !c && f.exit(), o(l)
                                }
                            };
                        while (n.length > s) c(n[s++]);
                        e._c = [], e._n = !1, t && !e._h && I(e)
                    }))
                }
            },
            I = function(e) {
                v.call(i, (function() {
                    var t, n, r, a = e._v,
                        s = z(e);
                    if (s && (t = g((function() {
                            O ? M.emit("unhandledRejection", a, e) : (n = i.onunhandledrejection) ? n({
                                promise: e,
                                reason: a
                            }) : (r = i.console) && r.error && r.error("Unhandled promise rejection", a)
                        })), e._h = O || z(e) ? 2 : 1), e._a = void 0, s && t.e) throw t.v
                }))
            },
            z = function(e) {
                return 1 !== e._h && 0 === (e._a || e._c).length
            },
            C = function(e) {
                v.call(i, (function() {
                    var t;
                    O ? M.emit("rejectionHandled", e) : (t = i.onrejectionhandled) && t({
                        promise: e,
                        reason: e._v
                    })
                }))
            },
            D = function(e) {
                var t = this;
                t._d || (t._d = !0, t = t._w || t, t._v = e, t._s = 2, t._a || (t._a = t._c.slice()), N(t, !0))
            },
            L = function(e) {
                var t, n = this;
                if (!n._d) {
                    n._d = !0, n = n._w || n;
                    try {
                        if (n === e) throw R("Promise can't be resolved itself");
                        (t = B(e)) ? m((function() {
                            var r = {
                                _w: n,
                                _d: !1
                            };
                            try {
                                t.call(e, o(L, r, 1), o(D, r, 1))
                            } catch (a) {
                                D.call(r, a)
                            }
                        })): (n._v = e, n._s = 1, N(n, !1))
                    } catch (r) {
                        D.call({
                            _w: n,
                            _d: !1
                        }, r)
                    }
                }
            };
        T || (S = function(e) {
            x(this, S, _, "_h"), d(e), r.call(this);
            try {
                e(o(L, this, 1), o(D, this, 1))
            } catch (t) {
                D.call(this, t)
            }
        }, r = function(e) {
            this._c = [], this._a = void 0, this._s = 0, this._d = !1, this._v = void 0, this._h = 0, this._n = !1
        }, r.prototype = n("5c95")(S.prototype, {
            then: function(e, t) {
                var n = A(k(this, S));
                return n.ok = "function" != typeof e || e, n.fail = "function" == typeof t && t, n.domain = O ? M.domain : void 0, this._c.push(n), this._a && this._a.push(n), this._s && N(this, !1), n.promise
            },
            catch: function(e) {
                return this.then(void 0, e)
            }
        }), s = function() {
            var e = new r;
            this.promise = e, this.resolve = o(L, e, 1), this.reject = o(D, e, 1)
        }, b.f = A = function(e) {
            return e === S || e === c ? new s(e) : a(e)
        }), l(l.G + l.W + l.F * !T, {
            Promise: S
        }), n("45f2")(S, _), n("4c95")(_), c = n("584a")[_], l(l.S + l.F * !T, _, {
            reject: function(e) {
                var t = A(this),
                    n = t.reject;
                return n(e), t.promise
            }
        }), l(l.S + l.F * (u || !T), _, {
            resolve: function(e) {
                return w(u && this === c ? S : this, e)
            }
        }), l(l.S + l.F * !(T && n("4ee1")((function(e) {
            S.all(e)["catch"](P)
        }))), _, {
            all: function(e) {
                var t = this,
                    n = A(t),
                    r = n.resolve,
                    a = n.reject,
                    s = g((function() {
                        var n = [],
                            s = 0,
                            c = 1;
                        h(e, !1, (function(e) {
                            var u = s++,
                                i = !1;
                            n.push(void 0), c++, t.resolve(e).then((function(e) {
                                i || (i = !0, n[u] = e, --c || r(n))
                            }), a)
                        })), --c || r(n)
                    }));
                return s.e && a(s.v), n.promise
            },
            race: function(e) {
                var t = this,
                    n = A(t),
                    r = n.reject,
                    a = g((function() {
                        h(e, !1, (function(e) {
                            t.resolve(e).then(n.resolve, r)
                        }))
                    }));
                return a.e && r(a.v), n.promise
            }
        })
    },
    "25eb": function(e, t) {
        e.exports = function(e) {
            if (void 0 == e) throw TypeError("Can't call method on  " + e);
            return e
        }
    },
    2681: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("6762"), n("2fdb"), n("7514"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = new s.Task({
                title: "兑换神奇宠种",
                tags: ["change"]
            }, (function() {
                function e() {
                    return t.apply(this, arguments)
                }

                function t() {
                    return t = (0, a.default)(regeneratorRuntime.mark((function t() {
                        var n, r, a, c, u, i;
                        return regeneratorRuntime.wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, s.task.sleep();
                                case 2:
                                    return t.next = 4, s.task.send("npc 1002 1", "<menu");
                                case 4:
                                    if (n = t.sent, r = n.text, a = (0, s.parseMsg)(r).data.list, c = a.find((function(e) {
                                            var t = e.title;
                                            return t.includes("神奇宠物种子")
                                        })), !c) {
                                        t.next = 24;
                                        break
                                    }
                                    return t.next = 11, s.task.sleep();
                                case 11:
                                    return t.next = 13, s.task.send(c.code, "[y]");
                                case 13:
                                    return t.next = 15, s.task.sleep();
                                case 15:
                                    return t.next = 17, s.task.send("y", ["你得到：", "金质徽章不足"]);
                                case 17:
                                    if (u = t.sent, i = u.index, 0 !== i) {
                                        t.next = 22;
                                        break
                                    }
                                    return t.next = 22, e();
                                case 22:
                                    t.next = 26;
                                    break;
                                case 24:
                                    return t.next = 26, s.task.cancel();
                                case 26:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    }))), t.apply(this, arguments)
                }
                return s.task.move("mjrk 101", "魔界入口1层").then(e)
            }));
        t.default = c
    },
    "275e": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("f559"), n("ac6a"), n("28a5"), n("a481"), n("6762"), n("2fdb"), n("c5f6"), n("4917");
        var a = r(n("768b"));
        n("7514"), n("96cf");
        var s = r(n("3b8d")),
            c = n("3f7e");

        function u() {
            return i.apply(this, arguments)
        }

        function i() {
            return i = (0, s.default)(regeneratorRuntime.mark((function e() {
                var t, n, r, a;
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                            return e.next = 2, (0, c.getMainDataAsync)();
                        case 2:
                            return t = e.sent, n = t.map, r = [], n.monster && r.push({
                                title: "暗怪",
                                code: "kill"
                            }), "彩云谷" === n.title && (r.push({
                                title: "前4个",
                                code: ["npc 1000 0", "npc 1000 1", "npc 1000 2", "npc 1000 3"]
                            }, {
                                title: "后8个",
                                code: ["npc 1001 0", "npc 1001 1", "npc 1001 2", "npc 1001 3", "npc 1001 4", "npc 1001 5", "npc 1001 6", "npc 1001 7"]
                            }, {
                                title: "全部12个",
                                code: ["npc 1000 0", "npc 1000 1", "npc 1000 2", "npc 1000 3", "npc 1001 0", "npc 1001 1", "npc 1001 2", "npc 1001 3", "npc 1001 4", "npc 1001 5", "npc 1001 6", "npc 1001 7"]
                            }), r.push({
                                title: "彩云风兽",
                                code: "npc 1000 0"
                            }, {
                                title: "彩云水兽",
                                code: "npc 1000 1"
                            }, {
                                title: "彩云雷兽",
                                code: "npc 1000 2"
                            }, {
                                title: "彩云电兽",
                                code: "npc 1000 3"
                            }), r.push({
                                title: "彩云地精（火）",
                                code: "npc 1001 0"
                            }, {
                                title: "彩云冰妖（土）",
                                code: "npc 1001 1"
                            }, {
                                title: "彩云甲兽（冰）",
                                code: "npc 1001 2"
                            }, {
                                title: "彩云绿魔（灵）",
                                code: "npc 1001 3"
                            }, {
                                title: "彩云蛛王（地）",
                                code: "npc 1001 4"
                            }, {
                                title: "彩云魔魂（天）",
                                code: "npc 1001 5"
                            }, {
                                title: "彩云神兽（神）",
                                code: "npc 1001 6"
                            }, {
                                title: "彩云魔神（魂）",
                                code: "npc 1001 7"
                            })), a = n.npc, a.forEach((function(e) {
                                var t = e.title,
                                    a = e.code,
                                    s = e.list,
                                    u = void 0 === s ? [] : s;
                                u.forEach((function(e) {
                                    var s = e.code,
                                        u = e.title;
                                    "h" === s || u.includes("战斗挑战") ? r.push({
                                        title: "".concat(t, " ").concat(s),
                                        code: "".concat(a, " ").concat(s)
                                    }) : "彩云谷" !== n.title && (u = (0, c.clearText)(u), u.startsWith("挑战：") && r.push({
                                        title: u.substring(3),
                                        code: "".concat(a, " ").concat(s)
                                    }))
                                }))
                            })), e.abrupt("return", r);
                        case 10:
                        case "end":
                            return e.stop()
                    }
                }), e)
            }))), i.apply(this, arguments)
        }
        var o = new c.Task({
            title: "挂机(暗怪/NPC/彩云)",
            tags: ["other"],
            batch: !1,
            options: {
                code: "",
                find: null,
                stepMax: 0,
                killMax: 0,
                findMax: 1,
                getPet: !1,
                troop: !1
            },
            reset: function() {
                var e = this.options;
                e.code = "", e.find = "", e.stepMax = 0, e.killMax = 0, e.findMax = 1, e.getPet = !1, e.troop = !1
            },
            set: function(e) {
                var t = this.options;
                Object.assign(t, e)
            },
            before: function() {
                var e = (0, s.default)(regeneratorRuntime.mark((function e() {
                    var t, n, r, a, s;
                    return regeneratorRuntime.wrap((function(e) {
                        while (1) switch (e.prev = e.next) {
                            case 0:
                                return t = this.options, e.next = 3, u();
                            case 3:
                                if (n = e.sent, n.length) {
                                    e.next = 8;
                                    break
                                }
                                throw r = "当前地图无法挂机", c.task.log(r), new Error(r);
                            case 8:
                                return e.next = 10, (0, c.showActionSheet)({
                                    itemList: n.map((function(e) {
                                        return e.title
                                    }))
                                });
                            case 10:
                                if (a = e.sent, s = a.tapIndex, !(s < 0)) {
                                    e.next = 14;
                                    break
                                }
                                throw new Error("取消");
                            case 14:
                                t.code = n[s].code;
                            case 15:
                            case "end":
                                return e.stop()
                        }
                    }), e, this)
                })));

                function t() {
                    return e.apply(this, arguments)
                }
                return t
            }()
        }, (0, s.default)(regeneratorRuntime.mark((function e() {
            var t, n, r, i, o, f, l;
            return regeneratorRuntime.wrap((function(e) {
                while (1) switch (e.prev = e.next) {
                    case 0:
                        return l = function() {
                            return l = (0, s.default)(regeneratorRuntime.mark((function e() {
                                var s, u, o, l, p, d, x, h, k, v, m, b;
                                return regeneratorRuntime.wrap((function(e) {
                                    while (1) switch (e.prev = e.next) {
                                        case 0:
                                            return e.next = 2, c.task.sleep();
                                        case 2:
                                            return s = Array.isArray(n) ? n[r % n.length] : n, e.next = 5, c.task.send(s, ["你现在很累了", "<r>walk ", "没有处在暴走状态", "combat", "已经被你的队伍打败过了", "没有这个人", "这人不见了", "Command Unknown", " < r > cnt"]);
                                        case 5:
                                            if (u = e.sent, o = u.index, l = u.text, 0 !== o && 1 !== o && 2 !== o) {
                                                e.next = 17;
                                                break
                                            }
                                            if (console.warn(l), 0 !== o || !/^\d+\sh$/.test(s)) {
                                                e.next = 12;
                                                break
                                            }
                                            return e.abrupt("return");
                                        case 12:
                                            return p = l.match(/(\d+) 秒之后就行/) || ["", 2], d = (0, a.default)(p, 2), d[0], x = d[1], e.next = 15, c.task.sleep(1e3 * Number(x));
                                        case 15:
                                            e.next = 44;
                                            break;
                                        case 17:
                                            if (3 !== o) {
                                                e.next = 27;
                                                break
                                            }
                                            return e.next = 20, new Promise((function(e) {
                                                uni.$once("combatready", e)
                                            }));
                                        case 20:
                                            v = e.sent, m = v.msgs, b = v.sleep, h = m, k = b, e.next = 29;
                                            break;
                                        case 27:
                                            h = [l], k = !1;
                                        case 29:
                                            if (k || 7 === o || r++, console.log("msgs:", h), !t.troop || !h.find((function(e) {
                                                    return e.includes("离开了队伍") || e.includes("离开队伍") || e.includes("你被打败了")
                                                }))) {
                                                e.next = 33;
                                                break
                                            }
                                            throw new Error("队友离开了队伍");
                                        case 33:
                                            if (console.log("options.find:", t.find), !t.find || !h.find((function(e) {
                                                    return t.find.test(e.replace(/\d+ \/ \d+/g, (function(e) {
                                                        var t = e.split(" / "),
                                                            n = (0, a.default)(t, 2),
                                                            r = n[0],
                                                            s = n[1];
                                                        return r = Number(r), s = Number(s), "".concat(r > s ? s : r, " / ").concat(s)
                                                    })))
                                                }))) {
                                                e.next = 40;
                                                break
                                            }
                                            if (i++, console.log("findIndex:", i), console.log("options.findMax:", t.findMax), t.findMax !== i) {
                                                e.next = 40;
                                                break
                                            }
                                            return e.abrupt("return");
                                        case 40:
                                            if (console.log("killIndex:", r), console.log("options.killMax:", t.killMax), !t.killMax || t.killMax !== r) {
                                                e.next = 44;
                                                break
                                            }
                                            return e.abrupt("return");
                                        case 44:
                                            return e.next = 46, f();
                                        case 46:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e)
                            }))), l.apply(this, arguments)
                        }, f = function() {
                            return l.apply(this, arguments)
                        }, t = this.options, n = t.code || "kill", r = 0, i = 0, e.next = 8, (0, c.setMainDataAsync)({
                            combat: {
                                stepMax: t.stepMax,
                                getPet: t.getPet
                            }
                        });
                    case 8:
                        if (!Array.isArray(n)) {
                            e.next = 15;
                            break
                        }
                        return e.next = 11, u();
                    case 11:
                        if (o = e.sent, n = n.filter((function(e) {
                                return o.find((function(t) {
                                    var n = t.code;
                                    return n === e
                                }))
                            })), n.length) {
                            e.next = 15;
                            break
                        }
                        throw new Error("无法挂机");
                    case 15:
                        return e.next = 17, f();
                    case 17:
                    case "end":
                        return e.stop()
                }
            }), e, this)
        }))));
        t.default = o
    },
    "27ca": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("a481"), n("3b2b"), n("4917"), n("6762"), n("2fdb"), n("7514"), n("96cf");
        var a = r(n("3b8d"));
        n("c5f6"), n("87f3");
        var s = n("3f7e"),
            c = new s.Task({
                title: "物品给人",
                tags: ["item"],
                form: [{
                    title: "物品",
                    type: "input",
                    placeholder: "名称",
                    focus: !0,
                    value: ""
                }, {
                    title: "用户",
                    type: "input",
                    placeholder: "名称/序号",
                    focus: !1,
                    value: ""
                }, {
                    title: "数量限制",
                    type: "input",
                    placeholder: "适用于不可叠加类",
                    focus: !1,
                    value: ""
                }]
            }, (function() {
                var e = [/^<menu/, /^<input/, /\[(.+?)\].*?(确定|打开|继续)\|/, /^<pmg>你给/, /^<pmg>这里没有/],
                    t = /装备中|绑定|赠送/,
                    n = this.form[0].value,
                    r = this.form[1].value,
                    c = this.form[2].value || Number.MAX_SAFE_INTEGER,
                    u = 0;

                function i(e) {
                    return o.apply(this, arguments)
                }

                function o() {
                    return o = (0, a.default)(regeneratorRuntime.mark((function t(n) {
                        var a, o, f, l, p, d, x;
                        return regeneratorRuntime.wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    return a = n.index, o = n.text, t.next = 3, s.task.sleep();
                                case 3:
                                    t.t0 = a, t.next = 0 === t.t0 ? 6 : 1 === t.t0 ? 15 : 2 === t.t0 ? 17 : 3 === t.t0 ? 19 : 23;
                                    break;
                                case 6:
                                    if (r && (p = (0, s.parseMsg)(o).data.list, l = p.find((function(e, t) {
                                            var n = e.title;
                                            return /^\d+$/.test(r) && Number(r) < 30 ? Number(r) === t + 1 : n.includes(r)
                                        }))), l) {
                                        t.next = 13;
                                        break
                                    }
                                    return t.next = 10, s.task.cancel(!0);
                                case 10:
                                    throw d = "目标用户未找到", s.task.log(d), new Error(d);
                                case 13:
                                    return f = l.code, t.abrupt("break", 23);
                                case 15:
                                    return f = o.match(/有(\d+)/)[1], t.abrupt("break", 23);
                                case 17:
                                    return f = o.match(e[2])[1], t.abrupt("break", 23);
                                case 19:
                                    if (u++, !(u >= c)) {
                                        t.next = 22;
                                        break
                                    }
                                    throw new Error("已达设定上限");
                                case 22:
                                    return t.abrupt("break", 23);
                                case 23:
                                    if (!f) {
                                        t.next = 29;
                                        break
                                    }
                                    return t.next = 26, s.task.send(f, e);
                                case 26:
                                    return x = t.sent, t.next = 29, i(x);
                                case 29:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    }))), o.apply(this, arguments)
                }

                function f() {
                    return l.apply(this, arguments)
                }

                function l() {
                    return l = (0, a.default)(regeneratorRuntime.mark((function r() {
                        var a, c, u, o, l, p, d, x, h;
                        return regeneratorRuntime.wrap((function(r) {
                            while (1) switch (r.prev = r.next) {
                                case 0:
                                    return r.next = 2, s.task.sleep();
                                case 2:
                                    return r.prev = 2, r.next = 5, (0, s.findItem)(/[|｜]/.test(n) ? new RegExp(n.replace(/｜/g, "|")) : n, "all", 0, !1, t);
                                case 5:
                                    a = r.sent, r.next = 16;
                                    break;
                                case 8:
                                    return r.prev = 8, r.t0 = r["catch"](2), r.next = 12, s.task.cancel(!0);
                                case 12:
                                    throw console.error(r.t0), c = "".concat(n, " 未找到"), s.task.log(c), new Error(c);
                                case 16:
                                    if (u = a, o = u.code, l = u.list, p = u.title, d = l.find((function(e) {
                                            var t = e.title,
                                                n = /给人/;
                                            return n.test(t)
                                        })), d) {
                                        r.next = 24;
                                        break
                                    }
                                    return r.next = 21, s.task.cancel(!0);
                                case 21:
                                    throw x = "".concat((0, s.clearText)(p), " 无法给人"), s.task.log(x), new Error(x);
                                case 24:
                                    return r.next = 26, s.task.sleep();
                                case 26:
                                    return r.next = 28, s.task.send("".concat(o, " ").concat(d.code), e);
                                case 28:
                                    return h = r.sent, r.next = 31, i(h);
                                case 31:
                                    return r.next = 33, f();
                                case 33:
                                case "end":
                                    return r.stop()
                            }
                        }), r, null, [
                            [2, 8]
                        ])
                    }))), l.apply(this, arguments)
                }
                return f()
            }));
        t.default = c
    },
    "28a5": function(e, t, n) {
        "use strict";
        var r = n("aae3"),
            a = n("cb7c"),
            s = n("ebd6"),
            c = n("0390"),
            u = n("9def"),
            i = n("5f1b"),
            o = n("520a"),
            f = n("79e5"),
            l = Math.min,
            p = [].push,
            d = "split",
            x = "length",
            h = "lastIndex",
            k = 4294967295,
            v = !f((function() {
                RegExp(k, "y")
            }));
        n("214f")("split", 2, (function(e, t, n, f) {
            var m;
            return m = "c" == "abbc" [d](/(b)*/)[1] || 4 != "test" [d](/(?:)/, -1)[x] || 2 != "ab" [d](/(?:ab)*/)[x] || 4 != "." [d](/(.?)(.?)/)[x] || "." [d](/()()/)[x] > 1 || "" [d](/.?/)[x] ? function(e, t) {
                var a = String(this);
                if (void 0 === e && 0 === t) return [];
                if (!r(e)) return n.call(a, e, t);
                var s, c, u, i = [],
                    f = (e.ignoreCase ? "i" : "") + (e.multiline ? "m" : "") + (e.unicode ? "u" : "") + (e.sticky ? "y" : ""),
                    l = 0,
                    d = void 0 === t ? k : t >>> 0,
                    v = new RegExp(e.source, f + "g");
                while (s = o.call(v, a)) {
                    if (c = v[h], c > l && (i.push(a.slice(l, s.index)), s[x] > 1 && s.index < a[x] && p.apply(i, s.slice(1)), u = s[0][x], l = c, i[x] >= d)) break;
                    v[h] === s.index && v[h]++
                }
                return l === a[x] ? !u && v.test("") || i.push("") : i.push(a.slice(l)), i[x] > d ? i.slice(0, d) : i
            } : "0" [d](void 0, 0)[x] ? function(e, t) {
                return void 0 === e && 0 === t ? [] : n.call(this, e, t)
            } : n, [function(n, r) {
                var a = e(this),
                    s = void 0 == n ? void 0 : n[t];
                return void 0 !== s ? s.call(n, a, r) : m.call(String(a), n, r)
            }, function(e, t) {
                var r = f(m, e, this, t, m !== n);
                if (r.done) return r.value;
                var o = a(e),
                    p = String(this),
                    d = s(o, RegExp),
                    x = o.unicode,
                    h = (o.ignoreCase ? "i" : "") + (o.multiline ? "m" : "") + (o.unicode ? "u" : "") + (v ? "y" : "g"),
                    b = new d(v ? o : "^(?:" + o.source + ")", h),
                    g = void 0 === t ? k : t >>> 0;
                if (0 === g) return [];
                if (0 === p.length) return null === i(b, p) ? [p] : [];
                var y = 0,
                    w = 0,
                    _ = [];
                while (w < p.length) {
                    b.lastIndex = v ? w : 0;
                    var R, M = i(b, v ? p : p.slice(w));
                    if (null === M || (R = l(u(b.lastIndex + (v ? 0 : w)), p.length)) === y) w = c(p, w, x);
                    else {
                        if (_.push(p.slice(y, w)), _.length === g) return _;
                        for (var j = 1; j <= M.length - 1; j++)
                            if (_.push(M[j]), _.length === g) return _;
                        w = y = R
                    }
                }
                return _.push(p.slice(y)), _
            }]
        }))
    },
    "28b9": function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("6762"), n("2fdb");
        var r = n("3f7e"),
            a = new r.Task({
                title: "龙魂进化",
                tags: ["event"]
            }, (function() {
                function e(t) {
                    var n = t.text,
                        a = t.index;
                    if (1 === a) throw new Error(n);
                    if (n.includes("今日剩余的灵魂进化次数为")) return r.task.sleep().then((function() {
                        return r.task.send("sure_ce", ["灵魂进化", "灵魂粉末不"])
                    })).then(e)
                }
                return r.task.send("dragon_soul", "龙魂系统").then((function() {
                    return r.task.sleep()
                })).then((function() {
                    return r.task.send("soul_grow", ["灵魂进化", "灵魂粉末不"])
                })).then(e)
            }));
        t.default = a
    },
    "294c": function(e, t) {
        e.exports = function(e) {
            try {
                return !!e()
            } catch (t) {
                return !0
            }
        }
    },
    "2a66": function(e, t, n) {
        (function(t, r, a) {
            e.exports = r(n("21bf"), n("38ba"))
        })(0, (function(e) {
            return e.pad.ZeroPadding = {
                pad: function(e, t) {
                    var n = 4 * t;
                    e.clamp(), e.sigBytes += n - (e.sigBytes % n || n)
                },
                unpad: function(e) {
                    var t = e.words,
                        n = e.sigBytes - 1;
                    for (n = e.sigBytes - 1; n >= 0; n--)
                        if (t[n >>> 2] >>> 24 - n % 4 * 8 & 255) {
                            e.sigBytes = n + 1;
                            break
                        }
                }
            }, e.pad.ZeroPadding
        }))
    },
    "2aba": function(e, t, n) {
        var r = n("7726"),
            a = n("32e9"),
            s = n("69a8"),
            c = n("ca5a")("src"),
            u = n("fa5b"),
            i = "toString",
            o = ("" + u).split(i);
        n("8378").inspectSource = function(e) {
            return u.call(e)
        }, (e.exports = function(e, t, n, u) {
            var i = "function" == typeof n;
            i && (s(n, "name") || a(n, "name", t)), e[t] !== n && (i && (s(n, c) || a(n, c, e[t] ? "" + e[t] : o.join(String(t)))), e === r ? e[t] = n : u ? e[t] ? e[t] = n : a(e, t, n) : (delete e[t], a(e, t, n)))
        })(Function.prototype, i, (function() {
            return "function" == typeof this && this[c] || u.call(this)
        }))
    },
    "2aeb": function(e, t, n) {
        var r = n("cb7c"),
            a = n("1495"),
            s = n("e11e"),
            c = n("613b")("IE_PROTO"),
            u = function() {},
            i = "prototype",
            o = function() {
                var e, t = n("230e")("iframe"),
                    r = s.length,
                    a = "<",
                    c = ">";
                t.style.display = "none", n("fab2").appendChild(t), t.src = "javascript:", e = t.contentWindow.document, e.open(), e.write(a + "script" + c + "document.F=Object" + a + "/script" + c), e.close(), o = e.F;
                while (r--) delete o[i][s[r]];
                return o()
            };
        e.exports = Object.create || function(e, t) {
            var n;
            return null !== e ? (u[i] = r(e), n = new u, u[i] = null, n[c] = e) : n = o(), void 0 === t ? n : a(n, t)
        }
    },
    "2b4c": function(e, t, n) {
        var r = n("5537")("wks"),
            a = n("ca5a"),
            s = n("7726").Symbol,
            c = "function" == typeof s,
            u = e.exports = function(e) {
                return r[e] || (r[e] = c && s[e] || (c ? s : a)("Symbol." + e))
            };
        u.store = r
    },
    "2b79": function(e, t, n) {
        (function(t, r, a) {
            e.exports = r(n("21bf"), n("df2f"), n("5980"))
        })(0, (function(e) {
            return function() {
                var t = e,
                    n = t.lib,
                    r = n.Base,
                    a = n.WordArray,
                    s = t.algo,
                    c = s.MD5,
                    u = s.EvpKDF = r.extend({
                        cfg: r.extend({
                            keySize: 4,
                            hasher: c,
                            iterations: 1
                        }),
                        init: function(e) {
                            this.cfg = this.cfg.extend(e)
                        },
                        compute: function(e, t) {
                            var n, r = this.cfg,
                                s = r.hasher.create(),
                                c = a.create(),
                                u = c.words,
                                i = r.keySize,
                                o = r.iterations;
                            while (u.length < i) {
                                n && s.update(n), n = s.update(e).finalize(t), s.reset();
                                for (var f = 1; f < o; f++) n = s.finalize(n), s.reset();
                                c.concat(n)
                            }
                            return c.sigBytes = 4 * i, c
                        }
                    });
                t.EvpKDF = function(e, t, n) {
                    return u.create(n).compute(e, t)
                }
            }(), e.EvpKDF
        }))
    },
    "2d00": function(e, t) {
        e.exports = !1
    },
    "2d95": function(e, t) {
        var n = {}.toString;
        e.exports = function(e) {
            return n.call(e).slice(8, -1)
        }
    },
    "2fdb": function(e, t, n) {
        "use strict";
        var r = n("5ca1"),
            a = n("d2c8"),
            s = "includes";
        r(r.P + r.F * n("5147")(s), "String", {
            includes: function(e) {
                return !!~a(this, e, s).indexOf(e, arguments.length > 1 ? arguments[1] : void 0)
            }
        })
    },
    3024: function(e, t) {
        e.exports = function(e, t, n) {
            var r = void 0 === n;
            switch (t.length) {
                case 0:
                    return r ? e() : e.call(n);
                case 1:
                    return r ? e(t[0]) : e.call(n, t[0]);
                case 2:
                    return r ? e(t[0], t[1]) : e.call(n, t[0], t[1]);
                case 3:
                    return r ? e(t[0], t[1], t[2]) : e.call(n, t[0], t[1], t[2]);
                case 4:
                    return r ? e(t[0], t[1], t[2], t[3]) : e.call(n, t[0], t[1], t[2], t[3])
            }
            return e.apply(n, t)
        }
    },
    "30f1": function(e, t, n) {
        "use strict";
        var r = n("b8e3"),
            a = n("63b6"),
            s = n("9138"),
            c = n("35e8"),
            u = n("481b"),
            i = n("8f60"),
            o = n("45f2"),
            f = n("53e2"),
            l = n("5168")("iterator"),
            p = !([].keys && "next" in [].keys()),
            d = "@@iterator",
            x = "keys",
            h = "values",
            k = function() {
                return this
            };
        e.exports = function(e, t, n, v, m, b, g) {
            i(n, t, v);
            var y, w, _, R = function(e) {
                    if (!p && e in S) return S[e];
                    switch (e) {
                        case x:
                            return function() {
                                return new n(this, e)
                            };
                        case h:
                            return function() {
                                return new n(this, e)
                            }
                    }
                    return function() {
                        return new n(this, e)
                    }
                },
                M = t + " Iterator",
                j = m == h,
                E = !1,
                S = e.prototype,
                O = S[l] || S[d] || m && S[m],
                P = O || R(m),
                A = m ? j ? R("entries") : P : void 0,
                T = "Array" == t && S.entries || O;
            if (T && (_ = f(T.call(new e)), _ !== Object.prototype && _.next && (o(_, M, !0), r || "function" == typeof _[l] || c(_, l, k))), j && O && O.name !== h && (E = !0, P = function() {
                    return O.call(this)
                }), r && !g || !p && !E && S[l] || c(S, l, P), u[t] = P, u[M] = k, m)
                if (y = {
                        values: j ? P : R(h),
                        keys: b ? P : R(x),
                        entries: A
                    }, g)
                    for (w in y) w in S || s(S, w, y[w]);
                else a(a.P + a.F * (p || E), t, y);
            return y
        }
    },
    "31d8": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("a481"), n("c5f6"), n("6762"), n("2fdb"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = r(n("275e")),
            u = new s.Task({
                title: "藏宝迷宫",
                tags: ["event"]
            }, (function() {
                var e, t = ["黄金岛", "瘟疫领域", "通灵领域", "清泉领域", "元素入口", "灵魂神殿"];

                function n() {
                    return r.apply(this, arguments)
                }

                function r() {
                    return r = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var t, n, r, a, c, u;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.next = 4, s.task.move("msgd 103", "枯萎之地");
                                case 4:
                                    return e.next = 6, s.task.sleep();
                                case 6:
                                    return t = "npc 1004", e.next = 9, (0, s.findNpcItem)({
                                        code: t
                                    }, "前往黄金岛");
                                case 9:
                                    return n = e.sent, r = n.code, e.next = 13, s.task.send("".concat(t, " ").concat(r), ["来到黄金岛", "不能进入"]);
                                case 13:
                                    if (a = e.sent, c = a.index, u = a.text, 0 === c) {
                                        e.next = 18;
                                        break
                                    }
                                    throw new Error(u);
                                case 18:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), r.apply(this, arguments)
                }

                function u() {
                    return i.apply(this, arguments)
                }

                function i() {
                    return i = (0, a.default)(regeneratorRuntime.mark((function e() {
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return c.default.reset(), c.default.set({
                                        code: "kill",
                                        find: /完成度已达到上限|激怒了宙明天主/
                                    }), e.next = 6, c.default.start(!1, !1);
                                case 6:
                                    return e.next = 8, s.task.sleep();
                                case 8:
                                    return c.default.reset(), c.default.set({
                                        code: ["npc 1000 0", "npc 1000 1", "npc 1000 2"],
                                        killMax: 1
                                    }), e.next = 12, c.default.start(!1, !1);
                                case 12:
                                    return e.next = 14, u();
                                case 14:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), i.apply(this, arguments)
                }

                function o(e) {
                    return f.apply(this, arguments)
                }

                function f() {
                    return f = (0, a.default)(regeneratorRuntime.mark((function e(t) {
                        var n;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return n = [l, d, h, v, y, u], e.next = 3, n[Math.max(0, t)]();
                                case 3:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), f.apply(this, arguments)
                }

                function l() {
                    return p.apply(this, arguments)
                }

                function p() {
                    return p = (0, a.default)(regeneratorRuntime.mark((function e() {
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.next = 4, s.task.send("t l 5001", "<title>");
                                case 4:
                                    return e.next = 6, d();
                                case 6:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), p.apply(this, arguments)
                }

                function d() {
                    return x.apply(this, arguments)
                }

                function x() {
                    return x = (0, a.default)(regeneratorRuntime.mark((function e() {
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.next = 4, s.task.send("t l 5001", "<title>");
                                case 4:
                                    return e.next = 6, s.task.sleep();
                                case 6:
                                    return e.next = 8, s.task.send("t l 5001", "<title>");
                                case 8:
                                    return e.next = 10, s.task.sleep();
                                case 10:
                                    return c.default.reset(), c.default.set({
                                        code: "npc 1000 h",
                                        find: /完成度已达到上限/
                                    }), e.next = 14, c.default.start(!1, !1);
                                case 14:
                                    return e.next = 16, s.task.sleep();
                                case 16:
                                    return e.next = 18, s.task.send("t l 6001", "<title>");
                                case 18:
                                    return e.next = 20, s.task.sleep();
                                case 20:
                                    return e.next = 22, s.task.send("t l 6001", "<title>");
                                case 22:
                                    return e.next = 24, s.task.sleep();
                                case 24:
                                    return e.next = 26, s.task.send("npc 1000 2", "<menu");
                                case 26:
                                    return e.next = 28, s.task.sleep();
                                case 28:
                                    return e.next = 30, s.task.send("2", "<title>");
                                case 30:
                                    return e.next = 32, h();
                                case 32:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), x.apply(this, arguments)
                }

                function h() {
                    return k.apply(this, arguments)
                }

                function k() {
                    return k = (0, a.default)(regeneratorRuntime.mark((function e() {
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.next = 4, s.task.send("t l 5001", "<title>");
                                case 4:
                                    return c.default.reset(), c.default.set({
                                        code: "kill",
                                        find: /完成度已达到上限/
                                    }), e.next = 8, c.default.start(!1, !1);
                                case 8:
                                    return e.next = 10, s.task.sleep();
                                case 10:
                                    return e.next = 12, s.task.send("t l 6001", "<title>");
                                case 12:
                                    return e.next = 14, s.task.sleep();
                                case 14:
                                    return e.next = 16, s.task.send("npc 1000 2", "<menu");
                                case 16:
                                    return e.next = 18, s.task.sleep();
                                case 18:
                                    return e.next = 20, s.task.send("3", "<title>");
                                case 20:
                                    return e.next = 22, v();
                                case 22:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), k.apply(this, arguments)
                }

                function v() {
                    return m.apply(this, arguments)
                }

                function m() {
                    return m = (0, a.default)(regeneratorRuntime.mark((function e() {
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.next = 4, s.task.send("t l 5001", "<title>");
                                case 4:
                                    return c.default.reset(), c.default.set({
                                        code: "npc 1000 h",
                                        killMax: 1
                                    }), e.next = 8, c.default.start(!1, !1);
                                case 8:
                                    return e.next = 10, s.task.sleep();
                                case 10:
                                    return e.next = 12, s.task.send("t l 5001", "<title>");
                                case 12:
                                    return c.default.reset(), c.default.set({
                                        code: "npc 1000 h",
                                        killMax: 1
                                    }), e.next = 16, c.default.start(!1, !1);
                                case 16:
                                    return e.next = 18, s.task.sleep();
                                case 18:
                                    return e.next = 20, s.task.send("t l 5001", "<title>");
                                case 20:
                                    return c.default.reset(), c.default.set({
                                        code: "npc 1000 h",
                                        find: /完成度已达到上限/
                                    }), e.next = 24, c.default.start(!1, !1);
                                case 24:
                                    return e.next = 26, s.task.sleep();
                                case 26:
                                    return e.next = 28, s.task.send("npc 1001 2", "<menu");
                                case 28:
                                    return e.next = 30, s.task.sleep();
                                case 30:
                                    return e.next = 32, s.task.send("4", "<title>");
                                case 32:
                                    return e.next = 34, y();
                                case 34:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), m.apply(this, arguments)
                }

                function b(e, t, n) {
                    return g.apply(this, arguments)
                }

                function g() {
                    return g = (0, a.default)(regeneratorRuntime.mark((function e(t, n, r) {
                        var a, u, i, o, f;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    if (t) {
                                        e.next = 2;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 2:
                                    a = [
                                        ["岩火龙", "水灵龙"],
                                        ["天雷机甲", "寒冰龙"],
                                        ["风翼龙", "金陵龟"],
                                        ["草木龙王", "泥石妖"]
                                    ], u = ["t l 8001", "t l 12001"], i = a[n], o = 0;
                                case 6:
                                    if (!(o < i.length)) {
                                        e.next = 26;
                                        break
                                    }
                                    if (f = i[o], !(t.includes(f) && r < 3)) {
                                        e.next = 23;
                                        break
                                    }
                                    return e.next = 11, s.task.sleep();
                                case 11:
                                    return e.next = 13, s.task.send(u[o], "<title>");
                                case 13:
                                    return c.default.reset(), c.default.set({
                                        code: "npc 1000 h",
                                        killMax: 3
                                    }), e.next = 17, c.default.start(!1, !1);
                                case 17:
                                    return console.log("kill"), r++, e.next = 21, s.task.sleep();
                                case 21:
                                    return e.next = 23, s.task.send(u[Number(!o)], "<title>");
                                case 23:
                                    o++, e.next = 6;
                                    break;
                                case 26:
                                    return e.abrupt("return", r);
                                case 27:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), g.apply(this, arguments)
                }

                function y() {
                    return w.apply(this, arguments)
                }

                function w() {
                    return w = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var t, n, r, a, i, o, f, l, p;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return t = "npc 1001", e.next = 3, (0, s.findNpcItem)({
                                        code: t
                                    }, "元素指引");
                                case 3:
                                    if (n = e.sent, r = "", !n) {
                                        e.next = 13;
                                        break
                                    }
                                    return e.next = 8, s.task.sleep();
                                case 8:
                                    return e.next = 10, s.task.send("".concat(t, " ").concat(n.code), "需要击败");
                                case 10:
                                    a = e.sent, i = a.text, r = i;
                                case 13:
                                    return e.next = 15, s.task.sleep();
                                case 15:
                                    return e.next = 17, s.task.send("t l 5001", "<title>");
                                case 17:
                                    return e.next = 19, b(r, 0, 0);
                                case 19:
                                    return o = e.sent, e.next = 22, s.task.sleep();
                                case 22:
                                    return e.next = 24, s.task.send("t l 5001", "<title>");
                                case 24:
                                    return e.next = 26, b(r, 1, o);
                                case 26:
                                    return f = e.sent, e.next = 29, s.task.sleep();
                                case 29:
                                    return e.next = 31, s.task.send("t l 5001", "<title>");
                                case 31:
                                    return e.next = 33, b(r, 2, f);
                                case 33:
                                    return l = e.sent, e.next = 36, s.task.sleep();
                                case 36:
                                    return e.next = 38, s.task.send("t l 5001", "<title>");
                                case 38:
                                    return e.next = 40, b(r, 3, l);
                                case 40:
                                    return p = e.sent, e.next = 43, s.task.sleep();
                                case 43:
                                    return e.next = 45, s.task.send("t l 5001", "<title>");
                                case 45:
                                    if (!(p < 3)) {
                                        e.next = 52;
                                        break
                                    }
                                    return c.default.reset(), c.default.set({
                                        code: "npc 1000 h",
                                        find: /完成度已达到上限/
                                    }), e.next = 50, s.task.sleep();
                                case 50:
                                    return e.next = 52, c.default.start(!1, !1);
                                case 52:
                                    return e.next = 54, s.task.sleep();
                                case 54:
                                    return e.next = 56, s.task.send("npc 1001 2", "<menu");
                                case 56:
                                    return e.next = 58, s.task.sleep();
                                case 58:
                                    return e.next = 60, s.task.send("5", "<title>");
                                case 60:
                                    return e.next = 62, u();
                                case 62:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), w.apply(this, arguments)
                }

                function _() {
                    return R.apply(this, arguments)
                }

                function R() {
                    return R = (0, a.default)(regeneratorRuntime.mark((function r() {
                        var a;
                        return regeneratorRuntime.wrap((function(r) {
                            while (1) switch (r.prev = r.next) {
                                case 0:
                                    return r.next = 2, (0, s.getMainDataAsync)();
                                case 2:
                                    if (a = r.sent.map.title.replace(/-副本\d*/, ""), e = t.indexOf(a), -1 !== e) {
                                        r.next = 7;
                                        break
                                    }
                                    return r.next = 7, n();
                                case 7:
                                    return r.next = 9, o(e);
                                case 9:
                                case "end":
                                    return r.stop()
                            }
                        }), r)
                    }))), R.apply(this, arguments)
                }
                return _()
            }));
        t.default = u
    },
    "31ee": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("96cf");
        var a = r(n("3b8d"));
        n("6762"), n("2fdb"), n("7514"), n("4917");
        var s = n("3f7e"),
            c = ["储存物品", "取出物品"],
            u = new s.Task({
                title: "仓库物品存取",
                tags: ["item"],
                form: [{
                    title: "操作",
                    type: "picker",
                    range: c,
                    value: 0
                }, {
                    title: "物品名称",
                    type: "input",
                    placeholder: "多个用|分割",
                    focus: !0,
                    value: ""
                }],
                reset: function() {
                    this.form[0].value = 0, this.form[1].value = ""
                },
                set: function(e) {
                    var t = Object.assign({
                            target: 0,
                            items: []
                        }, e),
                        n = t.target,
                        r = t.items;
                    this.form[0].value = n, this.form[1].value = r.join("|")
                }
            }, (function() {
                var e = this.form[0].value,
                    t = (0, s.toArray)(this.form[1].value);
                if (!t.length) return Promise.reject();

                function n(r) {
                    var a = r.index,
                        c = r.text;
                    return s.task.sleep().then((function() {
                        if (1 === a) throw new Error(c);
                        if (2 === a) {
                            var r = (c.match(/有(\d+)/) || ["", "1"])[1];
                            return s.task.send(r, ["<menu", "<pmg"]).then(n)
                        }
                        var u = (0, s.parseMsg)(c).data.list,
                            i = u.find((function(e) {
                                var n = e.title;
                                return !n.includes("装备中") && t.find((function(e) {
                                    return n.includes(e)
                                }))
                            }));
                        return i ? s.task.send("".concat(i.code, " ").concat(e ? "~4" : "2"), ["<menu", "<pmg", "<input"]).then(n) : u.find((function(e) {
                            var t = e.code;
                            return "r" === t
                        })) ? s.task.send("r", ["<menu", "<pmg"]).then(n) : s.task.send("cnt", ["cnt"])
                    }))
                }

                function r() {
                    return u.apply(this, arguments)
                }

                function u() {
                    return u = (0, a.default)(regeneratorRuntime.mark((function t() {
                        var n, r, a, u;
                        return regeneratorRuntime.wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, (0, s.getMainDataAsync)();
                                case 2:
                                    return n = t.sent.map.npc, r = n.find((function(e) {
                                        var t = e.code;
                                        return "npc 1001" === t
                                    })), a = r.list, u = a.find((function(t) {
                                        var n = t.title;
                                        return n.includes(c[e])
                                    })), t.next = 7, s.task.send("npc 1001 ".concat(u.code), ["<menu", "<pmg"]);
                                case 7:
                                    return t.abrupt("return", t.sent);
                                case 8:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    }))), u.apply(this, arguments)
                }
                return s.task.move("sgz 102", "罗克萨斯家").then((function() {
                    return s.task.sleep()
                })).then(r).then(n)
            }));
        t.default = u
    },
    3252: function(e, t, n) {
        (function(t, r) {
            e.exports = r(n("21bf"))
        })(0, (function(e) {
            return function(t) {
                var n = e,
                    r = n.lib,
                    a = r.Base,
                    s = r.WordArray,
                    c = n.x64 = {};
                c.Word = a.extend({
                    init: function(e, t) {
                        this.high = e, this.low = t
                    }
                }), c.WordArray = a.extend({
                    init: function(e, n) {
                        e = this.words = e || [], this.sigBytes = n != t ? n : 8 * e.length
                    },
                    toX32: function() {
                        for (var e = this.words, t = e.length, n = [], r = 0; r < t; r++) {
                            var a = e[r];
                            n.push(a.high), n.push(a.low)
                        }
                        return s.create(n, this.sigBytes)
                    },
                    clone: function() {
                        for (var e = a.clone.call(this), t = e.words = this.words.slice(0), n = t.length, r = 0; r < n; r++) t[r] = t[r].clone();
                        return e
                    }
                })
            }(), e
        }))
    },
    "32b7": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = new s.Task({
                title: "分解高级材料",
                tags: ["item"]
            }, (function() {
                function e() {
                    return t.apply(this, arguments)
                }

                function t() {
                    return t = (0, a.default)(regeneratorRuntime.mark((function t() {
                        var n, r, a;
                        return regeneratorRuntime.wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, s.task.sleep();
                                case 2:
                                    return t.next = 4, s.task.send("npc 1000 3", ["你没有可以分解的材料", "<menu"]);
                                case 4:
                                    if (n = t.sent, r = n.index, a = n.text, 0 !== r) {
                                        t.next = 9;
                                        break
                                    }
                                    throw new Error(a);
                                case 9:
                                    return t.next = 11, s.task.sleep();
                                case 11:
                                    return t.next = 13, s.task.send("1", "[ok]");
                                case 13:
                                    return t.next = 15, s.task.sleep();
                                case 15:
                                    return t.next = 17, s.task.send("ok", "分解成功");
                                case 17:
                                    return t.next = 19, e();
                                case 19:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    }))), t.apply(this, arguments)
                }
                return s.task.move("sgz 103", "光芒市场").then(e)
            }));
        t.default = c
    },
    "32e9": function(e, t, n) {
        var r = n("86cc"),
            a = n("4630");
        e.exports = n("9e1e") ? function(e, t, n) {
            return r.f(e, t, a(1, n))
        } : function(e, t, n) {
            return e[t] = n, e
        }
    },
    "32fc": function(e, t, n) {
        var r = n("e53d").document;
        e.exports = r && r.documentElement
    },
    "335c": function(e, t, n) {
        var r = n("6b4c");
        e.exports = Object("z").propertyIsEnumerable(0) ? Object : function(e) {
            return "String" == r(e) ? e.split("") : Object(e)
        }
    },
    3452: function(e, t, n) {
        (function(t, r, a) {
            e.exports = r(n("21bf"), n("3252"), n("17e1"), n("a8ce"), n("1132"), n("c1bc"), n("72fe"), n("df2f"), n("94f8"), n("191b"), n("d6e6"), n("b86b"), n("e61b"), n("10b7"), n("5980"), n("7bbc"), n("2b79"), n("38ba"), n("00bb"), n("f4ea"), n("aaef"), n("4ba9"), n("81bf"), n("a817"), n("a11b"), n("8cef"), n("2a66"), n("b86c"), n("6d08"), n("c198"), n("a40e"), n("c3b6"), n("1382"), n("3d5a"))
        })(0, (function(e) {
            return e
        }))
    },
    "355d": function(e, t) {
        t.f = {}.propertyIsEnumerable
    },
    "35e8": function(e, t, n) {
        var r = n("d9f6"),
            a = n("aebd");
        e.exports = n("8e60") ? function(e, t, n) {
            return r.f(e, t, a(1, n))
        } : function(e, t, n) {
            return e[t] = n, e
        }
    },
    "36b3": function(e, t, n) {
        "use strict";
        n.r(t);
        n("828e")
    },
    "36c3": function(e, t, n) {
        var r = n("335c"),
            a = n("25eb");
        e.exports = function(e) {
            return r(a(e))
        }
    },
    3702: function(e, t, n) {
        var r = n("481b"),
            a = n("5168")("iterator"),
            s = Array.prototype;
        e.exports = function(e) {
            return void 0 !== e && (r.Array === e || s[a] === e)
        }
    },
    "37a5": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        n("386d"), Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0;
        var a = r(n("768b"));
        n("f559"), n("ac6a"), n("3b2b"), n("6762"), n("2fdb"), n("4917"), n("7514"), n("c5f6"), n("96cf");
        var s = r(n("3b8d"));
        n("a481");
        var c = n("3f7e"),
            u = n("4b28"),
            i = r(n("275e")),
            o = n("ec00"),
            f = r(n("31ee")),
            l = r(n("542d"));

        function p(e) {
            return (0, c.clearText)(e).replace(/^(冒险|教学|活动|其他|探索|任务|跑环)/, "").replace(/之[一二三四]$/, "").replace(/[(（][一二三四][）)]$/, "").replace(/\(\d\/\d\)$/, "")
        }

        function d(e, t) {
            var n = {
                "完美的花篮": "完美的花环",
                "无礼的士兵": "无礼的卫兵"
            };
            return e = p(e), t = p(t), e === t || n[e] === t || e === n[t]
        }
        var x = {
                "搞怪节": {
                    "幽幽魂": "幽幽魂精灵"
                },
                "炼金协助": {
                    "幽幽鬼": "幽幽魂"
                },
                "夜精灵的疑惑": {
                    "蓝响狗": "太阳养分"
                },
                "研究": {
                    "看护兽": "鳞片",
                    "淤泥兽": "兽牙",
                    "刺蜂": "毒刺",
                    "兔叉叉": "绒毛"
                },
                "小猎人的礼物": {
                    "雪狼芬里": "轻巧的毛皮",
                    "水精尼瑞斯": "坚硬的甲壳",
                    "冰胡子": "坚韧的树干"
                },
                "闹鬼的小屋": {
                    "寻找项链": "破旧的项链"
                },
                "路痴冒险家": {
                    "无鳍人鱼": "旅行箱"
                }
            },
            h = {
                "闪光镇": {
                    world: "100"
                },
                "闪光平原": {
                    world: "101",
                    "冲级送大礼": ["sgpy 101"],
                    "快速购物": ["sgpy 101", "快速购物教学"],
                    "寂静之枪": ["msgd 103"]
                },
                "精灵迷宫": {
                    world: "102"
                },
                "妙树之源": {
                    world: "103",
                    "任务库好运卡": ["mszy 103"]
                },
                "绿宝石城": {
                    world: "104",
                    "锻皇传说": ["lbsc 218"],
                    "宠技达人": ["msgd 102"],
                    "彩绘全接触": ["sgpy 101", "复原配方"],
                    "冲级送大礼": ["lbsc 213"]
                },
                "龙牙山脉": {
                    world: "105"
                },
                "蓝宝石城": {
                    world: "106",
                    "冲级送大礼": ["blue 118"]
                },
                "极光冰原": {
                    world: "107"
                },
                "彷徨雨林": {
                    world: "108"
                },
                "红宝石城": {
                    world: "109"
                },
                "火焰之地": {
                    world: "110"
                },
                "云之国": {
                    world: "113"
                },
                "遗忘之岛": {
                    world: "114"
                },
                "英雄大陆": {
                    world: "115"
                }
            },
            k = new c.Task({
                title: "支线任务",
                tags: ["other"],
                form: [{
                    title: "冒险任务",
                    type: "checkbox",
                    value: !0
                }, {
                    title: "探索宝箱",
                    type: "checkbox",
                    value: !0
                }, {
                    title: "其他任务",
                    type: "checkbox",
                    value: !0
                }]
            }, (function() {
                var e = this.form[0].value,
                    t = this.form[1].value,
                    n = this.form[2].value;

                function r(e, t) {
                    return k.apply(this, arguments)
                }

                function k() {
                    return k = (0, s.default)(regeneratorRuntime.mark((function e(t, n) {
                        var a, s, o, f, l, p, h, k, m, b, g, y, w, _, R, M, j, E, S, O, P, A, T, B, N, I, z, C, D, L, H, F, $, W, q, U, V, G, K, X, Y, J;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return O = function(e) {
                                        var t = m.match(new RegExp("".concat(e, "\\s*\\(\\s*(?:现有)?\\s*(\\d+)\\s*/\\s*(?:需要)?\\s*(\\d+)\\s*\\)"))) || m.match(new RegExp("".concat(e, "\\s*\\(\\s*现有\\s*(\\d+)\\s*/\\s*需要\\s*(\\d+)\\s*\\)")));
                                        return t && Number(t[1]) < Number(t[2])
                                    }, n = Number(n) || 0, e.next = 4, c.task.sleep();
                                case 4:
                                    return e.next = 6, c.task.send("9 1", ["查看任务", "<r>cnt"]);
                                case 6:
                                    if (a = e.sent, s = a.index, o = a.text, 1 !== s) {
                                        e.next = 13;
                                        break
                                    }
                                    return e.next = 12, r(t, n);
                                case 12:
                                    return e.abrupt("return");
                                case 13:
                                    if (f = (0, c.parseMsg)(o).data.list, l = f.find((function(e) {
                                            var n = e.title;
                                            return d(n, t)
                                        })), l) {
                                        e.next = 44;
                                        break
                                    }
                                    return e.next = 18, c.task.sleep();
                                case 18:
                                    return e.next = 20, c.task.send("?").sleep(2e3);
                                case 20:
                                    return e.next = 22, c.task.sleep();
                                case 22:
                                    if (p = [
                                            ["赤炎蝎的侵袭", "phyl 111", "祭祀之地"],
                                            ["朱朱的巫术实验", "phyl 111", "祭祀之地"],
                                            ["春季大扫除", "phyl 107", "巫师之家"],
                                            ["冰雪怪兽", "blue 117", "蓝宝石教堂"],
                                            ["爱美不是罪", "blue 109", "秋叶街区"],
                                            ["奇迹之石", "jlmg 203", "民宅小巷"],
                                            ["夙愿", "mszy 108", "悲伤群林"],
                                            ["月光美酒", "sgpy 107", "办公区"],
                                            ["梦境世界", "sgpy 107", "办公区"],
                                            ["研究", "mszy 109", "精灵木屋"]
                                        ], h = p.find((function(e) {
                                            return d(t, e[0])
                                        })), !(n < 4 && h)) {
                                        e.next = 31;
                                        break
                                    }
                                    return e.next = 27, c.task.move(h[1], h[2]);
                                case 27:
                                    return e.next = 29, v(t, n + 1);
                                case 29:
                                    e.next = 43;
                                    break;
                                case 31:
                                    if (!d(t, "迷路的精灵")) {
                                        e.next = 38;
                                        break
                                    }
                                    return e.next = 34, c.task.move("lbsc 210", "白羊岭");
                                case 34:
                                    return e.next = 36, v("被破坏的家园", n);
                                case 36:
                                    e.next = 43;
                                    break;
                                case 38:
                                    if (!d(t, "神智失常的孩子")) {
                                        e.next = 43;
                                        break
                                    }
                                    return e.next = 41, c.task.move("lbsc 204", "绿宝石教堂");
                                case 41:
                                    return e.next = 43, v("上瘾的孩子", n);
                                case 43:
                                    return e.abrupt("return");
                                case 44:
                                    return e.next = 46, (0, u.getTaskMap)(l, x[(0, c.clearText)(t).replace(/^冒险/, "")]);
                                case 46:
                                    return k = e.sent, m = k.text, b = k.target, g = k.need, m = (0, c.clearText)(m), e.next = 53, c.task.sleep();
                                case 53:
                                    return e.next = 55, c.task.send(b.code, ["<mp>", "不用飞啦"]);
                                case 55:
                                    if (y = e.sent, w = y.index, _ = y.text, 0 !== w) {
                                        e.next = 64;
                                        break
                                    }
                                    return R = (0, c.parseMsg)(_).data, M = R.code, j = R.target, e.next = 62, c.task.sleep();
                                case 62:
                                    return e.next = 64, c.task.move("".concat(M, " ").concat(j.code), j.title);
                                case 64:
                                    return e.next = 66, c.task.sleep();
                                case 66:
                                    if (!d(t, "阻止进攻")) {
                                        e.next = 80;
                                        break
                                    }
                                    if (E = m.match(/已击败50个/g), E) {
                                        e.next = 74;
                                        break
                                    }
                                    return g = {
                                        num: 50,
                                        title: "离子团成员",
                                        killCode: ["npc 1000 h", "kill"]
                                    }, e.next = 72, c.task.move("yxdl 105", "寂静之湖");
                                case 72:
                                    e.next = 78;
                                    break;
                                case 74:
                                    if (!(E.length < 3)) {
                                        e.next = 78;
                                        break
                                    }
                                    return g = {
                                        num: 50,
                                        title: "离子团成员",
                                        killCode: ["npc 1001 h", "kill"]
                                    }, e.next = 78, c.task.move("yxdl 122", "离子团本部入口");
                                case 78:
                                    e.next = 126;
                                    break;
                                case 80:
                                    if (!d(t, "发动奇袭")) {
                                        e.next = 87;
                                        break
                                    }
                                    if (!/已击败0个/.test(m)) {
                                        e.next = 85;
                                        break
                                    }
                                    return g = {
                                        num: 4,
                                        title: "四天王"
                                    }, e.next = 85, c.task.move("yxdl 123", "离子团本部中层");
                                case 85:
                                    e.next = 126;
                                    break;
                                case 87:
                                    if (!d(t, "假扮的士兵")) {
                                        e.next = 94;
                                        break
                                    }
                                    if (!/已击败0个/.test(m)) {
                                        e.next = 92;
                                        break
                                    }
                                    return g = {
                                        num: 3,
                                        title: "假扮的士兵"
                                    }, e.next = 92, c.task.move("lbsc 225", "天鹅沼泽");
                                case 92:
                                    e.next = 126;
                                    break;
                                case 94:
                                    if (!d(t, "贪吃的鸟兔")) {
                                        e.next = 107;
                                        break
                                    }
                                    if (/已击败10个/.test(m)) {
                                        e.next = 101;
                                        break
                                    }
                                    return g = {
                                        num: 10,
                                        title: "九色鹃"
                                    }, e.next = 99, c.task.move("lbsc 211", "灰兔田野");
                                case 99:
                                    e.next = 105;
                                    break;
                                case 101:
                                    if (!/已击败0个/.test(m)) {
                                        e.next = 105;
                                        break
                                    }
                                    return g = {
                                        num: 1,
                                        title: "果园兔"
                                    }, e.next = 105, c.task.move("lbsc 211", "灰兔田野");
                                case 105:
                                    e.next = 126;
                                    break;
                                case 107:
                                    if (!d(t, "防弹布料")) {
                                        e.next = 115;
                                        break
                                    }
                                    if (S = m.match(/12\s*\/\s*12/g) || [], !(S.length < 2)) {
                                        e.next = 113;
                                        break
                                    }
                                    return g = {
                                        num: 12,
                                        title: "雪蚕丝&长毛猪鬃"
                                    }, e.next = 113, c.task.move("lbsc 228", "龙猫山");
                                case 113:
                                    e.next = 126;
                                    break;
                                case 115:
                                    if (!d(t, "闹鬼的小屋")) {
                                        e.next = 121;
                                        break
                                    }
                                    if (g || !m.includes("屋继续寻找小丽莎的项")) {
                                        e.next = 119;
                                        break
                                    }
                                    return e.next = 119, c.task.move("hyzd 103", "迷尘荒原");
                                case 119:
                                    e.next = 126;
                                    break;
                                case 121:
                                    if (!d(t, "路痴冒险家")) {
                                        e.next = 126;
                                        break
                                    }
                                    if (!/20个/.test(m) || /败20/.test(m)) {
                                        e.next = 126;
                                        break
                                    }
                                    return g = {
                                        num: 20,
                                        title: "无鳍人鱼"
                                    }, e.next = 126, c.task.move("blue 123", "椰树滩涂");
                                case 126:
                                    if (P = ["信封", "邮票", "香草汉堡", "皮老鼠", "防晒油", "无尘煤", "动力羽毛", "润滑油", "透明薄羽", "蓝宝石地图"].find(O), A = ["超级飞行之羽"].find(O), T = ["【火枪】一品.精灵之枪 ★配方"].find(O), B = ["一品.狂刃镶嵌石"].find(O), N = ["厚甲F.宠物技能卡"].find(O), I = ["颜料.红", "颜料.黄", "颜料.蓝"].find(O), z = ["记忆之海螺"].find(O), C = P || A || T || B || N || I || z, !C) {
                                        e.next = 188;
                                        break
                                    }
                                    return e.next = 137, c.task.sleep();
                                case 137:
                                    e.t0 = C, e.next = e.t0 === P ? 140 : e.t0 === A ? 144 : e.t0 === T || e.t0 === B || e.t0 === I ? 148 : e.t0 === N ? 160 : e.t0 === z ? 164 : 168;
                                    break;
                                case 140:
                                    return e.next = 142, c.task.move("blue 119", "居民区");
                                case 142:
                                    return D = "npc 1002 j", e.abrupt("break", 168);
                                case 144:
                                    return e.next = 146, c.task.move("phyl 112", "神迹祭坛");
                                case 146:
                                    return D = "npc 1001 j", e.abrupt("break", 168);
                                case 148:
                                    return e.next = 150, c.task.move("sgz 103", "光芒市场");
                                case 150:
                                    if (C !== T) {
                                        e.next = 158;
                                        break
                                    }
                                    return e.next = 153, c.task.sleep();
                                case 153:
                                    return e.next = 155, c.task.send("npc 1000 2", "<menu");
                                case 155:
                                    D = "t7 ", e.next = 159;
                                    break;
                                case 158:
                                    C === B ? D = "npc 1001 7" : C === I && (D = "npc 1002 1");
                                case 159:
                                    return e.abrupt("break", 168);
                                case 160:
                                    return e.next = 162, c.task.move("sgz 102", "荫凉之地");
                                case 162:
                                    return D = "npc 1000 0", e.abrupt("break", 168);
                                case 164:
                                    return e.next = 166, c.task.move("msgd 101", "迷失之地");
                                case 166:
                                    return D = "npc 1000 j", e.abrupt("break", 168);
                                case 168:
                                    return e.next = 170, c.task.sleep();
                                case 170:
                                    return e.next = 172, (0, c.findItem)(C, D, 1);
                                case 172:
                                    return L = e.sent, H = L.code, e.next = 176, c.task.sleep();
                                case 176:
                                    return e.next = 178, c.task.send("".concat(H, " 2"), "买下了");
                                case 178:
                                    return e.next = 180, c.task.sleep();
                                case 180:
                                    if (!(P || A || z)) {
                                        e.next = 185;
                                        break
                                    }
                                    return e.next = 183, c.task.send("?").sleep(2e3);
                                case 183:
                                    e.next = 187;
                                    break;
                                case 185:
                                    return e.next = 187, c.task.cancel();
                                case 187:
                                    g = null;
                                case 188:
                                    if (!g) {
                                        e.next = 218;
                                        break
                                    }
                                    if (W = g, q = W.num, U = W.title, V = ["xxx"], G = ["红皮日记", "蓝皮日记", "寅虎"], G.includes(U) || !V.includes(U) && 1 !== q) {
                                        e.next = 211;
                                        break
                                    }
                                    return e.next = 195, c.task.sleep();
                                case 195:
                                    return e.next = 197, c.task.send("5", "<menu");
                                case 197:
                                    if (K = e.sent, X = K.text, Y = (0, c.parseMsg)(X).data.list, Y.forEach((function(e) {
                                            var t = e.title,
                                                n = e.code,
                                                r = e.list,
                                                a = void 0 === r ? [] : r,
                                                s = a.find((function(e) {
                                                    var t = e.code,
                                                        n = e.title;
                                                    return "h" === t || n.includes("战斗挑战")
                                                }));
                                            (0, c.clearText)(t) === U && s && (F = "".concat(n, " ").concat(s.code))
                                        })), F) {
                                        e.next = 210;
                                        break
                                    }
                                    return e.next = 204, c.task.sleep();
                                case 204:
                                    return e.next = 206, c.task.send("cl", "cnt");
                                case 206:
                                    return e.next = 208, (0, c.getMainDataAsync)();
                                case 208:
                                    J = e.sent.map.npc, J.forEach((function(e) {
                                        e.title;
                                        var t = e.code,
                                            n = e.list,
                                            r = void 0 === n ? [] : n,
                                            a = r.find((function(e) {
                                                var t = e.code,
                                                    n = e.title;
                                                return "h" === t || n.includes("战斗挑战")
                                            }));
                                        a && (F = "".concat(t, " ").concat(a.code))
                                    }));
                                case 210:
                                    $ = 1;
                                case 211:
                                    return "四天王" === U ? ($ = 4, F = ["npc 1000 h", "npc 1001 h", "npc 1002 h", "npc 1003 h"]) : "假扮的士兵" === U && ($ = 3, F = ["npc 1000 h", "npc 1001 h", "npc 1002 h"]), i.default.reset(), i.default.set({
                                        code: F || g.killCode || "kill",
                                        find: new RegExp("需要击败.+?：".concat(q, " \\/ ").concat(q, "|需要: ").concat(q, " \\/ ").concat(q)),
                                        killMax: $
                                    }), e.next = 216, c.task.sleep();
                                case 216:
                                    return e.next = 218, i.default.start(!1, !1);
                                case 218:
                                    return e.next = 220, v(t, n);
                                case 220:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), k.apply(this, arguments)
                }

                function v(e, t, n) {
                    return m.apply(this, arguments)
                }

                function m() {
                    return m = (0, s.default)(regeneratorRuntime.mark((function e(t, n, a) {
                        var s, u, i, o, f, l, p, x, h, k, v, m;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    if (!a) {
                                        e.next = 5;
                                        break
                                    }
                                    return e.next = 3, c.task.sleep();
                                case 3:
                                    return e.next = 5, c.task.move(a, "");
                                case 5:
                                    return e.next = 7, (0, c.getMainDataAsync)();
                                case 7:
                                    s = e.sent.map.npc, u = 0;
                                case 9:
                                    if (!(u < s.length)) {
                                        e.next = 52;
                                        break
                                    }
                                    i = s[u], o = i.list, f = 0;
                                case 13:
                                    if (!(f < o.length)) {
                                        e.next = 49;
                                        break
                                    }
                                    if (l = o[f], p = l.title, x = l.code, !d(p, t)) {
                                        e.next = 46;
                                        break
                                    }
                                    return e.next = 19, c.task.sleep();
                                case 19:
                                    return e.next = 21, c.task.send("".concat(i.code, " ").concat(x), ["[~1]", "[cl]", "需要", "<r>cnt"]);
                                case 21:
                                    if (h = e.sent, k = h.index, 0 !== k) {
                                        e.next = 37;
                                        break
                                    }
                                    return e.next = 26, c.task.sleep();
                                case 26:
                                    return e.next = 28, c.task.send("1", ["[cl]", "cnt"]);
                                case 28:
                                    if (v = e.sent, m = v.index, 0 !== m) {
                                        e.next = 35;
                                        break
                                    }
                                    return e.next = 33, c.task.sleep();
                                case 33:
                                    return e.next = 35, c.task.send("cl", ["cnt", "Unknown"]);
                                case 35:
                                    e.next = 46;
                                    break;
                                case 37:
                                    if (1 !== k) {
                                        e.next = 44;
                                        break
                                    }
                                    return e.next = 40, c.task.sleep();
                                case 40:
                                    return e.next = 42, c.task.send("cl", "cnt");
                                case 42:
                                    e.next = 46;
                                    break;
                                case 44:
                                    if (3 !== k || !d(t, "锻造的手艺")) {
                                        e.next = 46;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 46:
                                    f++, e.next = 13;
                                    break;
                                case 49:
                                    u++, e.next = 9;
                                    break;
                                case 52:
                                    return e.next = 54, r(t, n);
                                case 54:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), m.apply(this, arguments)
                }

                function b(e) {
                    return g.apply(this, arguments)
                }

                function g() {
                    return g = (0, s.default)(regeneratorRuntime.mark((function s(u) {
                        var i, x, k, m, b, g, y;
                        return regeneratorRuntime.wrap((function(s) {
                            while (1) switch (s.prev = s.next) {
                                case 0:
                                    return s.next = 2, c.task.sleep();
                                case 2:
                                    return s.next = 4, c.task.send("cj", "<menu");
                                case 4:
                                    i = s.sent, x = i.text, k = (0, c.parseMsg)(x).data, k.code, m = k.list, b = !0, g = regeneratorRuntime.mark((function s(i) {
                                        var x, k, g, y, w, _, R, M, j, E, S, O, P, A, T, B, N, I, z, C, D, L;
                                        return regeneratorRuntime.wrap((function(s) {
                                            while (1) switch (s.prev = s.next) {
                                                case 0:
                                                    if (b) {
                                                        s.next = 6;
                                                        break
                                                    }
                                                    return s.next = 3, c.task.sleep();
                                                case 3:
                                                    return s.next = 5, c.task.send("cj", "<menu");
                                                case 5:
                                                    b = !0;
                                                case 6:
                                                    if (x = m[i], k = (0, c.clearText)(x.title), g = u.find((function(e) {
                                                            return k.includes(e)
                                                        })), !g || k.includes("100%")) {
                                                        s.next = 96;
                                                        break
                                                    }
                                                    return b = !1, s.next = 13, c.task.sleep();
                                                case 13:
                                                    return s.next = 15, c.task.send(x.code, "<table");
                                                case 15:
                                                    y = s.sent, w = y.text, _ = !0, R = (0, c.parseMsg)(w).data, R.code, M = R.list, j = 0;
                                                case 20:
                                                    if (!(j < M.length)) {
                                                        s.next = 91;
                                                        break
                                                    }
                                                    if (_) {
                                                        s.next = 31;
                                                        break
                                                    }
                                                    return s.next = 24, c.task.sleep();
                                                case 24:
                                                    return s.next = 26, c.task.send("cj", "<menu");
                                                case 26:
                                                    return s.next = 28, c.task.sleep();
                                                case 28:
                                                    return s.next = 30, c.task.send(x.code, "<table");
                                                case 30:
                                                    _ = !0;
                                                case 31:
                                                    if (E = M[j], S = (0, c.clearText)(E.title), S.includes("100%")) {
                                                        s.next = 88;
                                                        break
                                                    }
                                                    return s.next = 36, c.task.sleep();
                                                case 36:
                                                    if (!S.startsWith("冒险")) {
                                                        s.next = 53;
                                                        break
                                                    }
                                                    if (!e) {
                                                        s.next = 51;
                                                        break
                                                    }
                                                    return _ = !1, s.next = 41, c.task.send(E.code, ["[map move", "任务进行中"]);
                                                case 41:
                                                    if (O = s.sent, P = O.index, A = O.text, T = (0, c.parseMsg)(A).data.title, 0 !== P) {
                                                        s.next = 49;
                                                        break
                                                    }
                                                    return B = A.match(/\[map move (.+?)\]/)[1], s.next = 49, v(T, 0, B);
                                                case 49:
                                                    return s.next = 51, r(T);
                                                case 51:
                                                    s.next = 88;
                                                    break;
                                                case 53:
                                                    if (!S.startsWith("探索")) {
                                                        s.next = 62;
                                                        break
                                                    }
                                                    if (!t) {
                                                        s.next = 60;
                                                        break
                                                    }
                                                    return _ = !1, s.next = 58, c.task.cancel();
                                                case 58:
                                                    return s.next = 60, (0, o.search)("map move world ".concat(h[g].world));
                                                case 60:
                                                    s.next = 88;
                                                    break;
                                                case 62:
                                                    if (!n) {
                                                        s.next = 88;
                                                        break
                                                    }
                                                    return _ = !1, s.next = 66, c.task.send(E.code, ["[map move", "任务进行中", "尚未开始任务"]);
                                                case 66:
                                                    if (N = s.sent, N.index, I = N.text, z = (0, c.parseMsg)(I).data.title, !d(z, "锻造的手艺")) {
                                                        s.next = 85;
                                                        break
                                                    }
                                                    return f.default.reset(), f.default.set({
                                                        target: 1,
                                                        items: ["锻皇的笔记"]
                                                    }), s.next = 75, f.default.start(!1, !1);
                                                case 75:
                                                    return l.default.reset(), l.default.set({
                                                        item: "锻皇的笔记"
                                                    }), s.next = 79, c.task.sleep();
                                                case 79:
                                                    return s.next = 81, l.default.start(!1);
                                                case 81:
                                                    return s.next = 83, r(z);
                                                case 83:
                                                    s.next = 88;
                                                    break;
                                                case 85:
                                                    return C = (0, a.default)(h[g][p(z)], 2), D = C[0], L = C[1], s.next = 88, v(L || z, 0, D);
                                                case 88:
                                                    j++, s.next = 20;
                                                    break;
                                                case 91:
                                                    if (!_) {
                                                        s.next = 96;
                                                        break
                                                    }
                                                    return s.next = 94, c.task.sleep();
                                                case 94:
                                                    return s.next = 96, c.task.cancel();
                                                case 96:
                                                case "end":
                                                    return s.stop()
                                            }
                                        }), s)
                                    })), y = 0;
                                case 10:
                                    if (!(y < m.length)) {
                                        s.next = 15;
                                        break
                                    }
                                    return s.delegateYield(g(y), "t0", 12);
                                case 12:
                                    y++, s.next = 10;
                                    break;
                                case 15:
                                    if (!b) {
                                        s.next = 20;
                                        break
                                    }
                                    return s.next = 18, c.task.sleep();
                                case 18:
                                    return s.next = 20, c.task.send("?").sleep(2e3);
                                case 20:
                                case "end":
                                    return s.stop()
                            }
                        }), s)
                    }))), g.apply(this, arguments)
                }

                function y() {
                    return w.apply(this, arguments)
                }

                function w() {
                    return w = (0, s.default)(regeneratorRuntime.mark((function e() {
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, b(["闪光镇", "闪光平原", "精灵迷宫", "妙树之源", "绿宝石城", "龙牙山脉", "蓝宝石城", "极光冰原", "彷徨雨林", "红宝石城", "火焰之地"]);
                                case 2:
                                    return e.next = 4, b(["云之国", "遗忘之岛", "英雄大陆"]);
                                case 4:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), w.apply(this, arguments)
                }
                return y()
            }));
        t.default = k
    },
    "37f4": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = new s.Task({
                title: "快速补血",
                tags: ["other"]
            }, (0, a.default)(regeneratorRuntime.mark((function e() {
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                            return e.next = 2, (0, s.ksbx)();
                        case 2:
                            return e.next = 4, s.task.sleep();
                        case 4:
                            return e.next = 6, (0, s.checkCode)();
                        case 6:
                        case "end":
                            return e.stop()
                    }
                }), e)
            }))));
        t.default = c
    },
    3846: function(e, t, n) {
        n("9e1e") && "g" != /./g.flags && n("86cc").f(RegExp.prototype, "flags", {
            configurable: !0,
            get: n("0bfb")
        })
    },
    "386d": function(e, t, n) {
        "use strict";
        var r = n("cb7c"),
            a = n("83a1"),
            s = n("5f1b");
        n("214f")("search", 1, (function(e, t, n, c) {
            return [function(n) {
                var r = e(this),
                    a = void 0 == n ? void 0 : n[t];
                return void 0 !== a ? a.call(n, r) : new RegExp(n)[t](String(r))
            }, function(e) {
                var t = c(n, e, this);
                if (t.done) return t.value;
                var u = r(e),
                    i = String(this),
                    o = u.lastIndex;
                a(o, 0) || (u.lastIndex = 0);
                var f = s(u, i);
                return a(u.lastIndex, o) || (u.lastIndex = o), null === f ? -1 : f.index
            }]
        }))
    },
    "38ba": function(e, t, n) {
        (function(t, r, a) {
            e.exports = r(n("21bf"), n("2b79"))
        })(0, (function(e) {
            e.lib.Cipher || function(t) {
                var n = e,
                    r = n.lib,
                    a = r.Base,
                    s = r.WordArray,
                    c = r.BufferedBlockAlgorithm,
                    u = n.enc,
                    i = (u.Utf8, u.Base64),
                    o = n.algo,
                    f = o.EvpKDF,
                    l = r.Cipher = c.extend({
                        cfg: a.extend(),
                        createEncryptor: function(e, t) {
                            return this.create(this._ENC_XFORM_MODE, e, t)
                        },
                        createDecryptor: function(e, t) {
                            return this.create(this._DEC_XFORM_MODE, e, t)
                        },
                        init: function(e, t, n) {
                            this.cfg = this.cfg.extend(n), this._xformMode = e, this._key = t, this.reset()
                        },
                        reset: function() {
                            c.reset.call(this), this._doReset()
                        },
                        process: function(e) {
                            return this._append(e), this._process()
                        },
                        finalize: function(e) {
                            e && this._append(e);
                            var t = this._doFinalize();
                            return t
                        },
                        keySize: 4,
                        ivSize: 4,
                        _ENC_XFORM_MODE: 1,
                        _DEC_XFORM_MODE: 2,
                        _createHelper: function() {
                            function e(e) {
                                return "string" == typeof e ? _ : g
                            }
                            return function(t) {
                                return {
                                    encrypt: function(n, r, a) {
                                        return e(r).encrypt(t, n, r, a)
                                    },
                                    decrypt: function(n, r, a) {
                                        return e(r).decrypt(t, n, r, a)
                                    }
                                }
                            }
                        }()
                    }),
                    p = (r.StreamCipher = l.extend({
                        _doFinalize: function() {
                            var e = this._process(!0);
                            return e
                        },
                        blockSize: 1
                    }), n.mode = {}),
                    d = r.BlockCipherMode = a.extend({
                        createEncryptor: function(e, t) {
                            return this.Encryptor.create(e, t)
                        },
                        createDecryptor: function(e, t) {
                            return this.Decryptor.create(e, t)
                        },
                        init: function(e, t) {
                            this._cipher = e, this._iv = t
                        }
                    }),
                    x = p.CBC = function() {
                        var e = d.extend();

                        function n(e, n, r) {
                            var a, s = this._iv;
                            s ? (a = s, this._iv = t) : a = this._prevBlock;
                            for (var c = 0; c < r; c++) e[n + c] ^= a[c]
                        }
                        return e.Encryptor = e.extend({
                            processBlock: function(e, t) {
                                var r = this._cipher,
                                    a = r.blockSize;
                                n.call(this, e, t, a), r.encryptBlock(e, t), this._prevBlock = e.slice(t, t + a)
                            }
                        }), e.Decryptor = e.extend({
                            processBlock: function(e, t) {
                                var r = this._cipher,
                                    a = r.blockSize,
                                    s = e.slice(t, t + a);
                                r.decryptBlock(e, t), n.call(this, e, t, a), this._prevBlock = s
                            }
                        }), e
                    }(),
                    h = n.pad = {},
                    k = h.Pkcs7 = {
                        pad: function(e, t) {
                            for (var n = 4 * t, r = n - e.sigBytes % n, a = r << 24 | r << 16 | r << 8 | r, c = [], u = 0; u < r; u += 4) c.push(a);
                            var i = s.create(c, r);
                            e.concat(i)
                        },
                        unpad: function(e) {
                            var t = 255 & e.words[e.sigBytes - 1 >>> 2];
                            e.sigBytes -= t
                        }
                    },
                    v = (r.BlockCipher = l.extend({
                        cfg: l.cfg.extend({
                            mode: x,
                            padding: k
                        }),
                        reset: function() {
                            var e;
                            l.reset.call(this);
                            var t = this.cfg,
                                n = t.iv,
                                r = t.mode;
                            this._xformMode == this._ENC_XFORM_MODE ? e = r.createEncryptor : (e = r.createDecryptor, this._minBufferSize = 1), this._mode && this._mode.__creator == e ? this._mode.init(this, n && n.words) : (this._mode = e.call(r, this, n && n.words), this._mode.__creator = e)
                        },
                        _doProcessBlock: function(e, t) {
                            this._mode.processBlock(e, t)
                        },
                        _doFinalize: function() {
                            var e, t = this.cfg.padding;
                            return this._xformMode == this._ENC_XFORM_MODE ? (t.pad(this._data, this.blockSize), e = this._process(!0)) : (e = this._process(!0), t.unpad(e)), e
                        },
                        blockSize: 4
                    }), r.CipherParams = a.extend({
                        init: function(e) {
                            this.mixIn(e)
                        },
                        toString: function(e) {
                            return (e || this.formatter).stringify(this)
                        }
                    })),
                    m = n.format = {},
                    b = m.OpenSSL = {
                        stringify: function(e) {
                            var t, n = e.ciphertext,
                                r = e.salt;
                            return t = r ? s.create([1398893684, 1701076831]).concat(r).concat(n) : n, t.toString(i)
                        },
                        parse: function(e) {
                            var t, n = i.parse(e),
                                r = n.words;
                            return 1398893684 == r[0] && 1701076831 == r[1] && (t = s.create(r.slice(2, 4)), r.splice(0, 4), n.sigBytes -= 16), v.create({
                                ciphertext: n,
                                salt: t
                            })
                        }
                    },
                    g = r.SerializableCipher = a.extend({
                        cfg: a.extend({
                            format: b
                        }),
                        encrypt: function(e, t, n, r) {
                            r = this.cfg.extend(r);
                            var a = e.createEncryptor(n, r),
                                s = a.finalize(t),
                                c = a.cfg;
                            return v.create({
                                ciphertext: s,
                                key: n,
                                iv: c.iv,
                                algorithm: e,
                                mode: c.mode,
                                padding: c.padding,
                                blockSize: e.blockSize,
                                formatter: r.format
                            })
                        },
                        decrypt: function(e, t, n, r) {
                            r = this.cfg.extend(r), t = this._parse(t, r.format);
                            var a = e.createDecryptor(n, r).finalize(t.ciphertext);
                            return a
                        },
                        _parse: function(e, t) {
                            return "string" == typeof e ? t.parse(e, this) : e
                        }
                    }),
                    y = n.kdf = {},
                    w = y.OpenSSL = {
                        execute: function(e, t, n, r) {
                            r || (r = s.random(8));
                            var a = f.create({
                                    keySize: t + n
                                }).compute(e, r),
                                c = s.create(a.words.slice(t), 4 * n);
                            return a.sigBytes = 4 * t, v.create({
                                key: a,
                                iv: c,
                                salt: r
                            })
                        }
                    },
                    _ = r.PasswordBasedCipher = g.extend({
                        cfg: g.cfg.extend({
                            kdf: w
                        }),
                        encrypt: function(e, t, n, r) {
                            r = this.cfg.extend(r);
                            var a = r.kdf.execute(n, e.keySize, e.ivSize);
                            r.iv = a.iv;
                            var s = g.encrypt.call(this, e, t, a.key, r);
                            return s.mixIn(a), s
                        },
                        decrypt: function(e, t, n, r) {
                            r = this.cfg.extend(r), t = this._parse(t, r.format);
                            var a = r.kdf.execute(n, e.keySize, e.ivSize, t.salt);
                            r.iv = a.iv;
                            var s = g.decrypt.call(this, e, t, a.key, r);
                            return s
                        }
                    })
            }()
        }))
    },
    "38fd": function(e, t, n) {
        var r = n("69a8"),
            a = n("4bf8"),
            s = n("613b")("IE_PROTO"),
            c = Object.prototype;
        e.exports = Object.getPrototypeOf || function(e) {
            return e = a(e), r(e, s) ? e[s] : "function" == typeof e.constructor && e instanceof e.constructor ? e.constructor.prototype : e instanceof Object ? c : null
        }
    },
    3918: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("6762"), n("2fdb"), n("c5f6"), n("7514"), n("4917");
        var a = n("3f7e"),
            s = r(n("b05c")),
            c = new a.Task({
                title: "物品使用(旧)",
                tags: ["item"],
                options: {
                    item: "",
                    item2: "",
                    use: !1,
                    target: "",
                    max: 0
                },
                reset: function() {
                    var e = this.options;
                    e.item = "", e.item2 = "", e.use = !1, e.target = "", e.max = 0
                },
                set: function(e) {
                    var t = this.options;
                    Object.assign(t, e)
                },
                before: function() {
                    var e = this.options;
                    return new Promise((function(e, t) {
                        var n = ["打开", "兑换", "使用", "对目标使用"];
                        uni.showActionSheet({
                            itemList: n,
                            success: function(n) {
                                var r = n.tapIndex;
                                r < 0 ? t("取消") : e(r)
                            },
                            fail: function() {
                                t("取消")
                            }
                        })
                    })).then((function(t) {
                        return (0, a.x0popup)("输入使用物品名称", null, "input").then((function(t) {
                            var n = t.button,
                                r = t.text;
                            if ("cancel" === n || !r) throw new Error("取消");
                            e.item = r
                        })).then((function() {
                            return 1 === t ? (0, a.x0popup)("输入兑换物品名称", null, "input").then((function(t) {
                                var n = t.button,
                                    r = t.text;
                                if ("cancel" === n || !r) throw new Error("取消");
                                e.item2 = r
                            })) : 2 !== t && 3 !== t || (e.use = !0, 3 !== t) ? void 0 : (0, a.x0popup)("输入目标名称或序号", null, "input").then((function(t) {
                                var n = t.button,
                                    r = t.text;
                                if ("cancel" === n || !r) throw new Error("取消");
                                e.target = r
                            }))
                        }))
                    }))
                }
            }, (function() {
                var e = this.options,
                    t = !1,
                    n = !1,
                    r = e.item,
                    c = e.item2,
                    u = e.use,
                    i = e.target,
                    o = 0;

                function f(e) {
                    return a.task.sleep().then((function() {
                        return a.task.send(e, ["你的背包似乎满了", "你打算继续打开", "是否要继续", "要继续吗", "成功", "结束", "你得到", "<*>cnt"])
                    })).then((function(e) {
                        var n = e.index,
                            r = e.text;
                        if (0 === n) {
                            if (t) throw new Error(r);
                            return s.default.start().then((function() {
                                return t = !0, l()
                            }))
                        }
                        if (n < 4) {
                            var c = r.match(/\[(.+)\](\{.+\})?继续/);
                            return f(c ? c[1] : "goon")
                        }
                        return a.task.sleep()
                    }))
                }

                function l() {
                    return (0, a.findItem)(r).catch((function() {
                        return a.task.send("cnt").sleep(500).then((function() {
                            var e = "".concat(r, " 未找到");
                            throw n || uni.showToast({
                                title: e,
                                icon: "none"
                            }), new Error(e)
                        }))
                    })).then((function(e) {
                        var t = e.code,
                            r = e.list,
                            s = e.title;
                        s = (0, a.clearText)(s), n = !0;
                        var i = r.find((function(e) {
                            var t, n = e.title;
                            return t = u ? /[使饮食]用|换取|领取|寄出|突破|召唤|增加|吹响|狂欢|彩绘到/ : c ? /兑换|凝练/ : /打开|获得|魂魄结晶|灵魂粉末|王牌任务旗/, t.test(n)
                        }));
                        if (i) {
                            var o = c ? ["请选择您要"] : ["你确认要打开", "即将打开", "继续", "成功", "你得到了", "速度太快了", "Command Unknown!"];
                            return a.task.send("".concat(t, " ").concat(i.code), u ? ["<pmg", "<menu"] : ["你的背包似乎满了"].concat(o))
                        }
                        return a.task.send("cnt").sleep(500).then((function() {
                            var e = "".concat(s, " 不可").concat(c ? "兑换" : u ? "使用" : "打开");
                            throw uni.showToast({
                                title: e,
                                icon: "none"
                            }), new Error(e)
                        }))
                    })).then((function(n) {
                        var r = n.index,
                            p = n.text;
                        if (u) return Promise.resolve().then((function() {
                            return i && 1 === r ? a.task.sleep().then((function() {
                                var e = (0, a.parseMsg)(p).data.list,
                                    t = e.find((function(e, t) {
                                        var n = e.title;
                                        return /^\d+$/.test(i) && Number(i) < 30 ? Number(i) === t + 1 : n.includes(i)
                                    }));
                                return t ? a.task.send(t.code, ["<pmg", "<menu"]) : (uni.showToast({
                                    title: "未找到目标",
                                    icon: "none"
                                }), a.task.send("cnt"))
                            })) : Promise.resolve({
                                index: r,
                                text: p
                            })
                        })).then((function(e) {
                            var t = e.index,
                                n = e.text;
                            return 0 === t && /\[yes\]/.test(n) ? a.task.sleep().then((function() {
                                return a.task.send("yes", ["<pmg", "<menu"])
                            })) : Promise.resolve({
                                index: t
                            })
                        })).then((function(t) {
                            var n = t.index;
                            return a.task.sleep().then((function() {
                                return 0 !== n ? (uni.showToast({
                                    title: "暂时不支持使用此物品",
                                    icon: "none"
                                }), a.task.send("cnt")) : (o++, !e.max || o < e.max ? a.task.sleep().then(l) : void 0)
                            }))
                        }));
                        if (0 === r) {
                            if (t) throw new Error(p);
                            return s.default.start().then((function() {
                                return t = !0, l()
                            }))
                        }
                        if (c) {
                            var d = (0, a.parseMsg)(p).data.list,
                                x = d.find((function(e) {
                                    var t = e.title;
                                    return t.includes(c)
                                }));
                            return x ? a.task.sleep().then((function() {
                                return a.task.send(x.code, ["成功", "你得到了", "[".concat(x.code, "]")])
                            })).then((function(e) {
                                var t = e.index;
                                if (2 === t) return a.task.send(x.code, ["成功", "你得到了"])
                            })).then((function() {
                                if (o++, !e.max || o < e.max) return a.task.sleep().then(l)
                            })) : a.task.send("cnt").sleep(500).then((function() {
                                var e = "不可兑换 ".concat(c);
                                throw uni.showToast({
                                    title: e,
                                    icon: "none"
                                }), new Error(e)
                            }))
                        }
                        if (r > 3) return a.task.sleep().then(l);
                        var h = p.match(/\[(.+)\](\{.+\})?(打开|继续)/);
                        return t = !1, f(h ? h[1] : "ok")
                    }))
                }
                return l()
            }));
        t.default = c
    },
    "3a38": function(e, t) {
        var n = Math.ceil,
            r = Math.floor;
        e.exports = function(e) {
            return isNaN(e = +e) ? 0 : (e > 0 ? r : n)(e)
        }
    },
    "3b2b": function(e, t, n) {
        var r = n("7726"),
            a = n("5dbc"),
            s = n("86cc").f,
            c = n("9093").f,
            u = n("aae3"),
            i = n("0bfb"),
            o = r.RegExp,
            f = o,
            l = o.prototype,
            p = /a/g,
            d = /a/g,
            x = new o(p) !== p;
        if (n("9e1e") && (!x || n("79e5")((function() {
                return d[n("2b4c")("match")] = !1, o(p) != p || o(d) == d || "/a/i" != o(p, "i")
            })))) {
            o = function(e, t) {
                var n = this instanceof o,
                    r = u(e),
                    s = void 0 === t;
                return !n && r && e.constructor === o && s ? e : a(x ? new f(r && !s ? e.source : e, t) : f((r = e instanceof o) ? e.source : e, r && s ? i.call(e) : t), n ? this : l, o)
            };
            for (var h = function(e) {
                    e in o || s(o, e, {
                        configurable: !0,
                        get: function() {
                            return f[e]
                        },
                        set: function(t) {
                            f[e] = t
                        }
                    })
                }, k = c(f), v = 0; k.length > v;) h(k[v++]);
            l.constructor = o, o.prototype = l, n("2aba")(r, "RegExp", o)
        }
        n("7a56")("RegExp")
    },
    "3b8d": function(e, t, n) {
        "use strict";
        n.r(t), n.d(t, "default", (function() {
            return c
        }));
        var r = n("795b"),
            a = n.n(r);

        function s(e, t, n, r, s, c, u) {
            try {
                var i = e[c](u),
                    o = i.value
            } catch (f) {
                return void n(f)
            }
            i.done ? t(o) : a.a.resolve(o).then(r, s)
        }

        function c(e) {
            return function() {
                var t = this,
                    n = arguments;
                return new a.a((function(r, a) {
                    var c = e.apply(t, n);

                    function u(e) {
                        s(c, r, a, u, i, "next", e)
                    }

                    function i(e) {
                        s(c, r, a, u, i, "throw", e)
                    }
                    u(void 0)
                }))
            }
        }
    },
    "3c11": function(e, t, n) {
        "use strict";
        var r = n("63b6"),
            a = n("584a"),
            s = n("e53d"),
            c = n("f201"),
            u = n("cd78");
        r(r.P + r.R, "Promise", {
            finally: function(e) {
                var t = c(this, a.Promise || s.Promise),
                    n = "function" == typeof e;
                return this.then(n ? function(n) {
                    return u(t, e()).then((function() {
                        return n
                    }))
                } : e, n ? function(n) {
                    return u(t, e()).then((function() {
                        throw n
                    }))
                } : e)
            }
        })
    },
    "3d5a": function(e, t, n) {
        (function(t, r, a) {
            e.exports = r(n("21bf"), n("1132"), n("72fe"), n("2b79"), n("38ba"))
        })(0, (function(e) {
            return function() {
                var t = e,
                    n = t.lib,
                    r = n.StreamCipher,
                    a = t.algo,
                    s = [],
                    c = [],
                    u = [],
                    i = a.RabbitLegacy = r.extend({
                        _doReset: function() {
                            var e = this._key.words,
                                t = this.cfg.iv,
                                n = this._X = [e[0], e[3] << 16 | e[2] >>> 16, e[1], e[0] << 16 | e[3] >>> 16, e[2], e[1] << 16 | e[0] >>> 16, e[3], e[2] << 16 | e[1] >>> 16],
                                r = this._C = [e[2] << 16 | e[2] >>> 16, 4294901760 & e[0] | 65535 & e[1], e[3] << 16 | e[3] >>> 16, 4294901760 & e[1] | 65535 & e[2], e[0] << 16 | e[0] >>> 16, 4294901760 & e[2] | 65535 & e[3], e[1] << 16 | e[1] >>> 16, 4294901760 & e[3] | 65535 & e[0]];
                            this._b = 0;
                            for (var a = 0; a < 4; a++) o.call(this);
                            for (a = 0; a < 8; a++) r[a] ^= n[a + 4 & 7];
                            if (t) {
                                var s = t.words,
                                    c = s[0],
                                    u = s[1],
                                    i = 16711935 & (c << 8 | c >>> 24) | 4278255360 & (c << 24 | c >>> 8),
                                    f = 16711935 & (u << 8 | u >>> 24) | 4278255360 & (u << 24 | u >>> 8),
                                    l = i >>> 16 | 4294901760 & f,
                                    p = f << 16 | 65535 & i;
                                r[0] ^= i, r[1] ^= l, r[2] ^= f, r[3] ^= p, r[4] ^= i, r[5] ^= l, r[6] ^= f, r[7] ^= p;
                                for (a = 0; a < 4; a++) o.call(this)
                            }
                        },
                        _doProcessBlock: function(e, t) {
                            var n = this._X;
                            o.call(this), s[0] = n[0] ^ n[5] >>> 16 ^ n[3] << 16, s[1] = n[2] ^ n[7] >>> 16 ^ n[5] << 16, s[2] = n[4] ^ n[1] >>> 16 ^ n[7] << 16, s[3] = n[6] ^ n[3] >>> 16 ^ n[1] << 16;
                            for (var r = 0; r < 4; r++) s[r] = 16711935 & (s[r] << 8 | s[r] >>> 24) | 4278255360 & (s[r] << 24 | s[r] >>> 8), e[t + r] ^= s[r]
                        },
                        blockSize: 4,
                        ivSize: 2
                    });

                function o() {
                    for (var e = this._X, t = this._C, n = 0; n < 8; n++) c[n] = t[n];
                    t[0] = t[0] + 1295307597 + this._b | 0, t[1] = t[1] + 3545052371 + (t[0] >>> 0 < c[0] >>> 0 ? 1 : 0) | 0, t[2] = t[2] + 886263092 + (t[1] >>> 0 < c[1] >>> 0 ? 1 : 0) | 0, t[3] = t[3] + 1295307597 + (t[2] >>> 0 < c[2] >>> 0 ? 1 : 0) | 0, t[4] = t[4] + 3545052371 + (t[3] >>> 0 < c[3] >>> 0 ? 1 : 0) | 0, t[5] = t[5] + 886263092 + (t[4] >>> 0 < c[4] >>> 0 ? 1 : 0) | 0, t[6] = t[6] + 1295307597 + (t[5] >>> 0 < c[5] >>> 0 ? 1 : 0) | 0, t[7] = t[7] + 3545052371 + (t[6] >>> 0 < c[6] >>> 0 ? 1 : 0) | 0, this._b = t[7] >>> 0 < c[7] >>> 0 ? 1 : 0;
                    for (n = 0; n < 8; n++) {
                        var r = e[n] + t[n],
                            a = 65535 & r,
                            s = r >>> 16,
                            i = ((a * a >>> 17) + a * s >>> 15) + s * s,
                            o = ((4294901760 & r) * r | 0) + ((65535 & r) * r | 0);
                        u[n] = i ^ o
                    }
                    e[0] = u[0] + (u[7] << 16 | u[7] >>> 16) + (u[6] << 16 | u[6] >>> 16) | 0, e[1] = u[1] + (u[0] << 8 | u[0] >>> 24) + u[7] | 0, e[2] = u[2] + (u[1] << 16 | u[1] >>> 16) + (u[0] << 16 | u[0] >>> 16) | 0, e[3] = u[3] + (u[2] << 8 | u[2] >>> 24) + u[1] | 0, e[4] = u[4] + (u[3] << 16 | u[3] >>> 16) + (u[2] << 16 | u[2] >>> 16) | 0, e[5] = u[5] + (u[4] << 8 | u[4] >>> 24) + u[3] | 0, e[6] = u[6] + (u[5] << 16 | u[5] >>> 16) + (u[4] << 16 | u[4] >>> 16) | 0, e[7] = u[7] + (u[6] << 8 | u[6] >>> 24) + u[5] | 0
                }
                t.RabbitLegacy = r._createHelper(i)
            }(), e.RabbitLegacy
        }))
    },
    "3f7e": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.Task = void 0, t.bcfxzy = S, t.buy = E, t.canClear = T, Object.defineProperty(t, "chars", {
            enumerable: !0,
            get: function() {
                return l.chars
            }
        }), t.checkCode = C, Object.defineProperty(t, "clearText", {
            enumerable: !0,
            get: function() {
                return l.clearText
            }
        }), t.easyshop = j, t.findItem = R, t.findNpcItem = P, t.getKey = $, t.getMainDataAsync = d, t.globalSettings = void 0, t.hasCode = I, t.ksbx = B, t.mapMove = g, t.moveMapTarget = L, Object.defineProperty(t, "parseMsg", {
            enumerable: !0,
            get: function() {
                return l.parseMsg
            }
        }), Object.defineProperty(t, "request", {
            enumerable: !0,
            get: function() {
                return l.request
            }
        }), t.setMainDataAsync = x, Object.defineProperty(t, "showActionSheet", {
            enumerable: !0,
            get: function() {
                return l.showActionSheet
            }
        }), t.task = void 0, Object.defineProperty(t, "toArray", {
            enumerable: !0,
            get: function() {
                return l.toArray
            }
        }), t.userSettings = void 0, t.x0popup = m, n("6b54"), n("28a5"), n("a481"), n("f559");
        var a = r(n("7618")),
            s = r(n("d225")),
            c = r(n("b0b4"));
        n("c5f6"), n("3b2b"), n("4917"), n("6762"), n("2fdb"), n("7514");
        var u = r(n("768b"));
        n("ac6a"), n("96cf");
        var i = r(n("3b8d")),
            o = n("3452"),
            f = n("d8e2"),
            l = n("f161");

        function p(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
            return new Promise((function(n) {
                postMessage({
                    name: e,
                    args: t,
                    callback: (0, f.encodeCallback)(n)
                })
            }))
        }

        function d() {
            return p("getMainData")
        }

        function x() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
            return p("setMainData", t)
        }

        function h() {
            return p("getUserInfo")
        }
        var k = {
            getAsync: function(e) {
                return p("userSettings.get", [e])
            },
            setAsync: function(e, t) {
                return p("userSettings.set", [e, t])
            }
        };
        t.userSettings = k;
        var v = {
            data: {},
            init: function() {
                var e = (0, i.default)(regeneratorRuntime.mark((function e() {
                    var t = this;
                    return regeneratorRuntime.wrap((function(e) {
                        while (1) switch (e.prev = e.next) {
                            case 0:
                                return e.next = 2, p("globalSettings");
                            case 2:
                                this.data = e.sent, uni.$on("globalSettingsChange", (function(e) {
                                    t.data = e
                                }));
                            case 4:
                            case "end":
                                return e.stop()
                        }
                    }), e, this)
                })));

                function t() {
                    return e.apply(this, arguments)
                }
                return t
            }(),
            get: function(e) {
                return this.data[e]
            },
            getAsync: function(e) {
                return p("globalSettings.get", [e])
            },
            setAsync: function(e, t) {
                return p("globalSettings.set", [e, t])
            }
        };

        function m() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
            return p("x0popup", t).then((function(e) {
                return JSON.parse(e)
            }))
        }
        t.globalSettings = v;
        var b = {
            paths: function() {
                var e = (0, i.default)(regeneratorRuntime.mark((function e() {
                    var t;
                    return regeneratorRuntime.wrap((function(e) {
                        while (1) switch (e.prev = e.next) {
                            case 0:
                                return e.next = 2, d();
                            case 2:
                                return t = e.sent.serverType, e.abrupt("return", {
                                    "寂寥之地": {
                                        "夜雪宁地": "t l 10011",
                                        "残月平原": "t l 10012",
                                        "宁寂之谷": "t l 10013",
                                        "孤儿院": "t l 10023",
                                        "焰火小镇": "old" === t ? "t l 10026" : "t l 10027"
                                    },
                                    "夜雪宁地": {
                                        "寂寥之地": "t l 6001"
                                    },
                                    "残月平原": {
                                        "寂寥之地": "t l 6001"
                                    },
                                    "宁寂之谷": {
                                        "寂寥之地": "t l 6001"
                                    },
                                    "孤儿院": {
                                        "寂寥之地": "t l 8001"
                                    },
                                    "焰火小镇": {
                                        "寂寥之地": "t l 8001"
                                    },
                                    "闪光镇东路": {
                                        "罗克萨斯家": "t l 5001"
                                    }
                                });
                            case 4:
                            case "end":
                                return e.stop()
                        }
                    }), e)
                })));

                function t() {
                    return e.apply(this, arguments)
                }
                return t
            }(),
            find: function() {
                var e = (0, i.default)(regeneratorRuntime.mark((function e(t) {
                    var n, r, a, s, c, u;
                    return regeneratorRuntime.wrap((function(e) {
                        while (1) switch (e.prev = e.next) {
                            case 0:
                                return e.next = 2, d();
                            case 2:
                                return n = e.sent.map.title, e.next = 5, this.paths();
                            case 5:
                                r = e.sent, e.t0 = regeneratorRuntime.keys(r);
                            case 7:
                                if ((e.t1 = e.t0()).done) {
                                    e.next = 23;
                                    break
                                }
                                if (a = e.t1.value, s = r[a], n !== a) {
                                    e.next = 21;
                                    break
                                }
                                if (!(t in s)) {
                                    e.next = 13;
                                    break
                                }
                                return e.abrupt("return", [
                                    [s[t], t]
                                ]);
                            case 13:
                                e.t2 = regeneratorRuntime.keys(r);
                            case 14:
                                if ((e.t3 = e.t2()).done) {
                                    e.next = 21;
                                    break
                                }
                                if (c = e.t3.value, u = r[c], c === a || !(t in u) || !(c in s)) {
                                    e.next = 19;
                                    break
                                }
                                return e.abrupt("return", [
                                    [s[c], c],
                                    [u[t], t]
                                ]);
                            case 19:
                                e.next = 14;
                                break;
                            case 21:
                                e.next = 7;
                                break;
                            case 23:
                            case "end":
                                return e.stop()
                        }
                    }), e, this)
                })));

                function t(t) {
                    return e.apply(this, arguments)
                }
                return t
            }(),
            move: function() {
                var e = (0, i.default)(regeneratorRuntime.mark((function e(t) {
                    var n, r, a, s, c;
                    return regeneratorRuntime.wrap((function(e) {
                        while (1) switch (e.prev = e.next) {
                            case 0:
                                n = 0;
                            case 1:
                                if (!(n < t.length)) {
                                    e.next = 9;
                                    break
                                }
                                return r = t[n], a = (0, u.default)(r, 2), s = a[0], c = a[1], e.next = 6, w.send(s, "<title>".concat(c));
                            case 6:
                                n++, e.next = 1;
                                break;
                            case 9:
                            case "end":
                                return e.stop()
                        }
                    }), e)
                })));

                function t(t) {
                    return e.apply(this, arguments)
                }
                return t
            }()
        };

        function g(e, t) {
            return y.apply(this, arguments)
        }

        function y() {
            return y = (0, i.default)(regeneratorRuntime.mark((function e(t, n) {
                var r, a, s, c, u, i, o, f;
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                            f = function() {
                                return w.send("map move ".concat(t), [].concat(r, ["似乎有一层结界保护着这里", "你不能移动到", "才可以进入", "不能进入", "你现在没有", "无法进入", "还是不要打扰"])).then((function(e) {
                                    var t = e.index,
                                        n = e.text;
                                    if (t === r.length + 4) return w.send("cl", "<pmg").then((function() {
                                        return w.sleep()
                                    })).then(S).then((function() {
                                        return w.sleep()
                                    })).then(f).catch((function(e) {
                                        return Promise.reject(e)
                                    }));
                                    if (t < r.length) return Promise.resolve();
                                    throw new Error(n)
                                }))
                            }, r = [], a = {
                                "闪光镇东路": "后闪光镇东路",
                                "家族会所": "家族会馆",
                                "梦幻海滩": "梦幻沙滩"
                            }, s = [n], n in a && s.push(a[n]), c = 0;
                        case 6:
                            if (!(c < s.length)) {
                                e.next = 22;
                                break
                            }
                            return u = s[c], r.push("到了".concat(u)), e.next = 11, d();
                        case 11:
                            if (i = e.sent.map.title, i !== u && !i.startsWith(u + "-副本")) {
                                e.next = 14;
                                break
                            }
                            return e.abrupt("return", Promise.resolve());
                        case 14:
                            return e.next = 16, b.find(u);
                        case 16:
                            if (o = e.sent, !o) {
                                e.next = 19;
                                break
                            }
                            return e.abrupt("return", b.move(o));
                        case 19:
                            c++, e.next = 6;
                            break;
                        case 22:
                            return e.next = 24, f();
                        case 24:
                        case "end":
                            return e.stop()
                    }
                }), e)
            }))), y.apply(this, arguments)
        }
        var w = {
            move: function(e, t) {
                return g(e, t)
            },
            cancel: function(e, t) {
                return e ? this.send("?").sleep(t || 1e3) : this.send("?", "cnt")
            },
            send: function(e, t, n, r) {
                return (0, l.send)(e), t ? this.filter(t, n, r, e) : this
            },
            log: function(e) {
                return (0, l.log)(e), this
            },
            filter: function(e, t, n, r) {
                return Array.isArray(e) || (e = [e]), new Promise((function(r) {
                    var a;

                    function s(n) {
                        var c;
                        t || (n = n.map((function(e) {
                            return (0, l.removeImgs)(e)
                        })));
                        var u = e.find((function(e) {
                            for (var t = 0; t < n.length; t++) {
                                var r = n[t],
                                    a = (0, l.parseMsg)(r);
                                if (("smg" !== a.type || a.text.includes("剧情动画")) && ("msg" !== a.type || !("chnl" in a.props) && !/活动结束|活动开始|活动开启|活动已经开启|活动已经结束|你得到/.test(a.text))) {
                                    var s = a.text.match(/^(\S+)从\S+买下了/) || a.text.match(/^(\S+)(卸除|装备|锻造|重锻|轻锻|精灵锻)/);
                                    if (("msg" !== a.type || !s || "你" === s[1]) && !("input" === a.type && "输入密码" === a.props.t || "pmg" === a.type && a.text.includes("密码输入错误")) && (e instanceof RegExp ? e.test(r) : r.includes(e))) return c = r, !0
                                }
                            }
                        }));
                        u && (clearTimeout(a), uni.$off("msgs", s), r({
                            msgs: n,
                            index: e.indexOf(u),
                            text: c
                        }))
                    }
                    n && (a = setTimeout((function() {
                        (0, l.send)("5")
                    }), n)), uni.$on("msgs", s)
                }))
            },
            sleep: function(e) {
                return e = Number(e) || 100, e += 1e3 * Number(v.get("delay")) || 0, console.log(e), new Promise((function(t) {
                    setTimeout((function() {
                        t()
                    }), e)
                }))
            }
        };
        t.task = w;
        var _ = function() {
            function e(t, n) {
                (0, s.default)(this, e), "string" === typeof t && (t = {
                    title: t
                }), "object" === (0, a.default)(t) && Object.assign(this, t), this.start = function() {
                    var e = (0, i.default)(regeneratorRuntime.mark((function e(t) {
                        var r, a, s, c, u, i = arguments;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return r = !(i.length > 1 && void 0 !== i[1]) || i[1], a = this.title, w.log("任务：".concat(a, " 开始")), e.prev = 3, e.prev = 4, e.next = 7, w.sleep();
                                case 7:
                                    for (s = i.length, c = new Array(s > 2 ? s - 2 : 0), u = 2; u < s; u++) c[u - 2] = i[u];
                                    return e.next = 10, n.bind(this).apply(void 0, c);
                                case 10:
                                    e.next = 19;
                                    break;
                                case 12:
                                    if (e.prev = 12, e.t0 = e["catch"](4), !r) {
                                        e.next = 18;
                                        break
                                    }
                                    console.warn(e.t0), e.next = 19;
                                    break;
                                case 18:
                                    throw e.t0 instanceof Error ? e.t0 : new Error(e.t0);
                                case 19:
                                    return e.prev = 19, w.log("任务：".concat(a, " 结束")), e.finish(19);
                                case 22:
                                case "end":
                                    return e.stop()
                            }
                        }), e, this, [
                            [3, , 19, 22],
                            [4, 12]
                        ])
                    })));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }
            return (0, c.default)(e, [{
                key: "update",
                value: function() {
                    postMessage({
                        name: "update",
                        args: [{
                            form: this.form,
                            options: this.options
                        }]
                    })
                }
            }]), e
        }();

        function R(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "2",
                n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                r = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
                s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : [],
                c = String(t).includes(" ") ? t : String(t).startsWith(":") ? t.replace(":", "") : "m5 ".concat(t),
                u = [];

            function i(t) {
                for (var c = t.text, o = (0, l.parseMsg)(c).data.list, f = function(t) {
                        var a = o[t],
                            c = a.code,
                            f = a.title;
                        if (!(s instanceof RegExp ? s.test(f) : s.includes(f)) && (e instanceof RegExp ? e.test(f) : f.includes(e))) {
                            if (2 !== n) return {
                                v: w.sleep().then((function() {
                                    return Promise.resolve(a)
                                }))
                            };
                            u.push(a)
                        }
                        if (-1 !== n && (0 === n ? "all" === v.get("itemFind") : n) && /\(下一页\)/.test(f)) return {
                            v: w.sleep().then((function() {
                                return w.send(c, "<menu", r).then(i)
                            }))
                        }
                    }, p = 0; p < o.length; p++) {
                    var d = f(p);
                    if ("object" === (0, a.default)(d)) return d.v
                }
                return w.send("cnt").sleep(500).then((function() {
                    if (u.length) return Promise.resolve(u);
                    throw new Error("未找到：".concat(e))
                }))
            }
            return w.log("查找：".concat(e)).sleep().then((function() {
                return w.send(c, ["<menu", "<r>cnt", "附近没有东西"], r)
            })).then((function(e) {
                var t = e.index,
                    n = e.text;
                return Promise.resolve({
                    index: t,
                    text: n
                }).then(i)
            }))
        }

        function M(e, t) {
            return R(e).then((function(e) {
                var n = e.code;
                return w.send("".concat(n, " 0"), t)
            }))
        }

        function j() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "not";

            function t() {
                return w.send("easyshop", ["您的银会员卡已经过期了", "随手贵宾店", "随手小卖部"]).then((function(e) {
                    var t = e.index,
                        n = e.text;
                    if (0 === t) throw new Error(n);
                    return w.sleep().then((function() {
                        return Promise.resolve({
                            index: t,
                            text: n
                        })
                    }))
                }))
            }
            return t().catch((function(n) {
                return console.warn(n), w.sleep().then((function() {
                    return M("小卖部银会员卡", "认证完毕")
                })).catch((function() {
                    return w.sleep().then((function() {
                        return w.send("hd_lq", ["今天已经领取过", "领取每日奖励"])
                    })).then((function(t) {
                        var n = t.index,
                            r = t.text;
                        return w.sleep().then((function() {
                            if (0 === n) {
                                if ("not" === e) throw new Error(r);
                                return R("飞行之羽", 2, 1, !0).then((function(t) {
                                    var n = t.title;
                                    return w.send("cnt").sleep(500).then((function() {
                                        var t = n.includes("组") ? 99 : Number((n.replace("{x18$", "").match(/^\d+/) || [])[0]);
                                        if (!(t >= ("back" === e ? 2 : 1))) throw new Error("无飞行之羽")
                                    }))
                                })).then((function() {
                                    return g("sgz 103", "光芒市场")
                                })).then((function() {
                                    return w.sleep()
                                })).then((function() {
                                    return w.send("npc 1002 1", "你有")
                                })).then((function() {
                                    return w.sleep()
                                })).then((function() {
                                    return w.send("8 2", ["小卖部银会员卡", "<pmg"])
                                })).then((function(e) {
                                    var t = e.index,
                                        n = e.text;
                                    return w.sleep().then((function() {
                                        return w.send("cnt", ["<"])
                                    })).then((function() {
                                        if (0 !== t) throw new Error(n)
                                    }))
                                }))
                            }
                            return w.send("j2", "领取每日奖励成功")
                        })).then((function() {
                            return M("小卖部银会员卡", "认证完毕")
                        }))
                    }))
                })).then((function() {
                    return w.sleep()
                })).then(t)
            }))
        }

        function E(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;

            function n(r) {
                for (var a, s = r.text, c = (0, l.parseMsg)(s).data.list, u = function(t) {
                        if (a = c.find((function(n) {
                                var r = n.title;
                                return r.includes(e[t])
                            })), a) return "break"
                    }, i = 0; i < e.length; i++) {
                    var o = u(i);
                    if ("break" === o) break
                }
                return !a && c.find((function(e) {
                    var t = e.code;
                    return "r" === t
                })) ? w.sleep().then((function() {
                    return w.send("r", "<menu").then(n)
                })) : w.sleep().then((function() {
                    var e = ["买下了", "<pmg"];
                    return t > 1 ? w.send("".concat(a.code, " 3"), ["<input"]).then((function() {
                        w.sleep()
                    })).then((function() {
                        return w.send("".concat(t))
                    })) : w.send("".concat(a.code, " 2"), e)
                }))
            }
            return "string" === typeof e && (e = [e]), j().then((function(e) {
                var t = e.index;
                return w.send(1 === t ? "sps2" : "sps1", "你有")
            })).then(n).then((function(e) {
                var t = e.index,
                    n = e.text;
                return w.sleep().then((function() {
                    return w.send("cnt").sleep(500)
                })).then((function() {
                    if (t > 0) throw new Error(n)
                }))
            }))
        }

        function S(e) {
            return O.apply(this, arguments)
        }

        function O() {
            return O = (0, i.default)(regeneratorRuntime.mark((function e(t) {
                var n, r;
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                            if (!t) {
                                e.next = 4;
                                break
                            }
                            n = -1, e.next = 8;
                            break;
                        case 4:
                            return e.next = 6, w.send("hd_lq", ["你今天已经领取过奖励了", "您今天已经领取过一次了", "领取每日奖励"]);
                        case 6:
                            r = e.sent, n = r.index;
                        case 8:
                            if (!(n < 2)) {
                                e.next = 12;
                                break
                            }
                            return e.next = 11, E("飞行之羽", 99);
                        case 11:
                            return e.abrupt("return");
                        case 12:
                            return e.next = 14, w.sleep();
                        case 14:
                            return e.next = 16, w.send("j1", ["明天可以继续选取奖励哦", "今天还可以再领取一次哦"]);
                        case 16:
                        case "end":
                            return e.stop()
                    }
                }), e)
            }))), O.apply(this, arguments)
        }

        function P(e, t) {
            return A.apply(this, arguments)
        }

        function A() {
            return A = (0, i.default)(regeneratorRuntime.mark((function e(t, n) {
                var r, a, s, c;
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                            return e.next = 2, d();
                        case 2:
                            return r = e.sent.map.npc, a = r.find((function(e) {
                                var n = e.code,
                                    r = e.title;
                                return n === t.code || r === t.title
                            })), s = a.list, c = s.find("function" === typeof n ? n : function(e) {
                                var t = e.title;
                                return n instanceof RegExp ? n.test(n) : t.includes(n)
                            }), e.abrupt("return", c);
                        case 6:
                        case "end":
                            return e.stop()
                    }
                }), e)
            }))), A.apply(this, arguments)
        }

        function T(e, t) {
            t = (0, l.clearText)(t);
            var n = ["精灵锻造宝石", "高级人物装备宝珠", "高级洗练宝石", "超级洗练宝石", "三属性注魔宝石", "单项重置注魔宝石", "超级精灵球", "+15", "五品.攻击宝石", "神品.攻击宝石", "魂品.攻击宝石"],
                r = v.get("keepItem").split(/[｜|]/).filter((function(e) {
                    return e.length
                }));
            return e.find((function(e) {
                if (n.find((function(e) {
                        return t.includes(e) && !t.includes("灵能.")
                    }))) return t === e;
                if (e instanceof RegExp) return e.test(t);
                var r = e.split("&");
                return !r.find((function(e) {
                    return !t.includes(e)
                }))
            })) && !r.find((function(e) {
                return t.includes(e)
            }))
        }

        function B() {
            return N.apply(this, arguments)
        }

        function N() {
            return N = (0, i.default)(regeneratorRuntime.mark((function e() {
                var t, n, r, a, s, c;
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                            return e.next = 2, w.sleep();
                        case 2:
                            return t = ["[ksbx ok]", "[cl]", "恢复了", "不用进行"], n = 0, e.next = 6, w.send("ksbx", t);
                        case 6:
                            if (r = e.sent, a = r.index, n = a, 0 !== n) {
                                e.next = 17;
                                break
                            }
                            return e.next = 12, w.sleep();
                        case 12:
                            return e.next = 14, w.send("ksbx ok", t);
                        case 14:
                            s = e.sent, c = s.index, n = c;
                        case 17:
                            if (1 !== n) {
                                e.next = 22;
                                break
                            }
                            return e.next = 20, w.sleep();
                        case 20:
                            return e.next = 22, w.send("cl", "取消");
                        case 22:
                        case "end":
                            return e.stop()
                    }
                }), e)
            }))), N.apply(this, arguments)
        }

        function I() {
            return z.apply(this, arguments)
        }

        function z() {
            return z = (0, i.default)(regeneratorRuntime.mark((function e() {
                var t, n;
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                            return e.next = 2, d();
                        case 2:
                            return t = e.sent, n = t.wgVisible, e.abrupt("return", n);
                        case 5:
                        case "end":
                            return e.stop()
                    }
                }), e)
            }))), z.apply(this, arguments)
        }

        function C() {
            return D.apply(this, arguments)
        }

        function D() {
            return D = (0, i.default)(regeneratorRuntime.mark((function e() {
                var t, n, r, a, s, c, u, i, o, f;
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                            return e.next = 2, I();
                        case 2:
                            if (!e.sent) {
                                e.next = 48;
                                break
                            }
                            n = 0;
                        case 4:
                            if (!(n < 10)) {
                                e.next = 34;
                                break
                            }
                            return e.next = 7, w.sleep();
                        case 7:
                            return e.next = 9, w.send(n ? "other_p" : "5", ["<menu(tou:5)(t:c)>反外挂答题"]);
                        case 9:
                            return e.next = 11, w.sleep(1e3);
                        case 11:
                            return e.prev = 11, e.next = 14, d();
                        case 14:
                            return r = e.sent, a = r.wgpic, e.next = 18, (0, l.request)({
                                url: "https://i-weather.cn/api/?key=kdjlcode&image=".concat(encodeURIComponent(a))
                            });
                        case 18:
                            s = e.sent, c = s.data, u = void 0 === c ? {} : c, t = u.text, e.next = 26;
                            break;
                        case 24:
                            e.prev = 24, e.t0 = e["catch"](11);
                        case 26:
                            if (!/^\w{4}$/.test(t)) {
                                e.next = 30;
                                break
                            }
                            return e.abrupt("break", 34);
                        case 30:
                            t = "";
                        case 31:
                            n++, e.next = 4;
                            break;
                        case 34:
                            return e.next = 36, w.send("fwg ".concat(t || "0000"), ["验证码正确", "验证码有误", "输入的不是四位"]);
                        case 36:
                            if (i = e.sent, o = i.index, 0 === o) {
                                e.next = 48;
                                break
                            }
                            f = 0;
                        case 40:
                            if (!(f < 5)) {
                                e.next = 46;
                                break
                            }
                            return e.next = 43, B();
                        case 43:
                            f++, e.next = 40;
                            break;
                        case 46:
                            return e.next = 48, C();
                        case 48:
                        case "end":
                            return e.stop()
                    }
                }), e, null, [
                    [11, 24]
                ])
            }))), D.apply(this, arguments)
        }

        function L(e) {
            return H.apply(this, arguments)
        }

        function H() {
            return H = (0, i.default)(regeneratorRuntime.mark((function e(t) {
                var n, r;
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                            return n = t.split("|"), n = n.slice(n.length - 2), r = t.match(new RegExp("00".concat(Number(n[0]).toString(16).toUpperCase(), "(.+?)\\$")))[1], e.next = 5, w.sleep();
                        case 5:
                            return e.next = 7, w.move("".concat(n[1], " ").concat(n[0]), r);
                        case 7:
                        case "end":
                            return e.stop()
                    }
                }), e)
            }))), H.apply(this, arguments)
        }
        t.Task = _;
        var F = "5thn8uhv";

        function $() {
            return W.apply(this, arguments)
        }

        function W() {
            return W = (0, i.default)(regeneratorRuntime.mark((function e() {
                var t, n;
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                            return e.next = 2, h();
                        case 2:
                            return t = e.sent, n = t.username, e.abrupt("return", o.AES.encrypt(n, F).toString());
                        case 5:
                        case "end":
                            return e.stop()
                    }
                }), e)
            }))), W.apply(this, arguments)
        }
    },
    "3fa1": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("6762"), n("2fdb"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = n("52d9"),
            u = new s.Task({
                title: "制造佣兵宝珠",
                tags: ["change", "item"],
                form: [{
                    title: "宝珠类型",
                    type: "picker",
                    range: [{
                        title: "普通制造",
                        code: "vspmk_frist"
                    }, {
                        title: "高级制造",
                        code: "vspmk_second"
                    }, {
                        title: "强力制造",
                        code: "vspmk_third"
                    }, {
                        title: "极限制造",
                        code: "vspmk_fourth"
                    }],
                    value: 0
                }, {
                    title: "循环制造",
                    type: "checkbox",
                    value: !1
                }, {
                    title: "未爆停止",
                    type: "checkbox",
                    value: !1
                }]
            }, (function() {
                var e = this.form[0],
                    t = e.range[e.value],
                    n = this.form[1].value,
                    r = this.form[2].value;

                function u() {
                    return i.apply(this, arguments)
                }

                function i() {
                    return i = (0, a.default)(regeneratorRuntime.mark((function e() {
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.next = 4, s.task.send("vs_cmd vs_pearl", "佣兵宝珠");
                                case 4:
                                    return e.next = 6, s.task.sleep();
                                case 6:
                                    return e.next = 8, s.task.send("t:l vspl_mk", "制造宝珠");
                                case 8:
                                    return e.next = 10, o();
                                case 10:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), i.apply(this, arguments)
                }

                function o() {
                    return f.apply(this, arguments)
                }

                function f() {
                    return f = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var a, i, f, l, p, d;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.next = 4, s.task.send("t:l ".concat(t.code), ["[sure_ce]确定", "无法制作"]);
                                case 4:
                                    if (a = e.sent, i = a.index, f = a.text, 1 !== i) {
                                        e.next = 13;
                                        break
                                    }
                                    return e.next = 10, (0, c.hyjl)();
                                case 10:
                                    throw new Error(f);
                                case 13:
                                    return e.next = 15, s.task.sleep();
                                case 15:
                                    return e.next = 17, s.task.send("sure_ce", ["[yes]", "恭喜您获得"]);
                                case 17:
                                    if (l = e.sent, p = l.index, d = l.text, 0 !== p) {
                                        e.next = 34;
                                        break
                                    }
                                    return e.next = 23, s.task.sleep();
                                case 23:
                                    if (!r || !d.includes("未获得暴击")) {
                                        e.next = 28;
                                        break
                                    }
                                    return e.next = 26, s.task.send("no").sleep(1e3);
                                case 26:
                                    e.next = 32;
                                    break;
                                case 28:
                                    return e.next = 30, s.task.send("yes", "制造宝珠");
                                case 30:
                                    return e.next = 32, o();
                                case 32:
                                    e.next = 37;
                                    break;
                                case 34:
                                    if (!n) {
                                        e.next = 37;
                                        break
                                    }
                                    return e.next = 37, u();
                                case 37:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), f.apply(this, arguments)
                }
                return u()
            }));
        t.default = u
    },
    "40c3": function(e, t, n) {
        var r = n("6b4c"),
            a = n("5168")("toStringTag"),
            s = "Arguments" == r(function() {
                return arguments
            }()),
            c = function(e, t) {
                try {
                    return e[t]
                } catch (n) {}
            };
        e.exports = function(e) {
            var t, n, u;
            return void 0 === e ? "Undefined" : null === e ? "Null" : "string" == typeof(n = c(t = Object(e), a)) ? n : s ? r(t) : "Object" == (u = r(t)) && "function" == typeof t.callee ? "Arguments" : u
        }
    },
    4178: function(e, t, n) {
        var r, a, s, c = n("d864"),
            u = n("3024"),
            i = n("32fc"),
            o = n("1ec9"),
            f = n("e53d"),
            l = f.process,
            p = f.setImmediate,
            d = f.clearImmediate,
            x = f.MessageChannel,
            h = f.Dispatch,
            k = 0,
            v = {},
            m = "onreadystatechange",
            b = function() {
                var e = +this;
                if (v.hasOwnProperty(e)) {
                    var t = v[e];
                    delete v[e], t()
                }
            },
            g = function(e) {
                b.call(e.data)
            };
        p && d || (p = function(e) {
            var t = [],
                n = 1;
            while (arguments.length > n) t.push(arguments[n++]);
            return v[++k] = function() {
                u("function" == typeof e ? e : Function(e), t)
            }, r(k), k
        }, d = function(e) {
            delete v[e]
        }, "process" == n("6b4c")(l) ? r = function(e) {
            l.nextTick(c(b, e, 1))
        } : h && h.now ? r = function(e) {
            h.now(c(b, e, 1))
        } : x ? (a = new x, s = a.port2, a.port1.onmessage = g, r = c(s.postMessage, s, 1)) : f.addEventListener && "function" == typeof postMessage && !f.importScripts ? (r = function(e) {
            f.postMessage(e + "", "*")
        }, f.addEventListener("message", g, !1)) : r = m in o("script") ? function(e) {
            i.appendChild(o("script"))[m] = function() {
                i.removeChild(this), b.call(e)
            }
        } : function(e) {
            setTimeout(c(b, e, 1), 0)
        }), e.exports = {
            set: p,
            clear: d
        }
    },
    "41a0": function(e, t, n) {
        "use strict";
        var r = n("2aeb"),
            a = n("4630"),
            s = n("7f20"),
            c = {};
        n("32e9")(c, n("2b4c")("iterator"), (function() {
            return this
        })), e.exports = function(e, t, n) {
            e.prototype = r(c, {
                next: a(1, n)
            }), s(e, t + " Iterator")
        }
    },
    "43fc": function(e, t, n) {
        "use strict";
        var r = n("63b6"),
            a = n("656e"),
            s = n("4439");
        r(r.S, "Promise", {
            try: function(e) {
                var t = a.f(this),
                    n = s(e);
                return (n.e ? t.reject : t.resolve)(n.v), t.promise
            }
        })
    },
    4439: function(e, t) {
        e.exports = function(e) {
            try {
                return {
                    e: !1,
                    v: e()
                }
            } catch (t) {
                return {
                    e: !0,
                    v: t
                }
            }
        }
    },
    "454f": function(e, t, n) {
        n("46a7");
        var r = n("584a").Object;
        e.exports = function(e, t, n) {
            return r.defineProperty(e, t, n)
        }
    },
    "456d": function(e, t, n) {
        var r = n("4bf8"),
            a = n("0d58");
        n("5eda")("keys", (function() {
            return function(e) {
                return a(r(e))
            }
        }))
    },
    4588: function(e, t) {
        var n = Math.ceil,
            r = Math.floor;
        e.exports = function(e) {
            return isNaN(e = +e) ? 0 : (e > 0 ? r : n)(e)
        }
    },
    "45f2": function(e, t, n) {
        var r = n("d9f6").f,
            a = n("07e3"),
            s = n("5168")("toStringTag");
        e.exports = function(e, t, n) {
            e && !a(e = n ? e : e.prototype, s) && r(e, s, {
                configurable: !0,
                value: t
            })
        }
    },
    4630: function(e, t) {
        e.exports = function(e, t) {
            return {
                enumerable: !(1 & e),
                configurable: !(2 & e),
                writable: !(4 & e),
                value: t
            }
        }
    },
    "46a7": function(e, t, n) {
        var r = n("63b6");
        r(r.S + r.F * !n("8e60"), "Object", {
            defineProperty: n("d9f6").f
        })
    },
    "47ee": function(e, t, n) {
        var r = n("c3a1"),
            a = n("9aa9"),
            s = n("355d");
        e.exports = function(e) {
            var t = r(e),
                n = a.f;
            if (n) {
                var c, u = n(e),
                    i = s.f,
                    o = 0;
                while (u.length > o) i.call(e, c = u[o++]) && t.push(c)
            }
            return t
        }
    },
    "481b": function(e, t) {
        e.exports = {}
    },
    4917: function(e, t, n) {
        "use strict";
        var r = n("cb7c"),
            a = n("9def"),
            s = n("0390"),
            c = n("5f1b");
        n("214f")("match", 1, (function(e, t, n, u) {
            return [function(n) {
                var r = e(this),
                    a = void 0 == n ? void 0 : n[t];
                return void 0 !== a ? a.call(n, r) : new RegExp(n)[t](String(r))
            }, function(e) {
                var t = u(n, e, this);
                if (t.done) return t.value;
                var i = r(e),
                    o = String(this);
                if (!i.global) return c(i, o);
                var f = i.unicode;
                i.lastIndex = 0;
                var l, p = [],
                    d = 0;
                while (null !== (l = c(i, o))) {
                    var x = String(l[0]);
                    p[d] = x, "" === x && (i.lastIndex = s(o, a(i.lastIndex), f)), d++
                }
                return 0 === d ? null : p
            }]
        }))
    },
    4988: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("4917"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = new s.Task({
                title: "交许愿雪团",
                tags: ["change"]
            }, (function() {
                function e() {
                    return t.apply(this, arguments)
                }

                function t() {
                    return t = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var t, n, r, a;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.next = 4, s.task.move("sdj 101", "北极广场");
                                case 4:
                                    return e.next = 6, s.task.sleep();
                                case 6:
                                    return e.next = 8, s.task.send("npc 1000 1", ["你要提交多少", "你身上还没有"]);
                                case 8:
                                    if (t = e.sent, n = t.index, r = t.text, 1 !== n) {
                                        e.next = 13;
                                        break
                                    }
                                    throw new Error(r);
                                case 13:
                                    return a = r.match(/你有(\d+)个/)[1], e.next = 16, s.task.sleep();
                                case 16:
                                    return e.next = 18, s.task.send(a, ["你提交了", "你又不想提交"]);
                                case 18:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), t.apply(this, arguments)
                }
                return e()
            }));
        t.default = c
    },
    "4a86": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("3b2b"), n("c5f6"), n("4917");
        var a = r(n("768b"));
        n("96cf");
        var s = r(n("3b8d")),
            c = n("3f7e"),
            u = r(n("275e")),
            i = new c.Task({
                title: "佣兵训练",
                tags: ["event"]
            }, (0, s.default)(regeneratorRuntime.mark((function e() {
                var t, n, r, i, o;
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                            return o = function() {
                                return o = (0, s.default)(regeneratorRuntime.mark((function e(s) {
                                    var o, f, l, p, d, x, h, k, v, m, b, g, y, w, _, R, M, j, E, S, O, P, A, T, B, N, I, z;
                                    return regeneratorRuntime.wrap((function(e) {
                                        while (1) switch (e.prev = e.next) {
                                            case 0:
                                                if (s) {
                                                    e.next = 24;
                                                    break
                                                }
                                                return e.next = 3, c.task.sleep();
                                            case 3:
                                                return e.next = 5, c.task.move("ybgh 100", "佣兵工会");
                                            case 5:
                                                return e.next = 7, c.task.sleep();
                                            case 7:
                                                return e.next = 9, (0, c.findItem)("战斗叫出", "vs_cmd vs_view", 1);
                                            case 9:
                                                return o = e.sent, f = o.title.match(/\d+/), l = (0, a.default)(f, 1), p = l[0], console.log(p), e.next = 14, c.task.sleep();
                                            case 14:
                                                return e.next = 16, c.task.cancel();
                                            case 16:
                                                return e.next = 18, c.task.sleep();
                                            case 18:
                                                return n = 10 * Math.floor((Number(p) - 1) / 10) + 1, e.next = 21, (0, c.findNpcItem)({
                                                    code: t
                                                }, "".concat(n, "-"));
                                            case 21:
                                                d = e.sent, x = d.code, r = x;
                                            case 24:
                                                return e.next = 26, c.task.sleep();
                                            case 26:
                                                return e.next = 28, c.task.send("".concat(t, " ").concat(r), ["[~1]", "需要击败", "不能完成", "明天再来"]);
                                            case 28:
                                                if (h = e.sent, k = h.index, v = h.text, 0 !== k) {
                                                    e.next = 46;
                                                    break
                                                }
                                                return e.next = 34, c.task.sleep();
                                            case 34:
                                                return e.next = 36, c.task.send("1", ["mps]", "获得"]);
                                            case 36:
                                                if (m = e.sent, b = m.index, 0 !== b) {
                                                    e.next = 43;
                                                    break
                                                }
                                                return e.next = 41, c.task.sleep();
                                            case 41:
                                                return e.next = 43, c.task.cancel();
                                            case 43:
                                                return e.next = 45, i(0 === b);
                                            case 45:
                                                return e.abrupt("return", e.sent);
                                            case 46:
                                                if (1 !== k) {
                                                    e.next = 88;
                                                    break
                                                }
                                                return e.next = 49, c.task.sleep();
                                            case 49:
                                                return e.next = 51, (0, c.findItem)("佣兵训练（".concat(n, "-"), "9 1", 1);
                                            case 51:
                                                return g = e.sent, y = g.code, e.next = 55, c.task.sleep();
                                            case 55:
                                                w = v.match(/(\d+)个(.+?)，已击败(\d+)个/g), j = 0;
                                            case 57:
                                                if (!(j < w.length)) {
                                                    e.next = 68;
                                                    break
                                                }
                                                if (E = w[j], S = E.match(/(\d+)个(.+?)，已击败(\d+)个/), O = (0, a.default)(S, 4), O[0], P = O[1], A = O[2], T = O[3], !(Number(T) < Number(P))) {
                                                    e.next = 65;
                                                    break
                                                }
                                                return R = P, M = T, _ = A, e.abrupt("break", 68);
                                            case 65:
                                                j++, e.next = 57;
                                                break;
                                            case 68:
                                                return e.next = 70, (0, c.findItem)(_, "".concat(y, " m mps"), 1);
                                            case 70:
                                                return B = e.sent, N = B.code, console.log(N), e.next = 75, c.task.send(N, "<mp>");
                                            case 75:
                                                return I = e.sent, z = I.text, e.next = 79, (0, c.moveMapTarget)(z);
                                            case 79:
                                                return u.default.reset(), u.default.set({
                                                    code: "kill",
                                                    find: new RegExp("需要击败.+?：".concat(R, " \\/ ").concat(R)),
                                                    killMax: R - M
                                                }), e.next = 83, c.task.sleep();
                                            case 83:
                                                return e.next = 85, u.default.start(!1, !1);
                                            case 85:
                                                return e.next = 87, i();
                                            case 87:
                                                return e.abrupt("return", e.sent);
                                            case 88:
                                            case "end":
                                                return e.stop()
                                        }
                                    }), e)
                                }))), o.apply(this, arguments)
                            }, i = function(e) {
                                return o.apply(this, arguments)
                            }, t = "npc 1000", e.next = 5, i();
                        case 5:
                        case "end":
                            return e.stop()
                    }
                }), e)
            }))));
        t.default = i
    },
    "4ae8": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = new s.Task({
                title: "夜梦仙境兑换",
                tags: ["change"],
                form: [{
                    title: "物品",
                    type: "picker",
                    range: ["活力饮料", "精灵背包"],
                    value: 1
                }]
            }, (function() {
                var e = this.form[0].value,
                    t = [4, 7];

                function n() {
                    return r.apply(this, arguments)
                }

                function r() {
                    return r = (0, a.default)(regeneratorRuntime.mark((function r() {
                        var a, c, u, i, o, f, l, p;
                        return regeneratorRuntime.wrap((function(r) {
                            while (1) switch (r.prev = r.next) {
                                case 0:
                                    return r.next = 2, s.task.move("mszy 113", "下地界");
                                case 2:
                                    return r.next = 4, s.task.sleep();
                                case 4:
                                    return r.next = 6, s.task.send("npc 1003 ~q".concat(t[e]), ["[~1]", "请明天再来吧"]);
                                case 6:
                                    if (a = r.sent, c = a.index, u = a.text, 1 !== c) {
                                        r.next = 13;
                                        break
                                    }
                                    throw new Error(u);
                                case 13:
                                    return r.next = 15, s.task.send("1", ["mps]", "你得到", "需要"]);
                                case 15:
                                    if (i = r.sent, o = i.index, f = i.text, 0 !== o) {
                                        r.next = 27;
                                        break
                                    }
                                    return r.next = 21, s.task.sleep();
                                case 21:
                                    return r.next = 23, s.task.send("cl", "cnt");
                                case 23:
                                    return r.next = 25, n();
                                case 25:
                                    r.next = 29;
                                    break;
                                case 27:
                                    if (2 !== o) {
                                        r.next = 29;
                                        break
                                    }
                                    throw new Error(f);
                                case 29:
                                    if (1 !== e) {
                                        r.next = 40;
                                        break
                                    }
                                    return r.next = 32, s.task.sleep();
                                case 32:
                                    return r.next = 34, (0, s.findItem)("高仿精灵腰包");
                                case 34:
                                    return l = r.sent, p = l.code, r.next = 38, s.task.sleep();
                                case 38:
                                    return r.next = 40, s.task.send("".concat(p, " 0"), ["你使用了精灵腰包", "不能再增加了"]);
                                case 40:
                                case "end":
                                    return r.stop()
                            }
                        }), r)
                    }))), r.apply(this, arguments)
                }
                return n()
            }));
        t.default = c
    },
    "4b28": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, t.getTaskMap = o, n("c5f6"), n("4917"), n("a481"), n("ac6a"), n("3b2b"), n("f559"), n("6762"), n("2fdb");
        var a = r(n("75fc"));
        n("7514"), n("96cf");
        var s = r(n("3b8d")),
            c = n("3f7e"),
            u = r(n("275e")),
            i = 3e3;

        function o(e, t) {
            return f.apply(this, arguments)
        }

        function f() {
            return f = (0, s.default)(regeneratorRuntime.mark((function e(t, n) {
                var r, a, s, u, i, o, f, l, p, d, x;
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                            return e.next = 2, c.task.sleep();
                        case 2:
                            return e.next = 4, c.task.send("".concat(t.code, " a"), ["mps]", "主线"]);
                        case 4:
                            if (r = e.sent, a = r.text, s = r.index, 0 === s) {
                                e.next = 9;
                                break
                            }
                            throw new Error(a);
                        case 9:
                            return u = (0, c.parseMsg)(a).data, i = u.list, o = u.text, f = [], p = ["机械精灵", "离子团四天王"], d = i.find((function(e) {
                                var t = (0, c.clearText)(e.title).replace(/^\S+[:：]/, "").replace(/^消灭/, ""),
                                    r = (0, c.clearText)(o);
                                if (console.log(t, r), p.includes(t) || o.includes("击败黑塔娜") || o.includes("击败娜利亚") || o.includes("击败爆炎之卡拉斯")) {
                                    var a = r.match(/([\u4e00-\u9fa5.]+)1个 已击败0个/);
                                    return a && (l = {
                                        title: a[1],
                                        num: 1
                                    }), !!a
                                }
                                var s = ["查看地图", "预选赛", "半决赛", "决赛", "欣欣草", "咪鼠", "小影魂", "心播兽", "暴走兔", "雪兽", "雪狼芬里", "水精尼瑞斯", "小地精", "冰胡子", "猎魔人", "传讯员"],
                                    u = s.includes(t) ? "" : t,
                                    i = Object.assign({
                                        "红色拼图": "红色奇妙拼图",
                                        "复活兽": "怨念积压石",
                                        "阿西": "破损的信件",
                                        "虎峰": "虎蜂",
                                        "魔法师": "迷魂药丸"
                                    }, n);
                                r.includes("各收集15份土样") && (i["暴走兔"] = "夜影土样", i["心播兽"] = "日光土样"), r.includes("安魂花，再去背风雪原") && (i["雪兽"] = "安魂花", i["小地精"] = "极寒冰露"), r.includes("六叶莴苣；再去冰封谷地") && (i["冰胡子"] = "六叶莴苣", i["精灵莱西"] = "茹草果"), r.includes("钼合金，再去冰霄峭壁") && (i["小地精"] = "钼合金", i["黑色安妮"] = "钛合金"), t in i && (u = i[t]);
                                var d = "[份块个张瓶回得串颗根]",
                                    x = "(?:[后给，。并还回]|之后|交给)",
                                    h = r.match(new RegExp("[找的从在]".concat(u, "[身收手那讨].+?").concat(d, "(.+?)").concat(x))) || r.match(new RegExp("[杀败]".concat(u, ".+?").concat(d, "(.+?)").concat(x)));
                                h && (h = h[1].replace(new RegExp("\\d+".concat(d)), ""));
                                var k, v = r.match(new RegExp("".concat(h, "\\s*\\(\\s*(?:现有)?\\s*(\\d+)\\s*/\\s*(?:需要)?\\s*(\\d+)\\s*\\)"))) || r.match(new RegExp("".concat(u, "\\s*\\(\\s*现有\\s*(\\d+)\\s*/\\s*需要\\s*(\\d+)\\s*\\)"))),
                                    m = v && Number(v[1]) < Number(v[2]);
                                if (v && Number(v[1]) >= Number(v[2]) && f.push(e), m) k = Number(v[2]);
                                else {
                                    var b = new RegExp("".concat(u, "(\\d+)个\\s*已击败(\\d+)个")),
                                        g = r.match(b);
                                    m = g && Number(g[2]) < Number(g[1]), k = m ? Number(g[1]) : k, g && Number(g[2]) >= Number(g[1]) && f.push(e)
                                }
                                return m && (l = {
                                    title: t,
                                    num: k
                                }), m
                            })), x = i.filter((function(e) {
                                var t = (0, c.clearText)(e.title);
                                return !f.includes(e) && !p.includes(t) && !t.startsWith("增值服务") && "关闭" !== t && "取消" !== t
                            })), e.abrupt("return", {
                                text: o,
                                target: d || x[x.length - 1] || i[0],
                                need: l
                            });
                        case 15:
                        case "end":
                            return e.stop()
                    }
                }), e)
            }))), f.apply(this, arguments)
        }
        var l = new c.Task({
            title: "主线任务",
            tags: ["other"]
        }, (function() {
            var e = ["闪光神玉", "精灵神玉", "精灵王项链", "妙树神玉", "绿宝石锦盒"];

            function t(e) {
                return n.apply(this, arguments)
            }

            function n() {
                return n = (0, s.default)(regeneratorRuntime.mark((function e(t) {
                    var n, r, s, u, o, f, l;
                    return regeneratorRuntime.wrap((function(e) {
                        while (1) switch (e.prev = e.next) {
                            case 0:
                                return e.next = 2, c.task.sleep(i);
                            case 2:
                                return e.next = 4, (0, c.getMainDataAsync)();
                            case 4:
                                if (n = e.sent.map.npc, s = (0, a.default)(n).reverse().find((function(e) {
                                        var n = e.list;
                                        return n.find((function(e) {
                                            var n = e.title,
                                                a = e.code;
                                            return (t ? (0, c.clearText)(n).includes(t) : (0, c.clearText)(n).startsWith("主线")) && (r = a)
                                        }))
                                    })), !s) {
                                    e.next = 32;
                                    break
                                }
                                return e.next = 9, c.task.sleep();
                            case 9:
                                return e.next = 11, c.task.send("".concat(s.code, " ").concat(r), ["[~1]", "[cl]", "需要", "<r>cnt"]);
                            case 11:
                                if (u = e.sent, o = u.index, 0 !== o) {
                                    e.next = 27;
                                    break
                                }
                                return e.next = 16, c.task.sleep();
                            case 16:
                                return e.next = 18, c.task.send("1", ["[cl]", "cnt"]);
                            case 18:
                                if (f = e.sent, l = f.index, 0 !== l) {
                                    e.next = 25;
                                    break
                                }
                                return e.next = 23, c.task.sleep();
                            case 23:
                                return e.next = 25, c.task.send("cl", "cnt");
                            case 25:
                                e.next = 32;
                                break;
                            case 27:
                                if (1 !== o) {
                                    e.next = 32;
                                    break
                                }
                                return e.next = 30, c.task.sleep();
                            case 30:
                                return e.next = 32, c.task.send("cl", "cnt");
                            case 32:
                            case "end":
                                return e.stop()
                        }
                    }), e)
                }))), n.apply(this, arguments)
            }

            function r() {
                return f.apply(this, arguments)
            }

            function f() {
                return f = (0, s.default)(regeneratorRuntime.mark((function e() {
                    var t, n, r, a, o, f, p;
                    return regeneratorRuntime.wrap((function(e) {
                        while (1) switch (e.prev = e.next) {
                            case 0:
                                return a = function() {
                                    return a = (0, s.default)(regeneratorRuntime.mark((function e(t) {
                                        var n, a;
                                        return regeneratorRuntime.wrap((function(e) {
                                            while (1) switch (e.prev = e.next) {
                                                case 0:
                                                    return e.next = 2, (0, c.getMainDataAsync)();
                                                case 2:
                                                    return n = e.sent.map.title, e.next = 5, c.task.sleep();
                                                case 5:
                                                    return e.next = 7, c.task.send(t, ["<title"]);
                                                case 7:
                                                    return e.next = 9, (0, c.getMainDataAsync)();
                                                case 9:
                                                    a = e.sent.map.title, n === a && r(t);
                                                case 11:
                                                case "end":
                                                    return e.stop()
                                            }
                                        }), e)
                                    }))), a.apply(this, arguments)
                                }, r = function(e) {
                                    return a.apply(this, arguments)
                                }, n = function() {
                                    return n = (0, s.default)(regeneratorRuntime.mark((function e() {
                                        var n, r, a, s, u, o, f;
                                        return regeneratorRuntime.wrap((function(e) {
                                            while (1) switch (e.prev = e.next) {
                                                case 0:
                                                    n = 0;
                                                case 1:
                                                    if (!(n < 9)) {
                                                        e.next = 45;
                                                        break
                                                    }
                                                    return e.prev = 2, r = "npc 100".concat(n), e.next = 6, c.task.sleep();
                                                case 6:
                                                    return e.next = 8, (0, c.findNpcItem)({
                                                        code: r
                                                    }, "主线");
                                                case 8:
                                                    if (a = e.sent, !a) {
                                                        e.next = 38;
                                                        break
                                                    }
                                                    return e.next = 12, c.task.sleep();
                                                case 12:
                                                    return e.next = 14, c.task.send("".concat(r, " ").concat(a.code), ["[~1]", "原野怪区", "<pmg", "<r>cnt"]);
                                                case 14:
                                                    if (s = e.sent, u = s.index, 0 !== u) {
                                                        e.next = 34;
                                                        break
                                                    }
                                                    return e.next = 19, c.task.sleep();
                                                case 19:
                                                    return e.next = 21, c.task.send("1", ["mps]", "原野怪区", "<pmg"]);
                                                case 21:
                                                    if (o = e.sent, f = o.index, console.log("index:", f), 0 !== f) {
                                                        e.next = 30;
                                                        break
                                                    }
                                                    return e.next = 27, c.task.cancel(!0);
                                                case 27:
                                                    return e.abrupt("return", !0);
                                                case 30:
                                                    if (1 !== f) {
                                                        e.next = 34;
                                                        break
                                                    }
                                                    return e.next = 33, c.task.sleep(i);
                                                case 33:
                                                    return e.abrupt("return");
                                                case 34:
                                                    return e.next = 36, c.task.sleep(i);
                                                case 36:
                                                    return e.next = 38, t();
                                                case 38:
                                                    e.next = 42;
                                                    break;
                                                case 40:
                                                    e.prev = 40, e.t0 = e["catch"](2);
                                                case 42:
                                                    n++, e.next = 1;
                                                    break;
                                                case 45:
                                                case "end":
                                                    return e.stop()
                                            }
                                        }), e, null, [
                                            [2, 40]
                                        ])
                                    }))), n.apply(this, arguments)
                                }, t = function() {
                                    return n.apply(this, arguments)
                                }, o = ["t l 8001", "t l 12001", "t l 8001", "t l 8001", "t l 6001", "t l 6001", "t l 5001"], e.next = 7, c.task.sleep();
                            case 7:
                                return e.next = 9, c.task.move("sgz 100", "时光小屋");
                            case 9:
                                f = 0;
                            case 10:
                                if (!(f < o.length)) {
                                    e.next = 30;
                                    break
                                }
                                return e.next = 13, r(o[f]);
                            case 13:
                                if (5 !== f) {
                                    e.next = 22;
                                    break
                                }
                                return u.default.reset(), u.default.set({
                                    code: "kill",
                                    killMax: 5
                                }), e.next = 18, c.task.sleep();
                            case 18:
                                return e.next = 20, u.default.start(!1, !1);
                            case 20:
                                e.next = 27;
                                break;
                            case 22:
                                return e.next = 24, t();
                            case 24:
                                if (p = e.sent, !p) {
                                    e.next = 27;
                                    break
                                }
                                return e.abrupt("break", 30);
                            case 27:
                                f++, e.next = 10;
                                break;
                            case 30:
                                return e.next = 32, l();
                            case 32:
                            case "end":
                                return e.stop()
                        }
                    }), e)
                }))), f.apply(this, arguments)
            }

            function l() {
                return p.apply(this, arguments)
            }

            function p() {
                return p = (0, s.default)(regeneratorRuntime.mark((function n() {
                    var a, s, f, p, d, x, h, k, v, m, b, g, y, w, _, R, M, j, E, S, O, P, A, T, B, N, I, z, C, D, L;
                    return regeneratorRuntime.wrap((function(n) {
                        while (1) switch (n.prev = n.next) {
                            case 0:
                                return n.next = 2, c.task.sleep();
                            case 2:
                                return n.next = 4, c.task.send("9 1", ["查看任务", "<r>cnt", "没有正在做"]);
                            case 4:
                                if (a = n.sent, s = a.index, f = a.text, 1 !== s) {
                                    n.next = 11;
                                    break
                                }
                                return n.next = 10, l();
                            case 10:
                                return n.abrupt("return");
                            case 11:
                                return 0 === s && (d = (0, c.parseMsg)(f).data.list, p = d.find((function(e) {
                                    var t = e.title;
                                    return (0, c.clearText)(t).startsWith("主线") && !(0, c.clearText)(t).includes("主线开启转生之旅")
                                }))), n.prev = 12, n.next = 15, o(p);
                            case 15:
                                v = n.sent, x = v.text, h = v.target, k = v.need, n.next = 30;
                                break;
                            case 21:
                                return n.prev = 21, n.t0 = n["catch"](12), n.next = 25, c.task.sleep();
                            case 25:
                                return n.next = 27, c.task.cancel(!0);
                            case 27:
                                return n.next = 29, r();
                            case 29:
                                return n.abrupt("return", n.sent);
                            case 30:
                                return n.next = 32, c.task.send(h.code, ["<mp>", "不用飞啦"]);
                            case 32:
                                if (m = n.sent, b = m.index, g = m.text, 0 !== b) {
                                    n.next = 41;
                                    break
                                }
                                return y = (0, c.parseMsg)(g).data, w = y.code, _ = y.target, n.next = 39, c.task.sleep();
                            case 39:
                                return n.next = 41, c.task.move("".concat(w, " ").concat(_.code), _.title);
                            case 41:
                                if (!x.includes("得到蕾西拉姆的认可之前")) {
                                    n.next = 43;
                                    break
                                }
                                return n.abrupt("return");
                            case 43:
                                if (!k) {
                                    n.next = 144;
                                    break
                                }
                                if (j = {
                                        "宝石戒指": "检戒指",
                                        "火枪": "取下火枪"
                                    }, E = k.title, !(E in j)) {
                                    n.next = 52;
                                    break
                                }
                                return n.next = 49, t(j[E]);
                            case 49:
                                return n.next = 51, l();
                            case 51:
                                return n.abrupt("return");
                            case 52:
                                if (!x.includes("从企鹅老板那里买一瓶料酒")) {
                                    n.next = 68;
                                    break
                                }
                                return n.next = 55, c.task.sleep();
                            case 55:
                                return n.next = 57, c.task.send("npc 1001 j", "<menu");
                            case 57:
                                return n.next = 59, c.task.sleep();
                            case 59:
                                return n.next = 61, c.task.send("1 2", "买下了");
                            case 61:
                                return n.next = 63, c.task.sleep();
                            case 63:
                                return n.next = 65, c.task.cancel(!0);
                            case 65:
                                return n.next = 67, l();
                            case 67:
                                return n.abrupt("return");
                            case 68:
                                if (!x.includes("从美眉小店主那里买一个玫瑰玻璃罐")) {
                                    n.next = 84;
                                    break
                                }
                                return n.next = 71, c.task.sleep();
                            case 71:
                                return n.next = 73, c.task.send("npc 1000 j", "<menu");
                            case 73:
                                return n.next = 75, c.task.sleep();
                            case 75:
                                return n.next = 77, c.task.send("1 2", "买下了");
                            case 77:
                                return n.next = 79, c.task.sleep();
                            case 79:
                                return n.next = 81, c.task.cancel(!0);
                            case 81:
                                return n.next = 83, l();
                            case 83:
                                return n.abrupt("return");
                            case 84:
                                if (S = e.find((function(e) {
                                        return new RegExp("".concat(e, "\\s*\\(\\s*现有\\s*0")).test(x)
                                    })), !S) {
                                    n.next = 107;
                                    break
                                }
                                return n.next = 88, c.task.sleep();
                            case 88:
                                return n.next = 90, c.task.move("sgpy 102", "商业区");
                            case 90:
                                return n.next = 92, c.task.sleep();
                            case 92:
                                return n.next = 94, (0, c.findItem)(S, "npc 1000 j", 1);
                            case 94:
                                return O = n.sent, P = O.code, n.next = 98, c.task.sleep();
                            case 98:
                                return n.next = 100, c.task.send("".concat(P, " 2"), "买下了");
                            case 100:
                                return n.next = 102, c.task.sleep();
                            case 102:
                                return n.next = 104, c.task.cancel(!0);
                            case 104:
                                return n.next = 106, l();
                            case 106:
                                return n.abrupt("return");
                            case 107:
                                if ("预选赛" !== E && "半决赛" !== E && "决赛" !== E) {
                                    n.next = 112;
                                    break
                                }
                                return n.next = 110, c.task.sleep();
                            case 110:
                                return n.next = 112, c.task.send("t l 5001", "<title>");
                            case 112:
                                if (A = k, T = A.num, B = ["复活兽"], !B.includes(E) && 1 !== T) {
                                    n.next = 135;
                                    break
                                }
                                return n.next = 117, c.task.sleep();
                            case 117:
                                return n.next = 119, c.task.send("5", "<menu");
                            case 119:
                                if (N = n.sent, I = N.text, z = (0, c.parseMsg)(I).data.list, z.forEach((function(e) {
                                        var t = e.title,
                                            n = e.code,
                                            r = e.list,
                                            a = void 0 === r ? [] : r,
                                            s = a.find((function(e) {
                                                var t = e.code,
                                                    n = e.title;
                                                return "h" === t || n.includes("战斗挑战")
                                            }));
                                        (0, c.clearText)(t) === E && s && (R = "".concat(n, " ").concat(s.code))
                                    })), R) {
                                    n.next = 134;
                                    break
                                }
                                return n.next = 126, c.task.sleep();
                            case 126:
                                return n.next = 128, c.task.send("cl", "cnt");
                            case 128:
                                return n.next = 130, (0, c.getMainDataAsync)();
                            case 130:
                                C = n.sent.map, D = C.npc, L = C.title, "后花园" === L ? R = D.filter((function(e) {
                                    var t = e.code;
                                    return "npc 1000" !== t
                                })).map((function(e) {
                                    var t = e.code;
                                    return "".concat(t, " h")
                                })) : D.forEach((function(e) {
                                    e.title;
                                    var t = e.code,
                                        n = e.list,
                                        r = void 0 === n ? [] : n,
                                        a = r.find((function(e) {
                                            var t = e.code,
                                                n = e.title;
                                            return "h" === t || n.includes("战斗挑战")
                                        }));
                                    a && (R = "".concat(t, " ").concat(a.code))
                                }));
                            case 134:
                                M = 1;
                            case 135:
                                return u.default.reset(), u.default.set({
                                    code: R || "kill",
                                    find: new RegExp("需要击败.+?：".concat(T, " \\/ ").concat(T, "|需要: ").concat(T, " \\/ ").concat(T)),
                                    killMax: M
                                }), n.next = 139, c.task.sleep();
                            case 139:
                                return n.next = 141, u.default.start(!1, !1);
                            case 141:
                                return n.next = 143, l();
                            case 143:
                                return n.abrupt("return");
                            case 144:
                                if (!(x.includes("传送门去精灵迷宫") || x.includes("从那里前往闪光平原") || x.includes("传送门来到绿宝石城") || x.includes("传送阵可来到蓝宝石"))) {
                                    n.next = 158;
                                    break
                                }
                                return n.next = 147, c.task.sleep();
                            case 147:
                                return n.next = 149, c.task.send("t l 5001", "<title>");
                            case 149:
                                if (!x.includes("传送门来到绿宝石城")) {
                                    n.next = 158;
                                    break
                                }
                                return n.next = 152, c.task.sleep(i);
                            case 152:
                                return n.next = 154, c.task.send("t l 5001", "<title>");
                            case 154:
                                return n.next = 156, c.task.sleep();
                            case 156:
                                return n.next = 158, c.task.send("t l 5001", "<title>");
                            case 158:
                                if (!x.includes("从空艇台可到达火焰之地")) {
                                    n.next = 163;
                                    break
                                }
                                return n.next = 161, c.task.sleep();
                            case 161:
                                return n.next = 163, c.task.send("t l 6001", "<title>");
                            case 163:
                                if (!x.includes("寻找贫苦民居里面的密室")) {
                                    n.next = 168;
                                    break
                                }
                                return n.next = 166, c.task.sleep();
                            case 166:
                                return n.next = 168, c.task.send("t l 6001", "<title>");
                            case 168:
                                if (!x.includes("前往蓝宝石王宫找")) {
                                    n.next = 173;
                                    break
                                }
                                return n.next = 171, c.task.sleep();
                            case 171:
                                return n.next = 173, c.task.move("blue 107", "蓝宝石王宫");
                            case 173:
                                if (!x.includes("然后回去向长老汇报")) {
                                    n.next = 178;
                                    break
                                }
                                return n.next = 176, c.task.sleep(i);
                            case 176:
                                return n.next = 178, c.task.move("ywzd 501", "长老之家");
                            case 178:
                                return n.next = 180, t();
                            case 180:
                                return n.next = 182, l();
                            case 182:
                            case "end":
                                return n.stop()
                        }
                    }), n, null, [
                        [12, 21]
                    ])
                }))), p.apply(this, arguments)
            }
            return l()
        }));
        t.default = l
    },
    "4ba9": function(e, t, n) {
        (function(t, r, a) {
            e.exports = r(n("21bf"), n("38ba"))
        })(0, (function(e) {
            return e.mode.OFB = function() {
                var t = e.lib.BlockCipherMode.extend(),
                    n = t.Encryptor = t.extend({
                        processBlock: function(e, t) {
                            var n = this._cipher,
                                r = n.blockSize,
                                a = this._iv,
                                s = this._keystream;
                            a && (s = this._keystream = a.slice(0), this._iv = void 0), n.encryptBlock(s, 0);
                            for (var c = 0; c < r; c++) e[t + c] ^= s[c]
                        }
                    });
                return t.Decryptor = n, t
            }(), e.mode.OFB
        }))
    },
    "4bf8": function(e, t, n) {
        var r = n("be13");
        e.exports = function(e) {
            return Object(r(e))
        }
    },
    "4c95": function(e, t, n) {
        "use strict";
        var r = n("e53d"),
            a = n("584a"),
            s = n("d9f6"),
            c = n("8e60"),
            u = n("5168")("species");
        e.exports = function(e) {
            var t = "function" == typeof a[e] ? a[e] : r[e];
            c && t && !t[u] && s.f(t, u, {
                configurable: !0,
                get: function() {
                    return this
                }
            })
        }
    },
    "4ea4": function(e, t) {
        function n(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }
        e.exports = n, e.exports.__esModule = !0, e.exports["default"] = e.exports
    },
    "4ee1": function(e, t, n) {
        var r = n("5168")("iterator"),
            a = !1;
        try {
            var s = [7][r]();
            s["return"] = function() {
                a = !0
            }, Array.from(s, (function() {
                throw 2
            }))
        } catch (c) {}
        e.exports = function(e, t) {
            if (!t && !a) return !1;
            var n = !1;
            try {
                var s = [7],
                    u = s[r]();
                u.next = function() {
                    return {
                        done: n = !0
                    }
                }, s[r] = function() {
                    return u
                }, e(s)
            } catch (c) {}
            return n
        }
    },
    "50d6": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("c5f6"), n("6b54"), n("4917"), n("28a5"), n("6762"), n("2fdb"), n("3b2b"), n("7514"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = r(n("275e")),
            u = ["高级", "终级"],
            i = new s.Task({
                title: "财富花瓣占卜",
                tags: ["event"],
                form: [{
                    title: "类型",
                    type: "picker",
                    range: u,
                    value: 1
                }]
            }, (function() {
                var e = this.form[0].value;

                function t() {
                    return n.apply(this, arguments)
                }

                function n() {
                    return n = (0, a.default)(regeneratorRuntime.mark((function t() {
                        var n, r, a;
                        return regeneratorRuntime.wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, s.task.sleep();
                                case 2:
                                    return t.next = 4, s.task.send("npc 1000 ".concat(3 + e), ["你要消耗"]);
                                case 4:
                                    return t.next = 6, s.task.sleep();
                                case 6:
                                    return t.next = 8, s.task.send("yes", ["恭喜你获得了", "数量不够"]);
                                case 8:
                                    if (n = t.sent, r = n.index, a = n.text, 1 !== r) {
                                        t.next = 13;
                                        break
                                    }
                                    throw new Error(a);
                                case 13:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    }))), n.apply(this, arguments)
                }

                function r() {
                    return i.apply(this, arguments)
                }

                function i() {
                    return i = (0, a.default)(regeneratorRuntime.mark((function n() {
                        var a, i, o, f, l, p, d, x, h, k, v, m, b, g, y, w, _, R, M, j, E, S, O, P, A, T, B, N, I, z, C, D;
                        return regeneratorRuntime.wrap((function(n) {
                            while (1) switch (n.prev = n.next) {
                                case 0:
                                    return n.next = 2, s.task.sleep();
                                case 2:
                                    return n.next = 4, s.task.move("msgd 103", "枯萎之地");
                                case 4:
                                    return n.next = 6, (0, s.getMainDataAsync)();
                                case 6:
                                    if (a = n.sent.map.npc, i = a.find((function(e) {
                                            var t = e.code;
                                            return "npc 1000" === t
                                        })), o = i.list, f = o.find((function(t) {
                                            var n = t.title;
                                            return new RegExp("".concat(u[e][0], "[级极]")).test(n) && n.includes("（财富*")
                                        })), f) {
                                        n.next = 19;
                                        break
                                    }
                                    return n.next = 12, t();
                                case 12:
                                    return n.next = 14, s.task.sleep();
                                case 14:
                                    return n.next = 16, (0, s.getMainDataAsync)();
                                case 16:
                                    a = n.sent.map.npc, l = a.find((function(e) {
                                        var t = e.code;
                                        return "npc 1000" === t
                                    })), p = l.list, f = p.find((function(t) {
                                        var n = t.title;
                                        return new RegExp("".concat(u[e][0], "[级极]")).test(n) && n.includes("（财富*")
                                    }));
                                case 19:
                                    return n.next = 21, s.task.sleep();
                                case 21:
                                    return n.next = 23, s.task.send("npc 1000 ".concat(f.code), ["[~1]", "需要"]);
                                case 23:
                                    if (x = n.sent, h = x.index, k = x.text, console.log("text1:", k), 0 !== h) {
                                        n.next = 44;
                                        break
                                    }
                                    return n.next = 30, s.task.sleep();
                                case 30:
                                    return n.next = 32, s.task.send("1", ["[~0 mps]", "m mps]", "得到了", "需要"]);
                                case 32:
                                    if (v = n.sent, m = v.index, b = v.text, 1 !== m) {
                                        n.next = 40;
                                        break
                                    }
                                    return n.next = 38, s.task.sleep();
                                case 38:
                                    return n.next = 40, s.task.send("cl", "cnt");
                                case 40:
                                    d = m, k = b, n.next = 45;
                                    break;
                                case 44:
                                    d = 3;
                                case 45:
                                    if (g = /一品\.闪光剑/.test(k), y = /二品\.闪光剑/.test(k), w = /锻造宝石/.test(k), _ = /一品\.闪光[革|木|金属]/.test(k), R = /高能镜/.test(k), M = /神秘精灵宝箱/.test(k), j = /精灵王徽章/.test(k), 2 !== d) {
                                        n.next = 58;
                                        break
                                    }
                                    return n.next = 55, r();
                                case 55:
                                    return n.abrupt("return", n.sent);
                                case 58:
                                    if (3 !== d && !j) {
                                        n.next = 169;
                                        break
                                    }
                                    return n.next = 61, s.task.sleep();
                                case 61:
                                    if (!(g || y || w || _ || R || M || j)) {
                                        n.next = 156;
                                        break
                                    }
                                    if (!g && !y) {
                                        n.next = 77;
                                        break
                                    }
                                    return n.next = 65, s.task.move("sgz 103", "光芒市场");
                                case 65:
                                    return n.next = 67, s.task.sleep();
                                case 67:
                                    return n.next = 69, s.task.send("npc 1001 2", "闪光剑");
                                case 69:
                                    return n.next = 71, s.task.sleep();
                                case 71:
                                    return n.next = 73, s.task.send("".concat(g ? 1 : 2, " 2"), "买下了");
                                case 73:
                                    return n.next = 75, s.task.sleep();
                                case 75:
                                    return n.next = 77, s.task.send("cnt", "cnt");
                                case 77:
                                    if (!w) {
                                        n.next = 80;
                                        break
                                    }
                                    return n.next = 80, (0, s.buy)("锻造宝石", 10);
                                case 80:
                                    if (!_) {
                                        n.next = 115;
                                        break
                                    }
                                    return n.next = 83, s.task.move("sgz 103", "光芒市场");
                                case 83:
                                    return n.next = 85, s.task.sleep();
                                case 85:
                                    return n.next = 87, s.task.send("npc 1000 0", "闪光");
                                case 87:
                                    return n.next = 89, s.task.sleep();
                                case 89:
                                    return n.next = 91, s.task.send("1 3", "<input");
                                case 91:
                                    return n.next = 93, s.task.sleep();
                                case 93:
                                    return n.next = 95, s.task.send("10", "买下了");
                                case 95:
                                    return n.next = 97, s.task.sleep();
                                case 97:
                                    return n.next = 99, s.task.send("2 3", "<input");
                                case 99:
                                    return n.next = 101, s.task.sleep();
                                case 101:
                                    return n.next = 103, s.task.send("10", "买下了");
                                case 103:
                                    return n.next = 105, s.task.sleep();
                                case 105:
                                    return n.next = 107, s.task.send("3 3", "<input");
                                case 107:
                                    return n.next = 109, s.task.sleep();
                                case 109:
                                    return n.next = 111, s.task.send("10", "买下了");
                                case 111:
                                    return n.next = 113, s.task.sleep();
                                case 113:
                                    return n.next = 115, s.task.send("cnt", "cnt");
                                case 115:
                                    if (!M) {
                                        n.next = 124;
                                        break
                                    }
                                    return n.prev = 116, n.next = 119, (0, s.buy)("神秘精灵宝箱", 10);
                                case 119:
                                    M = null, n.next = 124;
                                    break;
                                case 122:
                                    n.prev = 122, n.t0 = n["catch"](116);
                                case 124:
                                    if (!(R || M || j)) {
                                        n.next = 153;
                                        break
                                    }
                                    if (0 !== d) {
                                        n.next = 130;
                                        break
                                    }
                                    return n.next = 128, s.task.send("cl", "cnt");
                                case 128:
                                    return n.next = 130, s.task.sleep();
                                case 130:
                                    return n.next = 132, s.task.move("msgd 101", "迷失之地");
                                case 132:
                                    return n.next = 134, s.task.sleep();
                                case 134:
                                    return n.next = 136, s.task.send("npc 1000 j", "<menu");
                                case 136:
                                    if (!R && !j) {
                                        n.next = 141;
                                        break
                                    }
                                    return n.next = 139, s.task.sleep();
                                case 139:
                                    return n.next = 141, s.task.send("r", "<menu");
                                case 141:
                                    return n.next = 143, s.task.sleep();
                                case 143:
                                    return n.next = 145, s.task.send("".concat(M ? 7 : j ? 3 : 4, " 3"), "<input");
                                case 145:
                                    return n.next = 147, s.task.sleep();
                                case 147:
                                    return n.next = 149, s.task.send("10", "买下了");
                                case 149:
                                    return n.next = 151, s.task.sleep();
                                case 151:
                                    return n.next = 153, s.task.send("cnt").sleep(1e3);
                                case 153:
                                    return n.next = 155, r();
                                case 155:
                                    return n.abrupt("return", n.sent);
                                case 156:
                                    return n.next = 158, s.task.send("9 1", "查看任务");
                                case 158:
                                    return E = n.sent, S = E.text, O = (0, s.parseMsg)(S).data.list, P = O.find((function(t) {
                                        var n = t.title;
                                        return new RegExp("".concat(u[e][0], "[级极]")).test(n) && n.includes("（财富*")
                                    })), n.next = 164, s.task.sleep();
                                case 164:
                                    return n.next = 166, s.task.send("".concat(P.code, " m mps"), ["选择地图目标", "不用飞啦"]);
                                case 166:
                                    A = n.sent, T = A.index, d = T;
                                case 169:
                                    if (0 !== d) {
                                        n.next = 206;
                                        break
                                    }
                                    return n.next = 172, s.task.sleep();
                                case 172:
                                    return n.next = 174, s.task.send("0 mps", ["<mp>"]);
                                case 174:
                                    return B = n.sent, N = B.text, I = N.split("|"), I = I.slice(I.length - 2), z = N.match(new RegExp("00".concat(Number(I[0]).toString(16).toUpperCase(), "(.+?)\\$")))[1], n.next = 181, s.task.sleep();
                                case 181:
                                    return n.next = 183, s.task.move("".concat(I[1], " ").concat(I[0]), z);
                                case 183:
                                    return n.next = 185, s.task.sleep();
                                case 185:
                                    if (c.default.reset(), "炎火领域" !== z) {
                                        n.next = 192;
                                        break
                                    }
                                    return c.default.set({
                                        code: ["npc 1000 h", "npc 1001 h", "npc 1002 h"],
                                        killMax: 3
                                    }), n.next = 190, c.default.start(!1, !1);
                                case 190:
                                    n.next = 206;
                                    break;
                                case 192:
                                    if (console.log(k), C = /扇贝/.test(k), D = /1个.+已击败0个|\( 现有 0 \/ 需要 1 \)/.test(k), !C) {
                                        n.next = 203;
                                        break
                                    }
                                    return n.prev = 196, n.next = 199, (0, s.buy)("高级精灵球", 10);
                                case 199:
                                    n.next = 203;
                                    break;
                                case 201:
                                    n.prev = 201, n.t1 = n["catch"](196);
                                case 203:
                                    return c.default.set({
                                        getPet: C,
                                        code: D && !C ? ["npc 1000 h", "kill"] : ["kill"],
                                        find: C ? /捕捉成功/ : D ? /（财富\*.+需要击败.+?：1 \/ 1|\(?需要: 1 \/ 1\)?/ : /（财富\*.+需要击败.+?：10 \/ 10|\(?需要: 10 \/ 10\)?/
                                    }), n.next = 206, c.default.start(!1, !0);
                                case 206:
                                    return n.next = 208, r();
                                case 208:
                                case "end":
                                    return n.stop()
                            }
                        }), n, null, [
                            [116, 122],
                            [196, 201]
                        ])
                    }))), i.apply(this, arguments)
                }
                return r()
            }));
        t.default = i
    },
    "50ed": function(e, t) {
        e.exports = function(e, t) {
            return {
                value: t,
                done: !!e
            }
        }
    },
    5147: function(e, t, n) {
        var r = n("2b4c")("match");
        e.exports = function(e) {
            var t = /./;
            try {
                "/./" [e](t)
            } catch (n) {
                try {
                    return t[r] = !1, !"/./" [e](t)
                } catch (a) {}
            }
            return !0
        }
    },
    5168: function(e, t, n) {
        var r = n("dbdb")("wks"),
            a = n("62a0"),
            s = n("e53d").Symbol,
            c = "function" == typeof s,
            u = e.exports = function(e) {
                return r[e] || (r[e] = c && s[e] || (c ? s : a)("Symbol." + e))
            };
        u.store = r
    },
    "518f": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("4917"), n("c5f6"), n("6762"), n("2fdb"), n("7514"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = new s.Task({
                title: "牺牲全部宠物之魂",
                tags: ["item"],
                form: [{
                    title: "宠物",
                    type: "input",
                    placeholder: "名称/序号",
                    focus: !0,
                    value: ""
                }, {
                    title: "宠魂",
                    type: "input",
                    placeholder: "名称/序号",
                    focus: !1,
                    value: ""
                }]
            }, (function() {
                var e = this.form[0].value,
                    t = this.form[1].value;
                if (e && t) return n();

                function n() {
                    return r.apply(this, arguments)
                }

                function r() {
                    return r = (0, a.default)(regeneratorRuntime.mark((function r() {
                        var a, c, u, i, o, f, l, p, d, x, h, k, v, m, b, g, y, w, _, R, M, j, E;
                        return regeneratorRuntime.wrap((function(r) {
                            while (1) switch (r.prev = r.next) {
                                case 0:
                                    return r.next = 2, s.task.sleep();
                                case 2:
                                    return r.next = 4, (0, s.getMainDataAsync)();
                                case 4:
                                    return c = r.sent.cache.pet, c && (u = (0, s.parseMsg)(c).data.list, i = u.find((function(e) {
                                        var t = e.title;
                                        return t.includes("宠物装备")
                                    })), i && (a = i.code)), r.next = 8, s.task.send(a || "m5 pet", "<menu");
                                case 8:
                                    if (o = r.sent, f = o.text, l = (0, s.parseMsg)(f).data.list, p = l.find((function(e) {
                                            var t = e.title;
                                            return t.includes("宠物之魂") && !t.includes("装备中")
                                        })), p) {
                                        r.next = 20;
                                        break
                                    }
                                    return r.next = 15, s.task.cancel(!0);
                                case 15:
                                    throw d = "无可牺牲的宠物之魂", s.task.log(d), new Error(d);
                                case 20:
                                    return r.next = 22, s.task.sleep();
                                case 22:
                                    return r.next = 24, s.task.send("".concat(p.code, " 1"), ["<menu", "您没有合适的宠物"]);
                                case 24:
                                    if (x = r.sent, h = x.text, k = x.index, 1 !== k) {
                                        r.next = 29;
                                        break
                                    }
                                    throw new Error(h);
                                case 29:
                                    if (v = (0, s.parseMsg)(h).data.list, m = v.find((function(t, n) {
                                            var r = t.title;
                                            return /^\d+$/.test(e) && Number(e) < 30 ? Number(e) === n + 1 : r.includes(e)
                                        })), m) {
                                        r.next = 39;
                                        break
                                    }
                                    return r.next = 34, s.task.cancel(!0);
                                case 34:
                                    throw b = "目标宠物未找到", s.task.log(b), new Error(b);
                                case 39:
                                    return r.next = 41, s.task.sleep();
                                case 41:
                                    return r.next = 43, s.task.send(m.code, "<menu");
                                case 43:
                                    if (g = r.sent, y = g.text, w = (0, s.parseMsg)(y).data.list, _ = w.find((function(e, n) {
                                            var r = e.title;
                                            return /^\d+$/.test(t) && Number(t) < 30 ? Number(t) === n + 1 : r.includes(t)
                                        })), _) {
                                        r.next = 55;
                                        break
                                    }
                                    return r.next = 50, s.task.cancel(!0);
                                case 50:
                                    throw R = "目标宠物之魂未找到", s.task.log(R), new Error(R);
                                case 55:
                                    return r.next = 57, s.task.sleep();
                                case 57:
                                    return r.next = 59, s.task.send(_.code, "<input");
                                case 59:
                                    return M = r.sent, j = M.text, E = Number(j.match(/有(\d+)个/)[1]), r.next = 64, s.task.sleep();
                                case 64:
                                    return r.next = 66, s.task.send("".concat(E > 999 ? 999 : E), "宠物之魂晶石：");
                                case 66:
                                    return r.next = 68, n();
                                case 68:
                                case "end":
                                    return r.stop()
                            }
                        }), r)
                    }))), r.apply(this, arguments)
                }
            }));
        t.default = c
    },
    "520a": function(e, t, n) {
        "use strict";
        var r = n("0bfb"),
            a = RegExp.prototype.exec,
            s = String.prototype.replace,
            c = a,
            u = "lastIndex",
            i = function() {
                var e = /a/,
                    t = /b*/g;
                return a.call(e, "a"), a.call(t, "a"), 0 !== e[u] || 0 !== t[u]
            }(),
            o = void 0 !== /()??/.exec("")[1],
            f = i || o;
        f && (c = function(e) {
            var t, n, c, f, l = this;
            return o && (n = new RegExp("^" + l.source + "$(?!\\s)", r.call(l))), i && (t = l[u]), c = a.call(l, e), i && c && (l[u] = l.global ? c.index + c[0].length : t), o && c && c.length > 1 && s.call(c[0], n, (function() {
                for (f = 1; f < arguments.length - 2; f++) void 0 === arguments[f] && (c[f] = void 0)
            })), c
        }), e.exports = c
    },
    "521e": function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("28a5"), n("c5f6"), n("aef6"), n("f559"), n("ac6a");
        var r = n("3f7e"),
            a = ["4.崭新的捕捉器", "5.魔力的捕捉器", "6.稀有的捕捉器", "7.史诗的捕捉器"],
            s = new r.Task({
                title: "捕捉宠物之魂",
                tags: ["change"],
                form: [{
                    title: "最高捕捉",
                    type: "picker",
                    range: a,
                    value: 0
                }, {
                    title: "持续捕捉",
                    type: "checkbox",
                    value: !1
                }]
            }, (function() {
                var e = a[this.form[0].value],
                    t = this.form[1].value;
                if (!t && e === a[a.length - 1]) {
                    var n = "注意：请勿单独捕捉史诗级别，请勾选持续捕捉或使用稀有级别";
                    return r.task.log(n), Promise.reject(n)
                }
                return new Promise((function(n) {
                    function a(s) {
                        s.forEach((function(s) {
                            s = (0, r.parseMsg)(s);
                            var c = s.text;
                            if ("menu" === s.type && c.startsWith("宠物之魂")) {
                                var u = s.data.list,
                                    i = u.filter((function(e) {
                                        var t = e.title;
                                        return t.endsWith("{x11}")
                                    }));
                                u.length = Number(e.split(".")[0]);
                                var o = u.filter((function(e) {
                                    var t = e.title;
                                    return t.endsWith("{x11}")
                                }));
                                r.task.sleep().then((function() {
                                    !t && o.length < i.length ? (r.task.send("?"), n("捕捉目标达成")) : r.task.send(o[o.length - 1].code)
                                }))
                            } else "pmg" === s.type && (c.startsWith("您的包裹中没有足够的魂魄结晶") || c.startsWith("您的包裹已经满了") || c.startsWith("您的包裹中没有足够的灵魂粉末")) && (uni.$off("msgs", a), n(c))
                        }))
                    }
                    uni.$on("msgs", a), r.task.send("pet_soul catch")
                })).then((function() {
                    return r.task.sleep()
                })).then((function() {
                    return r.task.send("cnt", ["cnt", "Command Unknown"])
                }))
            }));
        t.default = s
    },
    "52a7": function(e, t) {
        t.f = {}.propertyIsEnumerable
    },
    "52d9": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, t.hyjl = k, n("96cf"), n("6762"), n("2fdb"), n("3b2b"), n("4917"), n("f559"), n("ac6a");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = r(n("542d")),
            u = r(n("00a5")),
            i = r(n("28b9")),
            o = r(n("0088")),
            f = r(n("5869"));

        function l() {
            return s.task.log("领取每日奖励开始").send("hd_lq", ["你今天已经领取过奖励了", "您今天已经领取过一次了", "领取每日奖励"]).then((function(e) {
                var t = e.index,
                    n = e.text;
                if (t < 2) throw new Error(n);
                return s.task.sleep()
            })).then((function() {
                return s.task.send("j1", ["明天可以继续选取奖励哦", "今天还可以再领取一次哦"])
            })).then((function(e) {
                var t = e.index;
                if (1 === t) return s.task.send("hd_lq", "领取每日奖励").then((function() {
                    return s.task.sleep()
                })).then((function() {
                    return s.task.send("j1", "领取每日奖励成功")
                }))
            })).catch((function(e) {
                console.warn(e)
            })).then((function() {
                return s.task.sleep()
            })).then((function() {
                return s.task.log("领取每日奖励结束")
            }))
        }

        function p() {
            return s.task.log("领取战魂挑战次数开始").move("lsj 200", "里闪光.无垢者之城").then((function() {
                return s.task.sleep()
            })).then((function() {
                return s.task.send("npc 1000 q1", ["请明天再来吧", "<r>cnt", "想要挑战战魂么"])
            })).then((function(e) {
                var t = e.index,
                    n = e.text;
                if (0 === t || 1 === t) throw new Error(n);
                return s.task.sleep().then((function() {
                    return s.task.send("1", "祝你旗开得胜")
                }))
            })).catch((function(e) {
                console.warn(e)
            })).then((function() {
                return s.task.sleep()
            })).then((function() {
                return s.task.log("领取战魂挑战次数结束")
            }))
        }

        function d() {
            return x.apply(this, arguments)
        }

        function x() {
            return x = (0, a.default)(regeneratorRuntime.mark((function e() {
                var t, n, r;
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                            return e.prev = 0, e.next = 3, s.task.log("领取神奇水晶袋开始").sleep(100);
                        case 3:
                            return e.next = 5, s.task.move("ybgh 100", "佣兵工会");
                        case 5:
                            return e.next = 7, s.task.sleep();
                        case 7:
                            return e.next = 9, s.task.send("npc 1000 q0", ["请明天再来吧", "免费的福利哦"]);
                        case 9:
                            if (t = e.sent, n = t.index, r = t.text, 0 !== n) {
                                e.next = 14;
                                break
                            }
                            throw new Error(r);
                        case 14:
                            return e.next = 16, s.task.sleep();
                        case 16:
                            return e.next = 18, s.task.send("1", "神奇水晶袋");
                        case 18:
                            return c.default.reset(), c.default.set({
                                item: "神奇水晶袋"
                            }), e.next = 22, c.default.start(!1);
                        case 22:
                            e.next = 27;
                            break;
                        case 24:
                            e.prev = 24, e.t0 = e["catch"](0), console.warn(e.t0);
                        case 27:
                            return e.next = 29, s.task.sleep();
                        case 29:
                            return e.abrupt("return", s.task.log("领取神奇水晶袋结束"));
                        case 30:
                        case "end":
                            return e.stop()
                    }
                }), e, null, [
                    [0, 24]
                ])
            }))), x.apply(this, arguments)
        }

        function h() {
            var e = !0;
            return new Promise((function(t) {
                function n(r) {
                    r.forEach((function(r) {
                        r = (0, s.parseMsg)(r);
                        var a = r.text;
                        if ("menu" === r.type && a.startsWith("宠物之魂")) {
                            var c = a.match(new RegExp("\\d\\].{2}的捕捉器".concat("{x11}"), "g")),
                                u = c[c.length - 1];
                            if (/魔力|稀有|史诗/.test(u)) {
                                if (!e) return uni.$off("msgs", n), t();
                                e = !1
                            }
                            s.task.sleep().then((function() {
                                return s.task.send(u[0])
                            }))
                        } else "pmg" === r.type && (a.startsWith("您的包裹中没有足够的魂魄结晶") || a.startsWith("您的包裹已经满了") || a.startsWith("您的包裹中没有足够的灵魂粉末")) && (uni.$off("msgs", n), t())
                    }))
                }
                uni.$on("msgs", n), s.task.log("捕捉宠物之魂开始").send("pet_soul catch")
            })).then((function() {
                return s.task.sleep()
            })).then((function() {
                return s.task.send("cnt", ["cnt", "Command Unknown"])
            })).then((function() {
                return s.task.sleep()
            })).catch((function(e) {
                console.warn(e)
            })).then((function() {
                return s.task.sleep()
            })).then((function() {
                return s.task.log("捕捉宠物之魂结束")
            }))
        }

        function k() {
            return v.apply(this, arguments)
        }

        function v() {
            return v = (0, a.default)(regeneratorRuntime.mark((function e() {
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                            return e.next = 2, s.task.log("领取活跃奖励开始").send("mrhd", "领取活动奖励");
                        case 2:
                            return e.next = 4, s.task.sleep();
                        case 4:
                            return e.next = 6, s.task.send("mrhdjl", "领取活跃奖励");
                        case 6:
                            return e.next = 8, s.task.sleep();
                        case 8:
                            return e.next = 10, s.task.send("1", ["本次领取奖励为", "你已经领取了现有的奖励", "您的包裹已经满了"]);
                        case 10:
                            return e.next = 12, s.task.sleep();
                        case 12:
                            return e.next = 14, s.task.send("cnt");
                        case 14:
                            return e.next = 16, s.task.sleep(500);
                        case 16:
                            return e.next = 18, s.task.log("领取活跃奖励结束");
                        case 18:
                        case "end":
                            return e.stop()
                    }
                }), e)
            }))), v.apply(this, arguments)
        }

        function m() {
            return s.task.log("抽取符文开始").send("rg_wqfw raffle", ["你当前有", "可以消耗灵魂粉末进行一次抽奖"]).then((function(e) {
                var t = e.index,
                    n = e.text;
                if (0 === t) throw new Error(n);
                return s.task.sleep().then((function() {
                    return s.task.send(n.includes("本次抽奖需要消耗灵魂粉末数量：300") ? "yes" : "no", "pmg")
                }))
            })).catch((function(e) {
                console.warn(e)
            })).then((function() {
                return s.task.sleep()
            })).then((function() {
                return s.task.log("抽取符文结束")
            }))
        }

        function b() {
            return s.task.log("精灵的温泉开始").move("mszy 701", "后山密林").then((function() {
                return s.task.sleep()
            })).then((function() {
                return s.task.send("t l 5001", ["你今天已经做过这个活动了", "播放完毕"])
            })).then((function(e) {
                var t = e.index;
                if (1 === t) return s.task.sleep().then((function() {
                    return s.task.send("t l 6001", "后山密林")
                })).then((function() {
                    return s.task.sleep()
                })).then((function() {
                    return s.task.send("storyend").sleep()
                }))
            })).catch((function(e) {
                console.warn(e)
            })).then((function() {
                return s.task.sleep()
            })).then((function() {
                return s.task.log("精灵的温泉结束")
            }))
        }

        function g() {
            var e = new Date;
            return Promise.resolve().then((function() {
                if (0 === e.getDay() || 6 === e.getDay() && (e.getHours() >= 20 || e.getHours() >= 19 && e.getMinutes() >= 30)) return u.default.start()
            })).then((function() {
                if (0 === e.getDay() && e.getHours() >= 12 || 1 === e.getDay() && e.getHours() < 12) return s.task.log("领取排名奖励开始").send("rg_pvp", "<menu").then((function() {
                    return s.task.sleep()
                })).then((function() {
                    return s.task.send("get_gift", "<pmg")
                })).then((function() {
                    return s.task.sleep()
                })).then((function() {
                    return s.task.log("领取排名奖励结束")
                }))
            }))
        }

        function y() {
            return w.apply(this, arguments)
        }

        function w() {
            return w = (0, a.default)(regeneratorRuntime.mark((function e() {
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                        case "end":
                            return e.stop()
                    }
                }), e)
            }))), w.apply(this, arguments)
        }
        var _ = (new Date).getDate(),
            R = [{
                title: "领取羽毛",
                type: "checkbox",
                value: !1
            }, {
                title: "抽取符文",
                type: "checkbox",
                value: !1
            }, {
                title: "龙魂进化",
                type: "checkbox",
                value: !0
            }, {
                title: "领取彩云钥匙",
                type: "checkbox",
                value: _ <= 10
            }, {
                title: "领彩云水晶币",
                type: "checkbox",
                value: _ <= 10
            }, {
                title: "购买灵魂粉末",
                type: "input",
                placeholder: "次数",
                hidden: !0,
                focus: !1,
                value: "0"
            }],
            M = new s.Task({
                title: "领取日常奖励",
                tags: ["event"],
                form: R
            }, (function() {
                var e = this.form[0].value,
                    t = this.form[1].value,
                    n = this.form[2].value,
                    r = this.form[3].value,
                    c = this.form[4].value,
                    u = this.form[5].value;

                function x() {
                    return v.apply(this, arguments)
                }

                function v() {
                    return v = (0, a.default)(regeneratorRuntime.mark((function a() {
                        return regeneratorRuntime.wrap((function(a) {
                            while (1) switch (a.prev = a.next) {
                                case 0:
                                    if (!e) {
                                        a.next = 3;
                                        break
                                    }
                                    return a.next = 3, l();
                                case 3:
                                    return a.next = 5, p();
                                case 5:
                                    return a.next = 7, s.task.sleep();
                                case 7:
                                    return a.next = 9, f.default.start(!1, !0, "d100");
                                case 9:
                                    return a.next = 11, d();
                                case 11:
                                    return a.next = 13, s.task.sleep();
                                case 13:
                                    return a.next = 15, h();
                                case 15:
                                    if (!n) {
                                        a.next = 18;
                                        break
                                    }
                                    return a.next = 18, i.default.start();
                                case 18:
                                    return a.next = 20, k();
                                case 20:
                                    if (!t) {
                                        a.next = 23;
                                        break
                                    }
                                    return a.next = 23, m();
                                case 23:
                                    return a.next = 25, b();
                                case 25:
                                    return a.next = 27, g();
                                case 27:
                                    return a.next = 29, y(u);
                                case 29:
                                    if (!r) {
                                        a.next = 34;
                                        break
                                    }
                                    return o.default.reset(), o.default.set({
                                        targetIndex: 0
                                    }), a.next = 34, o.default.start();
                                case 34:
                                    if (!c) {
                                        a.next = 39;
                                        break
                                    }
                                    return o.default.reset(), o.default.set({
                                        targetIndex: 1
                                    }), a.next = 39, o.default.start();
                                case 39:
                                case "end":
                                    return a.stop()
                            }
                        }), a)
                    }))), v.apply(this, arguments)
                }
                return x()
            }));
        t.default = M
    },
    "53e2": function(e, t, n) {
        var r = n("07e3"),
            a = n("241e"),
            s = n("5559")("IE_PROTO"),
            c = Object.prototype;
        e.exports = Object.getPrototypeOf || function(e) {
            return e = a(e), r(e, s) ? e[s] : "function" == typeof e.constructor && e instanceof e.constructor ? e.constructor.prototype : e instanceof Object ? c : null
        }
    },
    "542d": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("4917"), n("6762"), n("2fdb"), n("c5f6"), n("7514"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = r(n("b05c")),
            u = r(n("3918")),
            i = new s.Task({
                title: "物品打开/使用/兑换",
                tags: ["item"],
                form: [{
                    title: "物品名称",
                    type: "input",
                    placeholder: "必填",
                    focus: !0,
                    value: ""
                }, {
                    title: "目标名称",
                    type: "input",
                    placeholder: "空白/名称/序号",
                    focus: !1,
                    value: ""
                }],
                reset: function() {
                    this.form[0].value = "", this.form[1].value = ""
                },
                set: function(e) {
                    var t = {
                        item: "",
                        item2: "",
                        target: ""
                    };
                    Object.assign(t, e), this.form[0].value = t.item, this.form[1].value = t.item2 || t.target
                }
            }, (function() {
                var e = {
                    item: this.form[0].value,
                    target: this.form[1].value
                };
                if (e.item) {
                    var t = [],
                        n = [/^<menu/, "[~1]", "[~goon]", "[ok]", "[yes]", /\[(.+?)\].*?(确定|打开|继续)\|/, "活力值只有 ", "你活力值不足", "你的背包似乎满了", /^<pmg.+不能.*(打开|使用)/, "兑换失败", "抽奖结束", "全部打开了", /<pmg>你的.+成长已经满了/, "combat", "m mps]", "Command Unknown!", /^<pmg.+成功/, /^<pmg.+喝下了/, /^<pmg>.*[你您].*(获得|提升了|使用了)/];
                    return o()
                }

                function r(e) {
                    return i.apply(this, arguments)
                }

                function i() {
                    return i = (0, a.default)(regeneratorRuntime.mark((function t(a) {
                        var i, o, f, l, p, d, x, h, k, v;
                        return regeneratorRuntime.wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    return i = a.index, o = a.text, t.next = 3, s.task.sleep();
                                case 3:
                                    t.t0 = i, t.next = 0 === t.t0 ? 6 : 1 === t.t0 ? 16 : 2 === t.t0 ? 18 : 3 === t.t0 ? 20 : 4 === t.t0 ? 22 : 5 === t.t0 ? 24 : 6 === t.t0 || 7 === t.t0 ? 26 : 8 === t.t0 ? 31 : 9 === t.t0 || 10 === t.t0 ? 34 : 11 === t.t0 || 12 === t.t0 || 15 === t.t0 ? 37 : 13 === t.t0 ? 41 : 14 === t.t0 ? 42 : 45;
                                    break;
                                case 6:
                                    if (l = e.target, l && (d = (0, s.parseMsg)(o).data.list, p = d.find((function(e, t) {
                                            var n = e.title;
                                            return /^\d+$/.test(l) && Number(l) < 30 ? Number(l) === t + 1 : n.includes(l)
                                        }))), p) {
                                        t.next = 14;
                                        break
                                    }
                                    return t.next = 11, s.task.cancel(!0);
                                case 11:
                                    throw x = l ? "".concat(e.target ? "兑换" : "", "目标未找到") : "该物品不可直接使用", s.task.log(x), new Error(x);
                                case 14:
                                    return f = p.code, t.abrupt("break", 45);
                                case 16:
                                    return f = "1", t.abrupt("break", 45);
                                case 18:
                                    return f = "goon", t.abrupt("break", 45);
                                case 20:
                                    return f = "ok", t.abrupt("break", 45);
                                case 22:
                                    return f = "yes", t.abrupt("break", 45);
                                case 24:
                                    return f = o.match(n[5])[1], t.abrupt("break", 45);
                                case 26:
                                    return u.default.reset(), u.default.set({
                                        item: "运动饮料",
                                        use: !0,
                                        max: 1
                                    }), t.next = 30, u.default.start(!1, !1);
                                case 30:
                                    return t.abrupt("break", 45);
                                case 31:
                                    return t.next = 33, c.default.start();
                                case 33:
                                    return t.abrupt("break", 45);
                                case 34:
                                    throw h = "物品使用失败", s.task.log(h), new Error(h);
                                case 37:
                                    return t.next = 39, s.task.send("?").sleep(2e3);
                                case 39:
                                    throw k = "物品使用结束", new Error(k);
                                case 41:
                                    return t.abrupt("return", !0);
                                case 42:
                                    return t.next = 44, new Promise((function(e) {
                                        uni.$once("combatready", e)
                                    }));
                                case 44:
                                    return t.abrupt("break", 45);
                                case 45:
                                    if (!f) {
                                        t.next = 51;
                                        break
                                    }
                                    return t.next = 48, s.task.send(f, n);
                                case 48:
                                    return v = t.sent, t.next = 51, r(v);
                                case 51:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    }))), i.apply(this, arguments)
                }

                function o() {
                    return f.apply(this, arguments)
                }

                function f() {
                    return f = (0, a.default)(regeneratorRuntime.mark((function a() {
                        var c, u, i, f, l, p, d, x, h, k;
                        return regeneratorRuntime.wrap((function(a) {
                            while (1) switch (a.prev = a.next) {
                                case 0:
                                    return a.next = 2, s.task.sleep();
                                case 2:
                                    return a.prev = 2, a.next = 5, (0, s.findItem)(e.item, "2", 0, !1, t);
                                case 5:
                                    c = a.sent, a.next = 14;
                                    break;
                                case 8:
                                    throw a.prev = 8, a.t0 = a["catch"](2), console.error(a.t0), u = "".concat(e.item, " 未找到或无法使用"), s.task.log(u), new Error(u);
                                case 14:
                                    if (i = c, f = i.code, l = i.list, p = i.title, d = l.find((function(t) {
                                            var n, r = t.title;
                                            return n = e.target ? /兑换|凝练|使用/ : /[使饮食]用|换取|领取|寄出|突破|召唤|增加|打开|开启|获得|魂魄结晶|灵魂粉末|王牌任务旗|吹响|狂欢|彩绘到/, n.test(r)
                                        })), d) {
                                        a.next = 20;
                                        break
                                    }
                                    throw x = "".concat((0, s.clearText)(p), " 无法使用"), s.task.log(x), new Error(x);
                                case 20:
                                    return a.next = 22, s.task.sleep();
                                case 22:
                                    return a.next = 24, s.task.send("".concat(f, " ").concat(d.code), n);
                                case 24:
                                    return h = a.sent, a.next = 27, r(h);
                                case 27:
                                    return k = a.sent, k && t.push(c.title), a.next = 31, o();
                                case 31:
                                case "end":
                                    return a.stop()
                            }
                        }), a, null, [
                            [2, 8]
                        ])
                    }))), f.apply(this, arguments)
                }
            }));
        t.default = i
    },
    "549b": function(e, t, n) {
        "use strict";
        var r = n("d864"),
            a = n("63b6"),
            s = n("241e"),
            c = n("b0dc"),
            u = n("3702"),
            i = n("b447"),
            o = n("20fd"),
            f = n("7cd6");
        a(a.S + a.F * !n("4ee1")((function(e) {
            Array.from(e)
        })), "Array", {
            from: function(e) {
                var t, n, a, l, p = s(e),
                    d = "function" == typeof this ? this : Array,
                    x = arguments.length,
                    h = x > 1 ? arguments[1] : void 0,
                    k = void 0 !== h,
                    v = 0,
                    m = f(p);
                if (k && (h = r(h, x > 2 ? arguments[2] : void 0, 2)), void 0 == m || d == Array && u(m))
                    for (t = i(p.length), n = new d(t); t > v; v++) o(n, v, k ? h(p[v], v) : p[v]);
                else
                    for (l = m.call(p), n = new d; !(a = l.next()).done; v++) o(n, v, k ? c(l, h, [a.value, v], !0) : a.value);
                return n.length = v, n
            }
        })
    },
    5537: function(e, t, n) {
        var r = n("8378"),
            a = n("7726"),
            s = "__core-js_shared__",
            c = a[s] || (a[s] = {});
        (e.exports = function(e, t) {
            return c[e] || (c[e] = void 0 !== t ? t : {})
        })("versions", []).push({
            version: r.version,
            mode: n("2d00") ? "pure" : "global",
            copyright: "© 2020 Denis Pushkarev (zloirock.ru)"
        })
    },
    5559: function(e, t, n) {
        var r = n("dbdb")("keys"),
            a = n("62a0");
        e.exports = function(e) {
            return r[e] || (r[e] = a(e))
        }
    },
    "556d": function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("c5f6"), n("4917");
        var r = n("3f7e"),
            a = new r.Task({
                title: "领取爱心礼盒",
                tags: ["change"]
            }, (function() {
                var e = 0;

                function t() {
                    var n = e > 99 ? 99 : e;
                    return r.task.sleep().then((function() {
                        return r.task.send("npc 1000 1", "请输入要兑换的爱心礼盒的数量")
                    })).then((function() {
                        return r.task.sleep()
                    })).then((function() {
                        return r.task.send("".concat(n), ["您的爱心值不够哦", "确认领取吗"])
                    })).then((function(e) {
                        var t = e.index,
                            n = e.text;
                        if (0 === t) throw new Error(n);
                        return r.task.sleep()
                    })).then((function() {
                        return r.task.send("yes", "恭喜你得到")
                    })).then((function() {
                        return e -= n, r.task.sleep()
                    })).then((function() {
                        if (e > 0) return t()
                    }))
                }
                return r.task.send("1 12", "社会属性").then((function() {
                    return r.task.sleep()
                })).then((function() {
                    return r.task.send("shehui", ["爱心值：", "状态抗性"])
                })).then((function(t) {
                    var n = t.text,
                        r = n.match(/爱心值：(\d+)/) || [];
                    e = Math.floor(Number(r[1]) / 100)
                })).then((function() {
                    return r.task.sleep()
                })).then((function() {
                    return r.task.send("cl", "cnt")
                })).then((function() {
                    if (!e >= 1) throw new Error("爱心值不够");
                    return r.task.sleep()
                })).then((function() {
                    return r.task.move("gey 101", "孤儿院")
                })).then(t)
            }));
        t.default = a
    },
    "55fd": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("4917"), n("7514"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = ["E", "D", "C", "B", "A"],
            u = c.length - 1,
            i = new s.Task({
                title: "决斗之路",
                tags: ["event"],
                batch: !1,
                form: [{
                    title: "类型",
                    type: "picker",
                    range: ["强行击杀", "快速战斗", "等待被杀"],
                    value: 0
                }]
            }, (function() {
                var e = this.form[0].value;

                function t() {
                    return n.apply(this, arguments)
                }

                function n() {
                    return n = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var n, r, a, i, o, f, l, p, d, x, h, k;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.next = 4, s.task.send("5", "开始快速战斗");
                                case 4:
                                    if (n = e.sent, r = n.text, a = (0, s.parseMsg)(r).data.list, o = a.find((function(e) {
                                            var t = e.title,
                                                n = e.list;
                                            return i = c.indexOf((t.match(/\((\S)档\)/) || ["", "A"])[1]), i <= u && n.find((function(e) {
                                                var t = e.title;
                                                return "强行击杀" === (0, s.clearText)(t)
                                            }))
                                        })), !o) {
                                        e.next = 37;
                                        break
                                    }
                                    return e.next = 11, s.task.sleep();
                                case 11:
                                    return e.next = 13, s.task.send("".concat(o.code, " p"), ["你使用了强行击杀", "你不可以强行击杀比你档次高的玩家", "<pmg>"]);
                                case 13:
                                    if (f = e.sent, l = f.index, 0 !== l) {
                                        e.next = 32;
                                        break
                                    }
                                    return e.next = 18, new Promise((function(e) {
                                        uni.$once("combatready", e)
                                    }));
                                case 18:
                                    p = e.sent, d = p.msgs, x = 0;
                                case 21:
                                    if (!(x < d.length)) {
                                        e.next = 30;
                                        break
                                    }
                                    if (h = d[x], k = h.match(/[了为].*([ABCD]).*档/), !k) {
                                        e.next = 27;
                                        break
                                    }
                                    return u = c.indexOf(k[1]), e.abrupt("break", 30);
                                case 27:
                                    x++, e.next = 21;
                                    break;
                                case 30:
                                    e.next = 35;
                                    break;
                                case 32:
                                    return 1 === l && (u = i - 1), e.next = 35, s.task.send("cnt", "cnt");
                                case 35:
                                    e.next = 39;
                                    break;
                                case 37:
                                    return e.next = 39, s.task.send("cnt", "cnt");
                                case 39:
                                    return e.abrupt("return", t());
                                case 40:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), n.apply(this, arguments)
                }

                function r() {
                    return i.apply(this, arguments)
                }

                function i() {
                    return i = (0, a.default)(regeneratorRuntime.mark((function e() {
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.next = 4, s.task.send("5", "开始快速战斗");
                                case 4:
                                    return e.next = 6, s.task.sleep();
                                case 6:
                                    return e.next = 8, s.task.send("jdzl 0", "你进入了快速战斗状态");
                                case 8:
                                    return e.abrupt("return", new Promise((function() {})));
                                case 9:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), i.apply(this, arguments)
                }

                function o() {
                    return new Promise((function() {}))
                }
                return u = c.length - 1, s.task.move("jdzl 102", "普通决斗场").then((function() {
                    switch (e) {
                        case 0:
                            return t();
                        case 1:
                            return r();
                        default:
                            return o()
                    }
                }))
            }));
        t.default = i
    },
    "584a": function(e, t) {
        var n = e.exports = {
            version: "2.6.12"
        };
        "number" == typeof __e && (__e = n)
    },
    5869: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = new s.Task({
                title: "领取灵魂粉末",
                tags: ["event"]
            }, function() {
                var e = (0, a.default)(regeneratorRuntime.mark((function e(t) {
                    var n, r;
                    return regeneratorRuntime.wrap((function(e) {
                        while (1) switch (e.prev = e.next) {
                            case 0:
                                return e.next = 2, s.task.sleep();
                            case 2:
                                return e.next = 4, s.task.send("pet_soul draw", ["领取灵魂粉末", "无法使用捕捉系统"]);
                            case 4:
                                if (n = e.sent, r = n.index, 0 !== r) {
                                    e.next = 11;
                                    break
                                }
                                return e.next = 9, s.task.sleep();
                            case 9:
                                return e.next = 11, s.task.send("string" === typeof t ? t : "d100", "下次领取时间为:");
                            case 11:
                            case "end":
                                return e.stop()
                        }
                    }), e)
                })));
                return function(t) {
                    return e.apply(this, arguments)
                }
            }());
        t.default = c
    },
    5892: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0;
        var r = n("3f7e"),
            a = new r.Task({
                title: "识别验证码",
                tags: ["other"]
            }, (function() {
                return (0, r.checkCode)()
            }));
        t.default = a
    },
    5980: function(e, t, n) {
        (function(t, r) {
            e.exports = r(n("21bf"))
        })(0, (function(e) {
            (function() {
                var t = e,
                    n = t.lib,
                    r = n.Base,
                    a = t.enc,
                    s = a.Utf8,
                    c = t.algo;
                c.HMAC = r.extend({
                    init: function(e, t) {
                        e = this._hasher = new e.init, "string" == typeof t && (t = s.parse(t));
                        var n = e.blockSize,
                            r = 4 * n;
                        t.sigBytes > r && (t = e.finalize(t)), t.clamp();
                        for (var a = this._oKey = t.clone(), c = this._iKey = t.clone(), u = a.words, i = c.words, o = 0; o < n; o++) u[o] ^= 1549556828, i[o] ^= 909522486;
                        a.sigBytes = c.sigBytes = r, this.reset()
                    },
                    reset: function() {
                        var e = this._hasher;
                        e.reset(), e.update(this._iKey)
                    },
                    update: function(e) {
                        return this._hasher.update(e), this
                    },
                    finalize: function(e) {
                        var t = this._hasher,
                            n = t.finalize(e);
                        t.reset();
                        var r = t.finalize(this._oKey.clone().concat(n));
                        return r
                    }
                })
            })()
        }))
    },
    "59dd": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = r(n("275e")),
            u = new s.Task({
                title: "佣兵转职",
                tags: ["event"],
                form: [{
                    title: "任务类型",
                    type: "picker",
                    range: ["普通任务", "高级任务"],
                    value: 0
                }, {
                    title: "自动重置",
                    type: "checkbox",
                    value: !1
                }]
            }, (function() {
                var e = this.form[0].value,
                    t = this.form[1].value;

                function n() {
                    return r.apply(this, arguments)
                }

                function r() {
                    return r = (0, a.default)(regeneratorRuntime.mark((function r() {
                        var a, u, i, o, f, l, p;
                        return regeneratorRuntime.wrap((function(r) {
                            while (1) switch (r.prev = r.next) {
                                case 0:
                                    return r.next = 2, s.task.sleep();
                                case 2:
                                    return r.next = 4, s.task.move("ybgh 100", "佣兵工会");
                                case 4:
                                    return r.next = 6, s.task.sleep();
                                case 6:
                                    return r.next = 8, s.task.send("npc 1001 ~q".concat(e), ["[~1]", "需要击败200个鬼魂", "你未带出佣兵", "这个任务每天只能做"]);
                                case 8:
                                    if (a = r.sent, u = a.index, i = a.text, 0 !== u) {
                                        r.next = 25;
                                        break
                                    }
                                    return r.next = 14, s.task.sleep();
                                case 14:
                                    return r.next = 16, s.task.send("1", ["获得佣兵转职经验", "[cl]"]);
                                case 16:
                                    if (o = r.sent, f = o.index, 1 !== f) {
                                        r.next = 23;
                                        break
                                    }
                                    return r.next = 21, s.task.sleep();
                                case 21:
                                    return r.next = 23, s.task.send("cl", ["cnt"]);
                                case 23:
                                    r.next = 58;
                                    break;
                                case 25:
                                    if (1 !== u) {
                                        r.next = 38;
                                        break
                                    }
                                    return r.next = 28, s.task.sleep();
                                case 28:
                                    return r.next = 30, s.task.move("mszy 703", "夜梦仙境");
                                case 30:
                                    return r.next = 32, s.task.sleep();
                                case 32:
                                    return c.default.reset(), c.default.set({
                                        code: "kill",
                                        find: /转职日常普通任务.+200 \/ 200/
                                    }), r.next = 36, c.default.start(!1, !1);
                                case 36:
                                    r.next = 58;
                                    break;
                                case 38:
                                    if (2 !== u) {
                                        r.next = 42;
                                        break
                                    }
                                    throw new Error(i);
                                case 42:
                                    if (3 !== u) {
                                        r.next = 58;
                                        break
                                    }
                                    if (!t) {
                                        r.next = 57;
                                        break
                                    }
                                    return r.next = 46, s.task.sleep();
                                case 46:
                                    return r.next = 48, s.task.send("npc 1001 0", "[y]");
                                case 48:
                                    return r.next = 50, s.task.sleep();
                                case 50:
                                    return r.next = 52, s.task.send("y", ["重置成功", "不能再重置"]);
                                case 52:
                                    if (l = r.sent, p = l.index, 0 !== p) {
                                        r.next = 57;
                                        break
                                    }
                                    return r.next = 57, n();
                                case 57:
                                    return r.abrupt("return");
                                case 58:
                                    return r.next = 60, n();
                                case 60:
                                case "end":
                                    return r.stop()
                            }
                        }), r)
                    }))), r.apply(this, arguments)
                }
                return n()
            }));
        t.default = u
    },
    "5b4e": function(e, t, n) {
        var r = n("36c3"),
            a = n("b447"),
            s = n("0fc9");
        e.exports = function(e) {
            return function(t, n, c) {
                var u, i = r(t),
                    o = a(i.length),
                    f = s(c, o);
                if (e && n != n) {
                    while (o > f)
                        if (u = i[f++], u != u) return !0
                } else
                    for (; o > f; f++)
                        if ((e || f in i) && i[f] === n) return e || f || 0;
                return !e && -1
            }
        }
    },
    "5b6c": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("c5f6"), n("4917"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = new s.Task({
                title: "精魄兑换(经验/材料)",
                tags: ["change"],
                options: {
                    target: 0
                },
                set: function(e) {
                    var t = this.options;
                    Object.assign(t, e)
                },
                before: function() {
                    var e = this.options;
                    return new Promise((function(t, n) {
                        var r = ["经验", "材料"];
                        uni.showActionSheet({
                            itemList: r,
                            success: function(r) {
                                var a = r.tapIndex;
                                a < 0 ? n("取消") : (e.target = a, t())
                            },
                            fail: function() {
                                n("取消")
                            }
                        })
                    }))
                }
            }, (0, a.default)(regeneratorRuntime.mark((function e() {
                var t, n, r;
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                            if (r = function() {
                                    var e;
                                    return s.task.sleep().then((function() {
                                        return s.task.send("npc 1000 ".concat(n ? "2" : "0"), ["您还没有", "你一共有"])
                                    })).then((function(t) {
                                        var r = t.index,
                                            a = t.text;
                                        if (0 === r) throw new Error(a);
                                        var c = a.match(/你一共有(\d+)个燃烧的精魄/),
                                            u = Math.floor(Number(c[1]) / (n ? 10 : 1)),
                                            i = n ? 99 : 999;
                                        return u > i && (e = !0, u = i), s.task.sleep().then((function() {
                                            return s.task.send("".concat(u), ["恭喜你", "您没有足够的", "您输入的数量有误"])
                                        }))
                                    })).then((function(t, n) {
                                        if (t > 0) throw new Error(n);
                                        if (e) return r()
                                    }))
                                }, t = this.options, n = t.target, 0 !== n || !s.globalSettings.get("auto7")) {
                                e.next = 6;
                                break
                            }
                            throw s.task.log("设置7号项链自动检查时，暂停换取经验。"), new Error("");
                        case 6:
                            return e.next = 8, (0, s.getMainDataAsync)();
                        case 8:
                            if (e.t0 = e.sent.serverType, "tx" !== e.t0) {
                                e.next = 12;
                                break
                            }
                            throw s.task.log("腾讯区未支持精魄兑换活动"), new Error("");
                        case 12:
                            return e.next = 14, s.task.move("yhxz 101", "焰火小镇").then(r);
                        case 14:
                        case "end":
                            return e.stop()
                    }
                }), e, this)
            }))));
        t.default = c
    },
    "5c95": function(e, t, n) {
        var r = n("35e8");
        e.exports = function(e, t, n) {
            for (var a in t) n && e[a] ? e[a] = t[a] : r(e, a, t[a]);
            return e
        }
    },
    "5ca1": function(e, t, n) {
        var r = n("7726"),
            a = n("8378"),
            s = n("32e9"),
            c = n("2aba"),
            u = n("9b43"),
            i = "prototype",
            o = function(e, t, n) {
                var f, l, p, d, x = e & o.F,
                    h = e & o.G,
                    k = e & o.S,
                    v = e & o.P,
                    m = e & o.B,
                    b = h ? r : k ? r[t] || (r[t] = {}) : (r[t] || {})[i],
                    g = h ? a : a[t] || (a[t] = {}),
                    y = g[i] || (g[i] = {});
                for (f in h && (n = t), n) l = !x && b && void 0 !== b[f], p = (l ? b : n)[f], d = m && l ? u(p, r) : v && "function" == typeof p ? u(Function.call, p) : p, b && c(b, f, p, e & o.U), g[f] != p && s(g, f, d), v && y[f] != p && (y[f] = p)
            };
        r.core = a, o.F = 1, o.G = 2, o.S = 4, o.P = 8, o.B = 16, o.W = 32, o.U = 64, o.R = 128, e.exports = o
    },
    "5d58": function(e, t, n) {
        e.exports = n("d8d6")
    },
    "5dbc": function(e, t, n) {
        var r = n("d3f4"),
            a = n("8b97").set;
        e.exports = function(e, t, n) {
            var s, c = t.constructor;
            return c !== n && "function" == typeof c && (s = c.prototype) !== n.prototype && r(s) && a && a(e, s), e
        }
    },
    "5eda": function(e, t, n) {
        var r = n("5ca1"),
            a = n("8378"),
            s = n("79e5");
        e.exports = function(e, t) {
            var n = (a.Object || {})[e] || Object[e],
                c = {};
            c[e] = t(n), r(r.S + r.F * s((function() {
                n(1)
            })), "Object", c)
        }
    },
    "5f1b": function(e, t, n) {
        "use strict";
        var r = n("23c6"),
            a = RegExp.prototype.exec;
        e.exports = function(e, t) {
            var n = e.exec;
            if ("function" === typeof n) {
                var s = n.call(e, t);
                if ("object" !== typeof s) throw new TypeError("RegExp exec method returned something other than an Object or null");
                return s
            }
            if ("RegExp" !== r(e)) throw new TypeError("RegExp#exec called on incompatible receiver");
            return a.call(e, t)
        }
    },
    "613b": function(e, t, n) {
        var r = n("5537")("keys"),
            a = n("ca5a");
        e.exports = function(e) {
            return r[e] || (r[e] = a(e))
        }
    },
    6145: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0;
        var a = r(n("75fc"));
        n("7514"), n("96cf");
        var s = r(n("3b8d"));
        n("6762"), n("2fdb");
        var c = n("3f7e"),
            u = r(n("275e")),
            i = [{
                maps: [
                    ["tonghua 401", "外婆家"],
                    ["tonghua 402", "野鸭池塘"],
                    ["tonghua 403", "乌鸦森林"]
                ]
            }, {
                maps: [
                    ["tonghua 501", "人鱼神殿"],
                    ["tonghua 502", "寒鳞宝库"],
                    ["tonghua 503", "淘沙近海"]
                ]
            }, {
                maps: [
                    ["tonghua 303", "橡树瀑布"],
                    ["tonghua 302", "魔鹅农场"],
                    ["tonghua 301", "灰姑娘之家"]
                ]
            }, {
                maps: [
                    ["tonghua 101", "小矮人之屋"],
                    ["tonghua 103", "巫毒丛林"],
                    ["tonghua 102", "苹果林"]
                ]
            }, {
                maps: [
                    ["tonghua 201", "睡美人城堡"],
                    ["tonghua 202", "紫雾魔林"],
                    ["tonghua 203", "木桶地窖"]
                ]
            }, {
                maps: [
                    ["tonghua 603", "阿拉丁之家"],
                    ["tonghua 601", "神灯城堡"],
                    ["tonghua 602", "巨兽洞穴"]
                ]
            }, {
                maps: [
                    ["tonghua 702", "玫瑰庭院"],
                    ["tonghua 701", "野兽城堡"],
                    ["tonghua 703", "藏宝码头"]
                ]
            }];

        function o(e, t) {
            for (var n = 0; n < e.length; n++)
                for (var r = e[n], a = r.list, s = 0; s < a.length; s++) {
                    var c = a[s];
                    if (c.title.includes(t)) return "".concat(r.code, " ").concat(c.code)
                }
        }

        function f(e, t, n, r) {
            return l.apply(this, arguments)
        }

        function l() {
            return l = (0, s.default)(regeneratorRuntime.mark((function e(t, n, r, s) {
                var i, l, p, d, x, h;
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                            if (t) {
                                e.next = 5;
                                break
                            }
                            return e.next = 3, (0, c.getMainDataAsync)();
                        case 3:
                            i = e.sent.map.npc, t = o(i, s);
                        case 5:
                            if (t) {
                                e.next = 13;
                                break
                            }
                            return l = r.indexOf(n), n = r[l < r.length - 1 ? l + 1 : 0], e.next = 10, c.task.move.apply(c.task, (0, a.default)(n));
                        case 10:
                            return e.next = 12, f(null, n, r, s);
                        case 12:
                            return e.abrupt("return");
                        case 13:
                            return e.next = 15, c.task.sleep();
                        case 15:
                            return e.next = 17, c.task.send(t, ["[~1]", "mps]", "你得到", "需要", "明天再来"]);
                        case 17:
                            return p = e.sent, d = p.index, e.next = 21, c.task.sleep();
                        case 21:
                            e.t0 = d, e.next = 2 === e.t0 || 4 === e.t0 ? 24 : 1 === e.t0 ? 25 : 0 === e.t0 ? 32 : 3 === e.t0 ? 48 : 75;
                            break;
                        case 24:
                            return e.abrupt("break", 75);
                        case 25:
                            return e.next = 27, c.task.sleep();
                        case 27:
                            return e.next = 29, c.task.send("cl").sleep(1e3);
                        case 29:
                            return e.next = 31, f(null, n, r, s);
                        case 31:
                            return e.abrupt("break", 75);
                        case 32:
                            return e.next = 34, c.task.send("1", ["mps]", "你得到", "需要"]);
                        case 34:
                            if (x = e.sent, h = x.index, 0 !== h) {
                                e.next = 46;
                                break
                            }
                            return e.next = 39, c.task.sleep();
                        case 39:
                            return e.next = 41, c.task.send("cl").sleep(1e3);
                        case 41:
                            return e.next = 43, f(null, n, r, s);
                        case 43:
                            return e.abrupt("break", 75);
                        case 46:
                            if (1 !== h) {
                                e.next = 48;
                                break
                            }
                            return e.abrupt("break", 75);
                        case 48:
                            u.default.reset(), e.t1 = s, e.next = "噩梦" === e.t1 ? 52 : "困难" === e.t1 ? 56 : "普通" === e.t1 ? 60 : 64;
                            break;
                        case 52:
                            return e.next = 54, c.task.move.apply(c.task, (0, a.default)(r[1]));
                        case 54:
                            return u.default.set({
                                code: ["npc 1000 h", "npc 1001 h", "npc 1002 h"],
                                find: /需要.*?[:：]\s*10\s*\/\s*10/
                            }), e.abrupt("break", 64);
                        case 56:
                            return e.next = 58, c.task.move.apply(c.task, (0, a.default)(r[1]));
                        case 58:
                            return u.default.set({
                                code: ["kill"],
                                find: /需要.*?[:：]\s*30\s*\/\s*30/
                            }), e.abrupt("break", 64);
                        case 60:
                            return e.next = 62, c.task.move.apply(c.task, (0, a.default)(r[2]));
                        case 62:
                            return u.default.set({
                                code: ["kill"],
                                find: /需要.*?[:：]\s*99\s*\/\s*99/
                            }), e.abrupt("break", 64);
                        case 64:
                            return e.next = 66, c.task.sleep();
                        case 66:
                            return e.next = 68, u.default.start(!1, !1);
                        case 68:
                            return e.next = 70, c.task.sleep();
                        case 70:
                            return e.next = 72, c.task.move.apply(c.task, (0, a.default)(n));
                        case 72:
                            return e.next = 74, f(null, n, r, s);
                        case 74:
                            return e.abrupt("break", 75);
                        case 75:
                        case "end":
                            return e.stop()
                    }
                }), e)
            }))), l.apply(this, arguments)
        }
        var p = new c.Task({
            title: "颠倒的童话",
            tags: ["event"],
            form: [{
                title: "任务类型",
                type: "picker",
                range: [{
                    title: "普通",
                    code: ""
                }, {
                    title: "困难",
                    code: ""
                }, {
                    title: "噩梦",
                    code: ""
                }],
                value: 0
            }]
        }, (function() {
            var e = this.form[0],
                t = e.range[e.value].title;

            function n() {
                return r.apply(this, arguments)
            }

            function r() {
                return r = (0, s.default)(regeneratorRuntime.mark((function e() {
                    var n, r, s, u, l, p, d, x, h, k, v, m, b, g, y;
                    return regeneratorRuntime.wrap((function(e) {
                        while (1) switch (e.prev = e.next) {
                            case 0:
                                return e.next = 2, c.task.move("tonghua 100", "童话之森");
                            case 2:
                                return e.next = 4, c.task.sleep();
                            case 4:
                                return e.next = 6, (0, c.getMainDataAsync)();
                            case 6:
                                return n = e.sent.map.npc, r = n.find((function(e) {
                                    var t = e.code;
                                    return "npc 1000" === t
                                })), s = r.list.find((function(e) {
                                    var t = e.title;
                                    return t.includes("刷新")
                                })), e.next = 11, c.task.sleep();
                            case 11:
                                return e.next = 13, c.task.send("".concat(r.code, " ").concat(s.code), ["[~1]", "明天再来"]);
                            case 13:
                                if (u = e.sent, l = u.index, 0 !== l) {
                                    e.next = 20;
                                    break
                                }
                                return e.next = 18, c.task.sleep();
                            case 18:
                                return e.next = 20, c.task.send("1", "重置好了");
                            case 20:
                                return e.next = 22, (0, c.getMainDataAsync)();
                            case 22:
                                if (n = e.sent.map.npc, r = n.find((function(e) {
                                        var t = e.code;
                                        return "npc 1000" === t
                                    })), p = r.list.find((function(e) {
                                        var t = e.title;
                                        return t.includes("抽取任务")
                                    })), !p) {
                                    e.next = 34;
                                    break
                                }
                                return e.next = 28, c.task.sleep();
                            case 28:
                                return e.next = 30, c.task.send("".concat(r.code, " ").concat(p.code), ["[~1]"]);
                            case 30:
                                return e.next = 32, c.task.sleep();
                            case 32:
                                return e.next = 34, c.task.send("1", "请再撞NPC");
                            case 34:
                                return e.next = 36, (0, c.getMainDataAsync)();
                            case 36:
                                if (n = e.sent.map.npc, r = n.find((function(e) {
                                        var t = e.code;
                                        return "npc 1000" === t
                                    })), d = r.list.find((function(e) {
                                        var t = e.title;
                                        return t.includes("领取任务")
                                    })), !d) {
                                    e.next = 52;
                                    break
                                }
                                return e.next = 42, c.task.sleep();
                            case 42:
                                return e.next = 44, c.task.send("".concat(r.code, " ").concat(d.code), ["[~1]"]);
                            case 44:
                                return e.next = 46, c.task.sleep();
                            case 46:
                                return e.next = 48, c.task.send("1", "mps]");
                            case 48:
                                return e.next = 50, c.task.sleep();
                            case 50:
                                return e.next = 52, c.task.send("cl").sleep(1e3);
                            case 52:
                                x = 0;
                            case 53:
                                if (!(x < i.length)) {
                                    e.next = 86;
                                    break
                                }
                                h = i[x], k = h.maps, v = 0;
                            case 57:
                                if (!(v < k.length)) {
                                    e.next = 83;
                                    break
                                }
                                return m = k[v], e.next = 61, c.task.sleep();
                            case 61:
                                return e.next = 63, c.task.move.apply(c.task, (0, a.default)(m));
                            case 63:
                                return e.next = 65, (0, c.getMainDataAsync)();
                            case 65:
                                if (b = e.sent.map.npc, g = o(b, "领取任务"), !g) {
                                    e.next = 72;
                                    break
                                }
                                return e.next = 70, c.task.sleep();
                            case 70:
                                return e.next = 72, c.task.send(g, ["领取任务了"]);
                            case 72:
                                return e.next = 74, (0, c.getMainDataAsync)();
                            case 74:
                                if (b = e.sent.map.npc, y = o(b, t), !y) {
                                    e.next = 80;
                                    break
                                }
                                return e.next = 79, f(y, m, k, t);
                            case 79:
                                return e.abrupt("return");
                            case 80:
                                v++, e.next = 57;
                                break;
                            case 83:
                                x++, e.next = 53;
                                break;
                            case 86:
                            case "end":
                                return e.stop()
                        }
                    }), e)
                }))), r.apply(this, arguments)
            }
            return n()
        }));
        t.default = p
    },
    "626a": function(e, t, n) {
        var r = n("2d95");
        e.exports = Object("z").propertyIsEnumerable(0) ? Object : function(e) {
            return "String" == r(e) ? e.split("") : Object(e)
        }
    },
    "62a0": function(e, t) {
        var n = 0,
            r = Math.random();
        e.exports = function(e) {
            return "Symbol(".concat(void 0 === e ? "" : e, ")_", (++n + r).toString(36))
        }
    },
    "63b6": function(e, t, n) {
        var r = n("e53d"),
            a = n("584a"),
            s = n("d864"),
            c = n("35e8"),
            u = n("07e3"),
            i = "prototype",
            o = function(e, t, n) {
                var f, l, p, d = e & o.F,
                    x = e & o.G,
                    h = e & o.S,
                    k = e & o.P,
                    v = e & o.B,
                    m = e & o.W,
                    b = x ? a : a[t] || (a[t] = {}),
                    g = b[i],
                    y = x ? r : h ? r[t] : (r[t] || {})[i];
                for (f in x && (n = t), n) l = !d && y && void 0 !== y[f], l && u(b, f) || (p = l ? y[f] : n[f], b[f] = x && "function" != typeof y[f] ? n[f] : v && l ? s(p, r) : m && y[f] == p ? function(e) {
                    var t = function(t, n, r) {
                        if (this instanceof e) {
                            switch (arguments.length) {
                                case 0:
                                    return new e;
                                case 1:
                                    return new e(t);
                                case 2:
                                    return new e(t, n)
                            }
                            return new e(t, n, r)
                        }
                        return e.apply(this, arguments)
                    };
                    return t[i] = e[i], t
                }(p) : k && "function" == typeof p ? s(Function.call, p) : p, k && ((b.virtual || (b.virtual = {}))[f] = p, e & o.R && g && !g[f] && c(g, f, p)))
            };
        o.F = 1, o.G = 2, o.S = 4, o.P = 8, o.B = 16, o.W = 32, o.U = 64, o.R = 128, e.exports = o
    },
    "650f": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("6762"), n("2fdb"), n("7514"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = r(n("275e")),
            u = new s.Task({
                title: "彩云之争",
                tags: ["event"]
            }, (function() {
                function e() {
                    return t.apply(this, arguments)
                }

                function t() {
                    return t = (0, a.default)(regeneratorRuntime.mark((function t() {
                        var n, r, a, u, i, o, f, l;
                        return regeneratorRuntime.wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, s.task.sleep();
                                case 2:
                                    return t.next = 4, (0, s.getMainDataAsync)();
                                case 4:
                                    return n = t.sent.map.npc, r = n.find((function(e) {
                                        var t = e.code;
                                        return "npc 1001" === t
                                    })), a = r.list, u = a.find((function(e) {
                                        var t = e.title;
                                        return t.includes("彩云之争")
                                    })), t.next = 9, s.task.send("npc 1001 ".concat(u.code), ["[~1]", "需要击败", "请明天再来吧"]);
                                case 9:
                                    if (i = t.sent, o = i.index, 0 !== o) {
                                        t.next = 30;
                                        break
                                    }
                                    return t.next = 14, s.task.sleep();
                                case 14:
                                    return t.next = 16, s.task.send("1", ["m mps]", "得到"]);
                                case 16:
                                    if (f = t.sent, l = f.index, 0 !== l) {
                                        t.next = 25;
                                        break
                                    }
                                    return t.next = 21, s.task.sleep();
                                case 21:
                                    return t.next = 23, s.task.send("cl", ["cnt"]);
                                case 23:
                                    t.next = 28;
                                    break;
                                case 25:
                                    return t.next = 27, e();
                                case 27:
                                    return t.abrupt("return", t.sent);
                                case 28:
                                    t.next = 32;
                                    break;
                                case 30:
                                    if (2 !== o) {
                                        t.next = 32;
                                        break
                                    }
                                    return t.abrupt("return");
                                case 32:
                                    return c.default.reset(), c.default.set({
                                        code: ["npc 1000 0", "npc 1000 1", "npc 1000 2", "npc 1000 3", "npc 1001 0", "npc 1001 1", "npc 1001 2", "npc 1001 3", "npc 1001 4", "npc 1001 5", "npc 1001 6", "npc 1001 7"],
                                        killMax: 12
                                    }), t.next = 36, c.default.start(!1, !1);
                                case 36:
                                    return t.next = 38, e();
                                case 38:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    }))), t.apply(this, arguments)
                }
                return s.task.move("lbsc 233", "彩云谷").then(e)
            }));
        t.default = u
    },
    "656e": function(e, t, n) {
        "use strict";
        var r = n("79aa");

        function a(e) {
            var t, n;
            this.promise = new e((function(e, r) {
                if (void 0 !== t || void 0 !== n) throw TypeError("Bad Promise constructor");
                t = e, n = r
            })), this.resolve = r(t), this.reject = r(n)
        }
        e.exports.f = function(e) {
            return new a(e)
        }
    },
    "66f2": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("6b54"), n("3b2b"), n("28a5"), n("f559"), n("c5f6"), n("4917"), n("7514"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = r(n("275e")),
            u = new s.Task({
                title: "赏金任务",
                tags: ["event"],
                form: [{
                    title: "筛选任务",
                    type: "picker",
                    range: ["暗怪", "守护者"],
                    value: 0
                }]
            }, (function() {
                var e = this.form[0].value;

                function t() {
                    return n.apply(this, arguments)
                }

                function n() {
                    return n = (0, a.default)(regeneratorRuntime.mark((function n() {
                        var r, a, c, u, i;
                        return regeneratorRuntime.wrap((function(n) {
                            while (1) switch (n.prev = n.next) {
                                case 0:
                                    return n.next = 2, s.task.sleep();
                                case 2:
                                    return n.next = 4, s.task.send("npc 1000 0", ["你每天只能完成", "您今天已经完成10个任务啦"]);
                                case 4:
                                    if (r = n.sent, a = r.index, c = r.text, 1 !== a) {
                                        n.next = 9;
                                        break
                                    }
                                    throw new Error(c);
                                case 9:
                                    return n.next = 11, s.task.sleep();
                                case 11:
                                    return n.next = 13, s.task.send("yes", ["恭喜你获得了"]);
                                case 13:
                                    if (u = n.sent, i = u.text, !/征服侍女|征服女王/.test(i) && (e ? /守护者/.test(i) : !/守护者/.test(i))) {
                                        n.next = 18;
                                        break
                                    }
                                    return n.next = 18, t();
                                case 18:
                                case "end":
                                    return n.stop()
                            }
                        }), n)
                    }))), n.apply(this, arguments)
                }

                function r() {
                    return u.apply(this, arguments)
                }

                function u() {
                    return u = (0, a.default)(regeneratorRuntime.mark((function n() {
                        var a, u, i, o, f, l, p, d, x, h, k, v, m, b, g, y, w, _, R;
                        return regeneratorRuntime.wrap((function(n) {
                            while (1) switch (n.prev = n.next) {
                                case 0:
                                    return n.next = 2, s.task.sleep();
                                case 2:
                                    return n.next = 4, s.task.move("hywg 101", "王国入口");
                                case 4:
                                    return n.next = 6, (0, s.getMainDataAsync)();
                                case 6:
                                    if (a = n.sent.map.npc, u = a.find((function(e) {
                                            var t = e.code;
                                            return "npc 1000" === t
                                        })), i = u.list, o = i.find((function(t) {
                                            var n = t.code,
                                                r = t.title;
                                            return "~q0" === n && !(/征服侍女|征服女王/.test(r) || (e ? !/守护者/.test(r) : /守护者/.test(r)))
                                        })), o) {
                                        n.next = 12;
                                        break
                                    }
                                    return n.next = 12, t();
                                case 12:
                                    return n.next = 14, s.task.sleep();
                                case 14:
                                    return n.next = 16, s.task.send("npc 1000 ~q0", ["幻影猎手", "需要"]);
                                case 16:
                                    if (l = n.sent, p = l.index, d = l.text, x = d.match(/需要击败(\d+)个.+?已击败(\d+)个/), !(0 === p || x && Number(x[1]) >= Number(x[2]))) {
                                        n.next = 30;
                                        break
                                    }
                                    return n.next = 23, s.task.sleep();
                                case 23:
                                    return n.next = 25, s.task.send("1", ["[~0 mps]", "得到了", "需要", "cnt"]);
                                case 25:
                                    h = n.sent, k = h.index, f = k, n.next = 31;
                                    break;
                                case 30:
                                    f = 2;
                                case 31:
                                    if (1 !== f) {
                                        n.next = 37;
                                        break
                                    }
                                    return n.next = 34, r();
                                case 34:
                                    return n.abrupt("return", n.sent);
                                case 37:
                                    if (2 !== f && 3 !== f) {
                                        n.next = 50;
                                        break
                                    }
                                    return n.next = 40, s.task.sleep();
                                case 40:
                                    return n.next = 42, s.task.send("9 1", "查看任务");
                                case 42:
                                    return v = n.sent, m = v.text, b = (0, s.parseMsg)(m).data.list, g = b.find((function(e) {
                                        var t = e.title;
                                        return t.startsWith("赏金")
                                    })), n.next = 48, s.task.sleep();
                                case 48:
                                    return n.next = 50, s.task.send("".concat(g.code, " m mps"), "选择地图目标");
                                case 50:
                                    return n.next = 52, s.task.sleep();
                                case 52:
                                    return n.next = 54, s.task.send("0 mps", ["<mp>"]);
                                case 54:
                                    return y = n.sent, w = y.text, _ = w.split("|"), _ = _.slice(_.length - 2), R = w.match(new RegExp("00".concat(Number(_[0]).toString(16).toUpperCase(), "(.+?)\\$")))[1], n.next = 61, s.task.sleep();
                                case 61:
                                    return n.next = 63, s.task.move("".concat(_[1], " ").concat(_[0]), R);
                                case 63:
                                    return n.next = 65, s.task.sleep();
                                case 65:
                                    return c.default.reset(), c.default.set({
                                        code: e ? "npc 1000 h" : "kill",
                                        find: e ? /守护者：1 \/ 1/ : /需要击败.+?：10 \/ 10|\(?需要: 5 \/ 5\)?/
                                    }), n.next = 69, c.default.start(!1, !1);
                                case 69:
                                    return n.next = 71, r();
                                case 71:
                                case "end":
                                    return n.stop()
                            }
                        }), n)
                    }))), u.apply(this, arguments)
                }
                return r()
            }));
        t.default = u
    },
    6718: function(e, t, n) {
        var r = n("e53d"),
            a = n("584a"),
            s = n("b8e3"),
            c = n("ccb9"),
            u = n("d9f6").f;
        e.exports = function(e) {
            var t = a.Symbol || (a.Symbol = s ? {} : r.Symbol || {});
            "_" == e.charAt(0) || e in t || u(t, e, {
                value: c.f(e)
            })
        }
    },
    6762: function(e, t, n) {
        "use strict";
        var r = n("5ca1"),
            a = n("c366")(!0);
        r(r.P, "Array", {
            includes: function(e) {
                return a(this, e, arguments.length > 1 ? arguments[1] : void 0)
            }
        }), n("9c6c")("includes")
    },
    "67bb": function(e, t, n) {
        e.exports = n("f921")
    },
    "67c2": function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("6762"), n("2fdb"), n("7514");
        var r = n("3f7e"),
            a = new r.Task({
                title: "使用刹那风华(月亮石)",
                tags: ["item"]
            }, (function() {
                function e(e) {
                    return "停止任务" === e ? Promise.reject("停止任务") : r.task.sleep().then((function() {
                        return (0, r.findItem)(/(^|\s)精灵王月亮石($|\s)/)
                    })).then((function(e) {
                        var t = e.code;
                        return r.task.sleep().then((function() {
                            return r.task.send("".concat(t, " 0"), ["请选择您要兑换的物品"])
                        }))
                    })).then((function(e) {
                        var t = e.text,
                            n = (0, r.parseMsg)(t).data.list;
                        return r.task.sleep().then((function() {
                            return r.task.send(n.find((function(e) {
                                return e.title.includes("刹那风华")
                            })).code, ["兑换失败", "兑换成功"])
                        }))
                    })).then((function(e) {
                        var n = e.index,
                            r = e.text;
                        if (0 === n) throw new Error(r);
                        return t()
                    }))
                }

                function t() {
                    return r.task.sleep().then((function() {
                        return (0, r.findItem)("刹那风华")
                    })).catch(e).catch((function(t) {
                        return "停止任务" === t ? Promise.reject("停止任务") : (0, r.findItem)("精灵王月亮石包").then((function(t) {
                            var n = t.code;
                            return r.task.sleep().then((function() {
                                return r.task.send("".concat(n, " 0"), ["领取成功"])
                            })).then(e)
                        }))
                    })).then((function(e) {
                        var n = e.code;
                        return r.task.sleep().then((function() {
                            return r.task.send("".concat(n, " 0"), ["认证完毕"])
                        })).then(t)
                    }))
                }
                return r.task.sleep().then(t)
            }));
        t.default = a
    },
    6821: function(e, t, n) {
        var r = n("626a"),
            a = n("be13");
        e.exports = function(e) {
            return r(a(e))
        }
    },
    "696e": function(e, t, n) {
        n("c207"), n("1654"), n("6c1c"), n("24c5"), n("3c11"), n("43fc"), e.exports = n("584a").Promise
    },
    "69a8": function(e, t) {
        var n = {}.hasOwnProperty;
        e.exports = function(e, t) {
            return n.call(e, t)
        }
    },
    "69d3": function(e, t, n) {
        n("6718")("asyncIterator")
    },
    "6a99": function(e, t, n) {
        var r = n("d3f4");
        e.exports = function(e, t) {
            if (!r(e)) return e;
            var n, a;
            if (t && "function" == typeof(n = e.toString) && !r(a = n.call(e))) return a;
            if ("function" == typeof(n = e.valueOf) && !r(a = n.call(e))) return a;
            if (!t && "function" == typeof(n = e.toString) && !r(a = n.call(e))) return a;
            throw TypeError("Can't convert object to primitive value")
        }
    },
    "6abf": function(e, t, n) {
        var r = n("e6f3"),
            a = n("1691").concat("length", "prototype");
        t.f = Object.getOwnPropertyNames || function(e) {
            return r(e, a)
        }
    },
    "6b4c": function(e, t) {
        var n = {}.toString;
        e.exports = function(e) {
            return n.call(e).slice(8, -1)
        }
    },
    "6b4f": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("c5f6"), n("6b54"), n("3b2b"), n("4917"), n("28a5"), n("7514"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = r(n("275e")),
            u = new s.Task({
                title: "英雄之家-日常任务",
                tags: ["event"]
            }, (function() {
                function e() {
                    return t.apply(this, arguments)
                }

                function t() {
                    return t = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var t, n;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.next = 4, s.task.send("npc 1002 0", ["你每天只能完成", "请明天再来吧"]);
                                case 4:
                                    if (t = e.sent, n = t.index, 1 !== n) {
                                        e.next = 16;
                                        break
                                    }
                                    return e.next = 9, s.task.sleep();
                                case 9:
                                    return e.next = 11, s.task.send("npc 1002 1", ["每日日常奖励"]);
                                case 11:
                                    return e.next = 13, s.task.sleep();
                                case 13:
                                    return e.next = 15, s.task.send("awardtype1", ["你得到", "已经"]);
                                case 15:
                                    throw new Error("任务完成");
                                case 16:
                                    return e.next = 18, s.task.sleep();
                                case 18:
                                    return e.next = 20, s.task.send("yes", ["为你发布了"]);
                                case 20:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), t.apply(this, arguments)
                }

                function n() {
                    return r.apply(this, arguments)
                }

                function r() {
                    return r = (0, a.default)(regeneratorRuntime.mark((function t() {
                        var r, a, u, i, o, f, l, p, d, x, h, k, v, m, b, g, y;
                        return regeneratorRuntime.wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, s.task.sleep();
                                case 2:
                                    return t.next = 4, s.task.move("yxzl 101", "英雄之家");
                                case 4:
                                    return t.next = 6, (0, s.getMainDataAsync)();
                                case 6:
                                    if (r = t.sent.map.npc, a = r.find((function(e) {
                                            var t = e.code;
                                            return "npc 1002" === t
                                        })), u = a.list, i = u.find((function(e) {
                                            var t = e.code;
                                            return "~q0" === t
                                        })), i) {
                                        t.next = 12;
                                        break
                                    }
                                    return t.next = 12, e();
                                case 12:
                                    return t.next = 14, s.task.sleep();
                                case 14:
                                    return t.next = 16, s.task.send("npc 1002 ~q0", ["[~1]", "需要"]);
                                case 16:
                                    if (f = t.sent, l = f.index, 0 !== l) {
                                        t.next = 28;
                                        break
                                    }
                                    return t.next = 21, s.task.sleep();
                                case 21:
                                    return t.next = 23, s.task.send("1", ["[~0 mps]", "得到了", "需要"]);
                                case 23:
                                    p = t.sent, d = p.index, o = d, t.next = 29;
                                    break;
                                case 28:
                                    o = 2;
                                case 29:
                                    if (1 !== o) {
                                        t.next = 35;
                                        break
                                    }
                                    return t.next = 32, n();
                                case 32:
                                    return t.abrupt("return", t.sent);
                                case 35:
                                    if (2 !== o) {
                                        t.next = 48;
                                        break
                                    }
                                    return t.next = 38, s.task.sleep();
                                case 38:
                                    return t.next = 40, s.task.send("9 1", "查看任务");
                                case 40:
                                    return x = t.sent, h = x.text, k = (0, s.parseMsg)(h).data.list, v = k.find((function(e) {
                                        var t = e.title;
                                        return (0, s.clearText)(t) === (0, s.clearText)(i.title)
                                    })), t.next = 46, s.task.sleep();
                                case 46:
                                    return t.next = 48, s.task.send("".concat(v.code, " m mps"), "选择地图目标");
                                case 48:
                                    return t.next = 50, s.task.sleep();
                                case 50:
                                    return t.next = 52, s.task.send("0 mps", ["<mp>"]);
                                case 52:
                                    return m = t.sent, b = m.text, g = b.split("|"), g = g.slice(g.length - 2), y = b.match(new RegExp("00".concat(Number(g[0]).toString(16).toUpperCase(), "(.+?)\\$")))[1], t.next = 59, s.task.sleep();
                                case 59:
                                    return t.next = 61, s.task.move("".concat(g[1], " ").concat(g[0]), y);
                                case 61:
                                    return t.next = 63, s.task.sleep();
                                case 63:
                                    return c.default.reset(), c.default.set({
                                        code: ["npc 1000 h", "kill"],
                                        find: /需要击败.+?：10 \/ 10|\(?需要: 10 \/ 10\)?/
                                    }), t.next = 67, c.default.start(!1, !1);
                                case 67:
                                    return t.next = 69, n();
                                case 69:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    }))), r.apply(this, arguments)
                }
                return n()
            }));
        t.default = u
    },
    "6b54": function(e, t, n) {
        "use strict";
        n("3846");
        var r = n("cb7c"),
            a = n("0bfb"),
            s = n("9e1e"),
            c = "toString",
            u = /./ [c],
            i = function(e) {
                n("2aba")(RegExp.prototype, c, e, !0)
            };
        n("79e5")((function() {
            return "/a/b" != u.call({
                source: "a",
                flags: "b"
            })
        })) ? i((function() {
            var e = r(this);
            return "/".concat(e.source, "/", "flags" in e ? e.flags : !s && e instanceof RegExp ? a.call(e) : void 0)
        })) : u.name != c && i((function() {
            return u.call(this)
        }))
    },
    "6beb": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("4917"), n("6762"), n("2fdb"), n("7514"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = ["普通道具兑换", "高级道具兑换", "一品抗性宝石"],
            u = new s.Task({
                title: "勇者之心兑换道具",
                tags: ["change"],
                options: {
                    target1: void 0,
                    target2: void 0
                },
                before: function() {
                    var e = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var t, n, r, a, u, i;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return t = this.options, e.next = 3, (0, s.showActionSheet)({
                                        itemList: c
                                    });
                                case 3:
                                    if (n = e.sent, r = n.tapIndex, !(r < 0)) {
                                        e.next = 7;
                                        break
                                    }
                                    throw new Error("取消");
                                case 7:
                                    return t.target1 = c[r], a = t.target1 === c[2] ? ["一品.昏睡抗性宝石", "一品.混乱抗性宝石", "一品.诅咒抗性宝石", "一品.麻痹抗性宝石", "一品.封印抗性宝石"] : ["诅咒抗性成长卡", "昏睡抗性成长卡", "麻痹抗性成长卡", "混乱抗性成长卡", "封印抗性成长卡"], e.next = 11, (0, s.showActionSheet)({
                                        itemList: a
                                    });
                                case 11:
                                    if (u = e.sent, i = u.tapIndex, !(i < 0)) {
                                        e.next = 15;
                                        break
                                    }
                                    throw new Error("取消");
                                case 15:
                                    t.target2 = a[i];
                                case 16:
                                case "end":
                                    return e.stop()
                            }
                        }), e, this)
                    })));

                    function t() {
                        return e.apply(this, arguments)
                    }
                    return t
                }()
            }, (function() {
                var e = this.options;

                function t() {
                    return n.apply(this, arguments)
                }

                function n() {
                    return n = (0, a.default)(regeneratorRuntime.mark((function n() {
                        var r, a, u, i, o, f, l, p, d, x, h, k, v, m;
                        return regeneratorRuntime.wrap((function(n) {
                            while (1) switch (n.prev = n.next) {
                                case 0:
                                    return n.next = 2, s.task.sleep();
                                case 2:
                                    if (e.target1 !== c[2]) {
                                        n.next = 6;
                                        break
                                    }
                                    r = {
                                        code: "npc 1002 2"
                                    }, n.next = 12;
                                    break;
                                case 6:
                                    return n.next = 8, s.task.send("npc 1003 0", "<menu");
                                case 8:
                                    a = n.sent, u = a.text, i = (0, s.parseMsg)(u).data.list, r = i.find((function(t) {
                                        var n = t.title;
                                        return (0, s.clearText)(n).includes(e.target1)
                                    }));
                                case 12:
                                    if (!r) {
                                        n.next = 39;
                                        break
                                    }
                                    return n.next = 15, s.task.sleep();
                                case 15:
                                    return n.next = 17, s.task.send(r.code, "<menu");
                                case 17:
                                    return o = n.sent, f = o.text, l = (0, s.parseMsg)(f).data.list, p = l.find((function(t) {
                                        var n = t.title;
                                        return (0, s.clearText)(n).includes(e.target2)
                                    })), n.next = 23, s.task.sleep();
                                case 23:
                                    return n.next = 25, s.task.send(p.code, ["_ok]", "[ok]", "需要", "才有资格", "才能兑换", "无法购买"]);
                                case 25:
                                    if (d = n.sent, x = d.index, h = d.text, 0 !== x && 1 !== x) {
                                        n.next = 39;
                                        break
                                    }
                                    return n.next = 31, s.task.sleep();
                                case 31:
                                    return k = h.match(/\[(\S+_ok)\]/), n.next = 34, s.task.send(0 === x ? k[1] : "ok", ["购买了", "对不起"]);
                                case 34:
                                    if (v = n.sent, m = v.index, 0 !== m) {
                                        n.next = 39;
                                        break
                                    }
                                    return n.next = 39, t();
                                case 39:
                                case "end":
                                    return n.stop()
                            }
                        }), n)
                    }))), n.apply(this, arguments)
                }
                return s.task.move("yxzl 101", "英雄之家").then(t)
            }));
        t.default = u
    },
    "6c1c": function(e, t, n) {
        n("c367");
        for (var r = n("e53d"), a = n("35e8"), s = n("481b"), c = n("5168")("toStringTag"), u = "CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","), i = 0; i < u.length; i++) {
            var o = u[i],
                f = r[o],
                l = f && f.prototype;
            l && !l[c] && a(l, c, o), s[o] = s.Array
        }
    },
    "6d08": function(e, t, n) {
        (function(t, r, a) {
            e.exports = r(n("21bf"), n("38ba"))
        })(0, (function(e) {
            return function(t) {
                var n = e,
                    r = n.lib,
                    a = r.CipherParams,
                    s = n.enc,
                    c = s.Hex,
                    u = n.format;
                u.Hex = {
                    stringify: function(e) {
                        return e.ciphertext.toString(c)
                    },
                    parse: function(e) {
                        var t = c.parse(e);
                        return a.create({
                            ciphertext: t
                        })
                    }
                }
            }(), e.format.Hex
        }))
    },
    "6d62": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("6762"), n("2fdb"), n("7514"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = new s.Task({
                title: "项链经验兑换银币",
                tags: ["change"]
            }, (0, a.default)(regeneratorRuntime.mark((function e() {
                var t, n, r, a, c, u;
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                            return e.next = 2, s.task.sleep();
                        case 2:
                            return e.next = 4, (0, s.findItem)(/吸魂者.+装备中/, "1", 1);
                        case 4:
                            return t = e.sent, n = t.code, r = t.list, e.next = 9, s.task.sleep();
                        case 9:
                            return a = r.find((function(e) {
                                var t = e.title;
                                return t.includes("兑换银币")
                            })), e.next = 12, s.task.send("".concat(n, " ").concat(a.code), ["[yes]", "当前的储存量不足"]);
                        case 12:
                            if (c = e.sent, u = c.index, 0 !== u) {
                                e.next = 19;
                                break
                            }
                            return e.next = 17, s.task.sleep();
                        case 17:
                            return e.next = 19, s.task.send("yes", "兑换成功");
                        case 19:
                        case "end":
                            return e.stop()
                    }
                }), e)
            }))));
        t.default = c
    },
    "71c1": function(e, t, n) {
        var r = n("3a38"),
            a = n("25eb");
        e.exports = function(e) {
            return function(t, n) {
                var s, c, u = String(a(t)),
                    i = r(n),
                    o = u.length;
                return i < 0 || i >= o ? e ? "" : void 0 : (s = u.charCodeAt(i), s < 55296 || s > 56319 || i + 1 === o || (c = u.charCodeAt(i + 1)) < 56320 || c > 57343 ? e ? u.charAt(i) : s : e ? u.slice(i, i + 2) : c - 56320 + (s - 55296 << 10) + 65536)
            }
        }
    },
    "72fe": function(e, t, n) {
        (function(t, r) {
            e.exports = r(n("21bf"))
        })(0, (function(e) {
            return function(t) {
                var n = e,
                    r = n.lib,
                    a = r.WordArray,
                    s = r.Hasher,
                    c = n.algo,
                    u = [];
                (function() {
                    for (var e = 0; e < 64; e++) u[e] = 4294967296 * t.abs(t.sin(e + 1)) | 0
                })();
                var i = c.MD5 = s.extend({
                    _doReset: function() {
                        this._hash = new a.init([1732584193, 4023233417, 2562383102, 271733878])
                    },
                    _doProcessBlock: function(e, t) {
                        for (var n = 0; n < 16; n++) {
                            var r = t + n,
                                a = e[r];
                            e[r] = 16711935 & (a << 8 | a >>> 24) | 4278255360 & (a << 24 | a >>> 8)
                        }
                        var s = this._hash.words,
                            c = e[t + 0],
                            i = e[t + 1],
                            d = e[t + 2],
                            x = e[t + 3],
                            h = e[t + 4],
                            k = e[t + 5],
                            v = e[t + 6],
                            m = e[t + 7],
                            b = e[t + 8],
                            g = e[t + 9],
                            y = e[t + 10],
                            w = e[t + 11],
                            _ = e[t + 12],
                            R = e[t + 13],
                            M = e[t + 14],
                            j = e[t + 15],
                            E = s[0],
                            S = s[1],
                            O = s[2],
                            P = s[3];
                        E = o(E, S, O, P, c, 7, u[0]), P = o(P, E, S, O, i, 12, u[1]), O = o(O, P, E, S, d, 17, u[2]), S = o(S, O, P, E, x, 22, u[3]), E = o(E, S, O, P, h, 7, u[4]), P = o(P, E, S, O, k, 12, u[5]), O = o(O, P, E, S, v, 17, u[6]), S = o(S, O, P, E, m, 22, u[7]), E = o(E, S, O, P, b, 7, u[8]), P = o(P, E, S, O, g, 12, u[9]), O = o(O, P, E, S, y, 17, u[10]), S = o(S, O, P, E, w, 22, u[11]), E = o(E, S, O, P, _, 7, u[12]), P = o(P, E, S, O, R, 12, u[13]), O = o(O, P, E, S, M, 17, u[14]), S = o(S, O, P, E, j, 22, u[15]), E = f(E, S, O, P, i, 5, u[16]), P = f(P, E, S, O, v, 9, u[17]), O = f(O, P, E, S, w, 14, u[18]), S = f(S, O, P, E, c, 20, u[19]), E = f(E, S, O, P, k, 5, u[20]), P = f(P, E, S, O, y, 9, u[21]), O = f(O, P, E, S, j, 14, u[22]), S = f(S, O, P, E, h, 20, u[23]), E = f(E, S, O, P, g, 5, u[24]), P = f(P, E, S, O, M, 9, u[25]), O = f(O, P, E, S, x, 14, u[26]), S = f(S, O, P, E, b, 20, u[27]), E = f(E, S, O, P, R, 5, u[28]), P = f(P, E, S, O, d, 9, u[29]), O = f(O, P, E, S, m, 14, u[30]), S = f(S, O, P, E, _, 20, u[31]), E = l(E, S, O, P, k, 4, u[32]), P = l(P, E, S, O, b, 11, u[33]), O = l(O, P, E, S, w, 16, u[34]), S = l(S, O, P, E, M, 23, u[35]), E = l(E, S, O, P, i, 4, u[36]), P = l(P, E, S, O, h, 11, u[37]), O = l(O, P, E, S, m, 16, u[38]), S = l(S, O, P, E, y, 23, u[39]), E = l(E, S, O, P, R, 4, u[40]), P = l(P, E, S, O, c, 11, u[41]), O = l(O, P, E, S, x, 16, u[42]), S = l(S, O, P, E, v, 23, u[43]), E = l(E, S, O, P, g, 4, u[44]), P = l(P, E, S, O, _, 11, u[45]), O = l(O, P, E, S, j, 16, u[46]), S = l(S, O, P, E, d, 23, u[47]), E = p(E, S, O, P, c, 6, u[48]), P = p(P, E, S, O, m, 10, u[49]), O = p(O, P, E, S, M, 15, u[50]), S = p(S, O, P, E, k, 21, u[51]), E = p(E, S, O, P, _, 6, u[52]), P = p(P, E, S, O, x, 10, u[53]), O = p(O, P, E, S, y, 15, u[54]), S = p(S, O, P, E, i, 21, u[55]), E = p(E, S, O, P, b, 6, u[56]), P = p(P, E, S, O, j, 10, u[57]), O = p(O, P, E, S, v, 15, u[58]), S = p(S, O, P, E, R, 21, u[59]), E = p(E, S, O, P, h, 6, u[60]), P = p(P, E, S, O, w, 10, u[61]), O = p(O, P, E, S, d, 15, u[62]), S = p(S, O, P, E, g, 21, u[63]), s[0] = s[0] + E | 0, s[1] = s[1] + S | 0, s[2] = s[2] + O | 0, s[3] = s[3] + P | 0
                    },
                    _doFinalize: function() {
                        var e = this._data,
                            n = e.words,
                            r = 8 * this._nDataBytes,
                            a = 8 * e.sigBytes;
                        n[a >>> 5] |= 128 << 24 - a % 32;
                        var s = t.floor(r / 4294967296),
                            c = r;
                        n[15 + (a + 64 >>> 9 << 4)] = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8), n[14 + (a + 64 >>> 9 << 4)] = 16711935 & (c << 8 | c >>> 24) | 4278255360 & (c << 24 | c >>> 8), e.sigBytes = 4 * (n.length + 1), this._process();
                        for (var u = this._hash, i = u.words, o = 0; o < 4; o++) {
                            var f = i[o];
                            i[o] = 16711935 & (f << 8 | f >>> 24) | 4278255360 & (f << 24 | f >>> 8)
                        }
                        return u
                    },
                    clone: function() {
                        var e = s.clone.call(this);
                        return e._hash = this._hash.clone(), e
                    }
                });

                function o(e, t, n, r, a, s, c) {
                    var u = e + (t & n | ~t & r) + a + c;
                    return (u << s | u >>> 32 - s) + t
                }

                function f(e, t, n, r, a, s, c) {
                    var u = e + (t & r | n & ~r) + a + c;
                    return (u << s | u >>> 32 - s) + t
                }

                function l(e, t, n, r, a, s, c) {
                    var u = e + (t ^ n ^ r) + a + c;
                    return (u << s | u >>> 32 - s) + t
                }

                function p(e, t, n, r, a, s, c) {
                    var u = e + (n ^ (t | ~r)) + a + c;
                    return (u << s | u >>> 32 - s) + t
                }
                n.MD5 = s._createHelper(i), n.HmacMD5 = s._createHmacHelper(i)
            }(Math), e.MD5
        }))
    },
    7514: function(e, t, n) {
        "use strict";
        var r = n("5ca1"),
            a = n("0a49")(5),
            s = "find",
            c = !0;
        s in [] && Array(1)[s]((function() {
            c = !1
        })), r(r.P + r.F * c, "Array", {
            find: function(e) {
                return a(this, e, arguments.length > 1 ? arguments[1] : void 0)
            }
        }), n("9c6c")(s)
    },
    7581: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("96cf");
        var a = r(n("3b8d"));
        n("a481");
        var s = n("3f7e"),
            c = "龙腾虎跃",
            u = new s.Task({
                title: "潘神的花园",
                tags: ["event"],
                form: [{
                    title: "兑换任务",
                    type: "input",
                    placeholder: c,
                    value: ""
                }]
            }, (function() {
                var e = this.form[0].value.replace("活动", "") || c;

                function t() {
                    return n.apply(this, arguments)
                }

                function n() {
                    return n = (0, a.default)(regeneratorRuntime.mark((function n() {
                        var r, a, c, u;
                        return regeneratorRuntime.wrap((function(n) {
                            while (1) switch (n.prev = n.next) {
                                case 0:
                                    return r = "npc 1000", n.next = 3, (0, s.findNpcItem)({
                                        code: r
                                    }, e);
                                case 3:
                                    if (a = n.sent, !a) {
                                        n.next = 24;
                                        break
                                    }
                                    return n.next = 7, s.task.sleep();
                                case 7:
                                    return n.next = 9, s.task.send("".concat(r, " ").concat(a.code), "[~1]");
                                case 9:
                                    return n.next = 11, s.task.sleep();
                                case 11:
                                    return n.next = 13, s.task.send("1", ["mps]", "得到了", "/ 需要"]);
                                case 13:
                                    if (c = n.sent, u = c.index, 0 !== u) {
                                        n.next = 22;
                                        break
                                    }
                                    return n.next = 18, s.task.sleep();
                                case 18:
                                    return n.next = 20, s.task.send("cl", "cnt");
                                case 20:
                                    n.next = 24;
                                    break;
                                case 22:
                                    if (2 !== u) {
                                        n.next = 24;
                                        break
                                    }
                                    return n.abrupt("return");
                                case 24:
                                    return n.next = 26, t();
                                case 26:
                                case "end":
                                    return n.stop()
                            }
                        }), n)
                    }))), n.apply(this, arguments)
                }
                return s.task.move("lsj 300", "潘神的花园").then(t)
            }));
        t.default = u
    },
    "75fc": function(e, t, n) {
        "use strict";
        n.r(t), n.d(t, "default", (function() {
            return k
        }));
        var r = n("a745"),
            a = n.n(r),
            s = n("db2a");

        function c(e) {
            if (a()(e)) return Object(s["a"])(e)
        }
        var u = n("67bb"),
            i = n.n(u),
            o = n("5d58"),
            f = n.n(o),
            l = n("774e"),
            p = n.n(l);

        function d(e) {
            if ("undefined" !== typeof i.a && null != e[f.a] || null != e["@@iterator"]) return p()(e)
        }
        var x = n("e630");

        function h() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }

        function k(e) {
            return c(e) || d(e) || Object(x["a"])(e) || h()
        }
    },
    7618: function(e, t, n) {
        "use strict";
        n.r(t), n.d(t, "default", (function() {
            return u
        }));
        var r = n("67bb"),
            a = n.n(r),
            s = n("5d58"),
            c = n.n(s);

        function u(e) {
            return u = "function" == typeof a.a && "symbol" == typeof c.a ? function(e) {
                return typeof e
            } : function(e) {
                return e && "function" == typeof a.a && e.constructor === a.a && e !== a.a.prototype ? "symbol" : typeof e
            }, u(e)
        }
    },
    "765d": function(e, t, n) {
        n("6718")("observable")
    },
    "768b": function(e, t, n) {
        "use strict";
        n.r(t), n.d(t, "default", (function() {
            return d
        }));
        var r = n("a745"),
            a = n.n(r);

        function s(e) {
            if (a()(e)) return e
        }
        var c = n("67bb"),
            u = n.n(c),
            i = n("5d58"),
            o = n.n(i);

        function f(e, t) {
            var n = null == e ? null : "undefined" !== typeof u.a && e[o.a] || e["@@iterator"];
            if (null != n) {
                var r, a, s = [],
                    c = !0,
                    i = !1;
                try {
                    for (n = n.call(e); !(c = (r = n.next()).done); c = !0)
                        if (s.push(r.value), t && s.length === t) break
                } catch (f) {
                    i = !0, a = f
                } finally {
                    try {
                        c || null == n["return"] || n["return"]()
                    } finally {
                        if (i) throw a
                    }
                }
                return s
            }
        }
        var l = n("e630");

        function p() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }

        function d(e, t) {
            return s(e) || f(e, t) || Object(l["a"])(e, t) || p()
        }
    },
    7726: function(e, t) {
        var n = e.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
        "number" == typeof __g && (__g = n)
    },
    "774e": function(e, t, n) {
        e.exports = n("d2d5")
    },
    "77f1": function(e, t, n) {
        var r = n("4588"),
            a = Math.max,
            s = Math.min;
        e.exports = function(e, t) {
            return e = r(e), e < 0 ? a(e + t, 0) : s(e, t)
        }
    },
    "794b": function(e, t, n) {
        e.exports = !n("8e60") && !n("294c")((function() {
            return 7 != Object.defineProperty(n("1ec9")("div"), "a", {
                get: function() {
                    return 7
                }
            }).a
        }))
    },
    "795b": function(e, t, n) {
        e.exports = n("696e")
    },
    "79aa": function(e, t) {
        e.exports = function(e) {
            if ("function" != typeof e) throw TypeError(e + " is not a function!");
            return e
        }
    },
    "79e5": function(e, t) {
        e.exports = function(e) {
            try {
                return !!e()
            } catch (t) {
                return !0
            }
        }
    },
    "7a4d": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("6762"), n("2fdb"), n("7514"), n("c5f6"), n("28a5");
        var a = r(n("768b"));
        n("96cf");
        var s = r(n("3b8d")),
            c = n("3f7e"),
            u = new c.Task({
                title: "家族物资兑换",
                tags: ["change"],
                options: {
                    itemList: void 0,
                    maxValue: void 0,
                    target: void 0,
                    targetItem: {}
                },
                before: function() {
                    var e = (0, s.default)(regeneratorRuntime.mark((function e() {
                        var t, n, r, s, u, i, o, f, l, p, d, x;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return t = this.options, e.next = 3, (0, c.getMainDataAsync)();
                                case 3:
                                    return n = e.sent.user.server, n >= 0 && n <= 18 ? (t.itemList = ["逆技抗成长卡", "逆物抗成长卡", "技能抗性成长卡", "物理抗性成长卡", "生命宝石强化", "速度宝石强化", "防御宝石强化", "法力宝石强化", "攻击宝石强化"], t.maxValue = [30, 30, 30, 30, 20, 20, 20, 20, 20]) : (t.itemList = ["逆技抗成长卡", "逆物抗成长卡", "生命资质卡", "速度资质卡", "防御资质卡", "法力资质卡", "攻击资质卡"], t.maxValue = [60, 60, 50, 30, 50, 30, 30]), e.next = 7, (0, c.showActionSheet)({
                                        itemList: t.itemList
                                    });
                                case 7:
                                    if (r = e.sent, s = r.tapIndex, !(s < 0)) {
                                        e.next = 11;
                                        break
                                    }
                                    throw new Error("取消");
                                case 11:
                                    return t.target = s, e.next = 14, (0, c.x0popup)({
                                        title: "输入兑换范围",
                                        type: "input",
                                        inputValue: "1-".concat(t.maxValue[s])
                                    });
                                case 14:
                                    if (u = e.sent, i = u.button, o = u.text, "cancel" !== i && o) {
                                        e.next = 19;
                                        break
                                    }
                                    throw new Error("取消");
                                case 19:
                                    if (f = o.split("-"), l = (0, a.default)(f, 2), p = l[0], d = l[1], p = Number(p), d = Number(d), !(p >= 1 && p <= d && d <= t.maxValue[s])) {
                                        e.next = 27;
                                        break
                                    }
                                    t.targetItem.start = p, t.targetItem.end = d, e.next = 30;
                                    break;
                                case 27:
                                    throw x = "兑换范围输入有误", c.task.log(x), new Error(x);
                                case 30:
                                case "end":
                                    return e.stop()
                            }
                        }), e, this)
                    })));

                    function t() {
                        return e.apply(this, arguments)
                    }
                    return t
                }()
            }, (function() {
                var e = this.options,
                    t = e.targetItem.start;

                function n() {
                    return r.apply(this, arguments)
                }

                function r() {
                    return r = (0, s.default)(regeneratorRuntime.mark((function r() {
                        var a, s, u, i, o, f, l, p, d, x, h, k, v, m, b;
                        return regeneratorRuntime.wrap((function(r) {
                            while (1) switch (r.prev = r.next) {
                                case 0:
                                    return r.next = 2, c.task.sleep();
                                case 2:
                                    return r.next = 4, c.task.send("npc 1000 3", ["<menu", "还不是家族成员"]);
                                case 4:
                                    if (a = r.sent, s = a.text, u = a.index, 1 !== u) {
                                        r.next = 9;
                                        break
                                    }
                                    throw new Error(s);
                                case 9:
                                    return i = e.maxValue[e.target] / 10, r.next = 12, c.task.sleep();
                                case 12:
                                    return o = String(Math.floor((t - 1) / i) + 1), r.next = 15, c.task.send(o, ["不能进行兑换", "<menu"]);
                                case 15:
                                    if (f = r.sent, l = f.text, p = f.index, 0 !== p) {
                                        r.next = 22;
                                        break
                                    }
                                    return r.next = 21, c.task.cancel();
                                case 21:
                                    throw new Error(l);
                                case 22:
                                    return d = (0, c.parseMsg)(l).data.list, x = d.find((function(t) {
                                        var n = t.title;
                                        return n.includes(e.itemList[e.target])
                                    })), r.next = 26, c.task.sleep();
                                case 26:
                                    return r.next = 28, c.task.send("".concat(x.code, " change"), ["[yes]"]);
                                case 28:
                                    if (h = r.sent, k = h.index, 0 !== k) {
                                        r.next = 45;
                                        break
                                    }
                                    return r.next = 33, c.task.sleep();
                                case 33:
                                    return r.next = 35, c.task.send("yes", ["兑换了", "兑换条件不足"]);
                                case 35:
                                    if (v = r.sent, m = v.index, b = v.text, 1 !== m) {
                                        r.next = 40;
                                        break
                                    }
                                    throw new Error(b);
                                case 40:
                                    if (!(t < e.targetItem.end)) {
                                        r.next = 45;
                                        break
                                    }
                                    return t++, e.targetItem.start = t, r.next = 45, n();
                                case 45:
                                case "end":
                                    return r.stop()
                            }
                        }), r)
                    }))), r.apply(this, arguments)
                }
                return c.task.move("sgpy 130", "家族会馆").then(n)
            }));
        t.default = u
    },
    "7a56": function(e, t, n) {
        "use strict";
        var r = n("7726"),
            a = n("86cc"),
            s = n("9e1e"),
            c = n("2b4c")("species");
        e.exports = function(e) {
            var t = r[e];
            s && t && !t[c] && a.f(t, c, {
                configurable: !0,
                get: function() {
                    return this
                }
            })
        }
    },
    "7bbc": function(e, t, n) {
        (function(t, r, a) {
            e.exports = r(n("21bf"), n("df2f"), n("5980"))
        })(0, (function(e) {
            return function() {
                var t = e,
                    n = t.lib,
                    r = n.Base,
                    a = n.WordArray,
                    s = t.algo,
                    c = s.SHA1,
                    u = s.HMAC,
                    i = s.PBKDF2 = r.extend({
                        cfg: r.extend({
                            keySize: 4,
                            hasher: c,
                            iterations: 1
                        }),
                        init: function(e) {
                            this.cfg = this.cfg.extend(e)
                        },
                        compute: function(e, t) {
                            var n = this.cfg,
                                r = u.create(n.hasher, e),
                                s = a.create(),
                                c = a.create([1]),
                                i = s.words,
                                o = c.words,
                                f = n.keySize,
                                l = n.iterations;
                            while (i.length < f) {
                                var p = r.update(t).finalize(c);
                                r.reset();
                                for (var d = p.words, x = d.length, h = p, k = 1; k < l; k++) {
                                    h = r.finalize(h), r.reset();
                                    for (var v = h.words, m = 0; m < x; m++) d[m] ^= v[m]
                                }
                                s.concat(p), o[0]++
                            }
                            return s.sigBytes = 4 * f, s
                        }
                    });
                t.PBKDF2 = function(e, t, n) {
                    return i.create(n).compute(e, t)
                }
            }(), e.PBKDF2
        }))
    },
    "7cd6": function(e, t, n) {
        var r = n("40c3"),
            a = n("5168")("iterator"),
            s = n("481b");
        e.exports = n("584a").getIteratorMethod = function(e) {
            if (void 0 != e) return e[a] || e["@@iterator"] || s[r(e)]
        }
    },
    "7e90": function(e, t, n) {
        var r = n("d9f6"),
            a = n("e4ae"),
            s = n("c3a1");
        e.exports = n("8e60") ? Object.defineProperties : function(e, t) {
            a(e);
            var n, c = s(t),
                u = c.length,
                i = 0;
            while (u > i) r.f(e, n = c[i++], t[n]);
            return e
        }
    },
    "7f20": function(e, t, n) {
        var r = n("86cc").f,
            a = n("69a8"),
            s = n("2b4c")("toStringTag");
        e.exports = function(e, t, n) {
            e && !a(e = n ? e : e.prototype, s) && r(e, s, {
                configurable: !0,
                value: t
            })
        }
    },
    "7ff5": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0;
        var a = r(n("275e")),
            s = r(n("3918")),
            c = r(n("542d")),
            u = r(n("32b7")),
            i = r(n("115a")),
            o = r(n("5869")),
            f = r(n("52d9")),
            l = r(n("a564")),
            p = r(n("00a5")),
            d = r(n("5b6c")),
            x = r(n("ae2e")),
            h = r(n("b05c")),
            k = r(n("9cd0")),
            v = r(n("2437")),
            m = r(n("67c2")),
            b = r(n("c5ea")),
            g = r(n("e050")),
            y = r(n("0cdf")),
            w = r(n("aa72")),
            _ = r(n("556d")),
            R = r(n("9766")),
            M = r(n("233a")),
            j = r(n("1e82")),
            E = r(n("e845")),
            S = r(n("31ee")),
            O = r(n("4ae8")),
            P = r(n("c0a1")),
            A = r(n("b1be")),
            T = r(n("9825")),
            B = r(n("1363")),
            N = r(n("1799")),
            I = r(n("6d62")),
            z = r(n("0088")),
            C = r(n("28b9")),
            D = r(n("521e")),
            L = r(n("55fd")),
            H = r(n("02c4")),
            F = r(n("fe0d")),
            $ = r(n("f2e2")),
            W = r(n("66f2")),
            q = r(n("ff63")),
            U = r(n("0458")),
            V = r(n("c930")),
            G = r(n("9439")),
            K = r(n("50d6")),
            X = r(n("6b4f")),
            Y = r(n("e578")),
            J = r(n("bb2b")),
            Z = r(n("b860")),
            Q = r(n("9c2b")),
            ee = r(n("59dd")),
            te = r(n("c906")),
            ne = r(n("3fa1")),
            re = r(n("8fa4")),
            ae = r(n("bacc")),
            se = r(n("9776")),
            ce = r(n("bf97")),
            ue = r(n("650f")),
            ie = r(n("0c86")),
            oe = r(n("4988")),
            fe = r(n("c09c")),
            le = r(n("f9c9")),
            pe = r(n("7a4d")),
            de = r(n("e148")),
            xe = r(n("e605")),
            he = r(n("518f")),
            ke = r(n("27ca")),
            ve = r(n("9af0")),
            me = r(n("819b")),
            be = r(n("6beb")),
            ge = r(n("ec00")),
            ye = r(n("4b28")),
            we = r(n("2184")),
            _e = r(n("b301")),
            Re = r(n("97f5")),
            Me = r(n("1f6b")),
            je = r(n("31d8")),
            Ee = r(n("d681")),
            Se = r(n("2681")),
            Oe = r(n("dff7")),
            Pe = r(n("6145")),
            Ae = r(n("a57a")),
            Te = r(n("5892")),
            Be = r(n("37a5")),
            Ne = r(n("2469")),
            Ie = r(n("0800")),
            ze = r(n("80fe")),
            Ce = r(n("8d68")),
            De = r(n("d678")),
            Le = r(n("8d42")),
            He = r(n("b3b6")),
            Fe = r(n("f049")),
            $e = r(n("13b1")),
            We = r(n("c64e")),
            qe = r(n("8797")),
            Ue = r(n("ea3b")),
            Ve = r(n("917b")),
            Ge = r(n("7581")),
            Ke = r(n("37f4")),
            Xe = r(n("4a86")),
            Ye = r(n("a46e")),
            Je = r(n("14b8")),
            Ze = r(n("e236")),
            Qe = {
                kill: a.default,
                ylshd: y.default,
                mzrq: M.default,
                item: s.default,
                item2: c.default,
                petsoul: o.default,
                day: f.default,
                jncz: F.default,
                clear: h.default,
                sava: S.default,
                jldhk1: l.default,
                jldhk2: p.default,
                lhjl: C.default,
                yxzj: $.default,
                yxzjother: V.default,
                yxzjday: X.default,
                fjgjcl: u.default,
                sccl: i.default,
                jpdh: d.default,
                dhspcldhb: x.default,
                leftball: k.default,
                fxzy: v.default,
                sycnfh: m.default,
                zzjngjk: b.default,
                syjngjk: g.default,
                fxax: w.default,
                lqaxlh: _.default,
                dhsmlb: R.default,
                checkpet: j.default,
                zip: E.default,
                ymxjdh: O.default,
                dz: P.default,
                dzzb: A.default,
                dmdz: He.default,
                sellbad: T.default,
                cjzstz: B.default,
                jlwdbk: N.default,
                auto7: I.default,
                cydh: z.default,
                cytz: ue.default,
                cwzh: D.default,
                jdzl: L.default,
                zhjfdh: H.default,
                sjrw: W.default,
                xrws: q.default,
                xrxl: U.default,
                talk: G.default,
                cfhbzb: K.default,
                zz: Y.default,
                yuebing: J.default,
                jz: Z.default,
                discard: Q.default,
                ybzz: ee.default,
                dbqb: te.default,
                ybbz: ne.default,
                xhbz: $e.default,
                ylsdh: re.default,
                autod: ae.default,
                kill2: se.default,
                dzyxjz: ce.default,
                sd: ie.default,
                tjxt: oe.default,
                xygd: fe.default,
                myxj: le.default,
                jzwz: pe.default,
                buytb: de.default,
                ybxl: xe.default,
                xsch: he.default,
                sendItem: ke.default,
                update: ve.default,
                lsj4: me.default,
                yzzx: be.default,
                bx: ge.default,
                zx: ye.default,
                killUser: we.default,
                jlwxs: _e.default,
                cwjh: Re.default,
                jzhz: Me.default,
                cbmg: je.default,
                autobuy: Ee.default,
                dhzz: Se.default,
                tzhajl: Oe.default,
                dddth: Pe.default,
                zbfj: Ae.default,
                checkcode: Te.default,
                mxrw: Be.default,
                swdh: Ne.default,
                qfjjc: Ie.default,
                xfjl: ze.default,
                b2p: Ce.default,
                p2b: De.default,
                cwdm: Le.default,
                jzxl: Fe.default,
                smy: We.default,
                yetu: qe.default,
                jzgc: Ue.default,
                hjha: Ve.default,
                psdhy: Ge.default,
                ksbx: Ke.default,
                ybxunlian: Xe.default,
                baitan: Ye.default,
                jiazu: Je.default,
                dhxt: Ze.default
            };
        t.default = Qe
    },
    "80fe": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = new s.Task({
                title: "领取消费奖励",
                tags: ["change"],
                form: [{
                    title: "神迹三星石",
                    type: "checkbox",
                    value: !0
                }, {
                    title: "宠物启魂书",
                    type: "checkbox",
                    value: !1
                }, {
                    title: "修复宝石",
                    type: "checkbox",
                    value: !1
                }]
            }, (function() {
                var e = this.form[0].value,
                    t = this.form[1].value,
                    n = this.form[2].value;

                function r() {
                    return c.apply(this, arguments)
                }

                function c() {
                    return c = (0, a.default)(regeneratorRuntime.mark((function e() {
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, (0, s.getMainDataAsync)();
                                case 2:
                                    if (e.t0 = e.sent.serverType, "new" !== e.t0) {
                                        e.next = 7;
                                        break
                                    }
                                    e.t1 = "1008", e.next = 8;
                                    break;
                                case 7:
                                    e.t1 = "1007";
                                case 8:
                                    return e.abrupt("return", e.t1);
                                case 9:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), c.apply(this, arguments)
                }

                function u(e) {
                    return i.apply(this, arguments)
                }

                function i() {
                    return i = (0, a.default)(regeneratorRuntime.mark((function e(t) {
                        var n, a;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.t0 = s.task, e.t1 = "npc ", e.next = 6, r();
                                case 6:
                                    return e.t2 = e.sent, e.t3 = e.t1.concat.call(e.t1, e.t2, " 15"), e.next = 10, e.t0.send.call(e.t0, e.t3, "<menu");
                                case 10:
                                    return e.next = 12, s.task.sleep();
                                case 12:
                                    return e.next = 14, s.task.send(t, ["兑换成功", "兑换失败"]);
                                case 14:
                                    if (n = e.sent, a = n.index, 0 !== a) {
                                        e.next = 19;
                                        break
                                    }
                                    return e.next = 19, u(t);
                                case 19:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), i.apply(this, arguments)
                }

                function o() {
                    return f.apply(this, arguments)
                }

                function f() {
                    return f = (0, a.default)(regeneratorRuntime.mark((function a() {
                        var c, i, o;
                        return regeneratorRuntime.wrap((function(a) {
                            while (1) switch (a.prev = a.next) {
                                case 0:
                                    return a.next = 2, s.task.move("sgz 102", "罗克萨斯家");
                                case 2:
                                    c = 1;
                                case 3:
                                    if (!(c < 15)) {
                                        a.next = 22;
                                        break
                                    }
                                    return a.next = 6, s.task.sleep();
                                case 6:
                                    return a.t0 = s.task, a.t1 = "npc ", a.next = 10, r();
                                case 10:
                                    return a.t2 = a.sent, a.t3 = a.t1.concat.call(a.t1, a.t2, " ").concat(c), a.t4 = ["你成功领取", "你已经领取过", "你还没有得到领取资格哦"], a.next = 15, a.t0.send.call(a.t0, a.t3, a.t4);
                                case 15:
                                    if (i = a.sent, o = i.index, !(o > 1)) {
                                        a.next = 19;
                                        break
                                    }
                                    return a.abrupt("break", 22);
                                case 19:
                                    c++, a.next = 3;
                                    break;
                                case 22:
                                    if (!e) {
                                        a.next = 25;
                                        break
                                    }
                                    return a.next = 25, u("dh2");
                                case 25:
                                    if (!t) {
                                        a.next = 28;
                                        break
                                    }
                                    return a.next = 28, u("dh1");
                                case 28:
                                    if (!n) {
                                        a.next = 31;
                                        break
                                    }
                                    return a.next = 31, u("dh0");
                                case 31:
                                case "end":
                                    return a.stop()
                            }
                        }), a)
                    }))), f.apply(this, arguments)
                }
                return o()
            }));
        t.default = c
    },
    "819b": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("6762"), n("2fdb"), n("7514"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = ["弱宠区", "强宠区", "弱道具区", "强道具区"],
            u = new s.Task({
                title: "黎明黄昏换4品书",
                tags: ["change"],
                form: [{
                    title: "类型",
                    type: "picker",
                    range: c,
                    value: 0
                }]
            }, (function() {
                var e = this.form[0].value,
                    t = c[e];

                function n() {
                    return r.apply(this, arguments)
                }

                function r() {
                    return r = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var r, a, c, u, i, o, f, l, p, d, x, h, k, v;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return r = "npc 1002", e.next = 3, (0, s.getMainDataAsync)();
                                case 3:
                                    return a = e.sent.map.npc, c = a.find((function(e) {
                                        var t = e.code;
                                        return t === r
                                    })), u = c.list, i = u.find((function(e) {
                                        var n = e.title;
                                        return (0, s.clearText)(n).includes(t)
                                    })), e.next = 8, s.task.sleep();
                                case 8:
                                    return e.next = 10, s.task.send("".concat(r, " ").concat(i.code), ["[~1]", "需要"]);
                                case 10:
                                    if (o = e.sent, f = o.index, 0 !== f) {
                                        e.next = 66;
                                        break
                                    }
                                    return e.next = 15, s.task.sleep();
                                case 15:
                                    return e.next = 17, s.task.send("1", ["mps]", "得到了", "/ 需要"]);
                                case 17:
                                    if (l = e.sent, p = l.index, d = l.text, 0 !== p) {
                                        e.next = 29;
                                        break
                                    }
                                    return e.next = 23, s.task.sleep();
                                case 23:
                                    return e.next = 25, s.task.send("cl", "cnt");
                                case 25:
                                    return e.next = 27, n();
                                case 27:
                                    e.next = 66;
                                    break;
                                case 29:
                                    if (1 !== p) {
                                        e.next = 34;
                                        break
                                    }
                                    return e.next = 32, n();
                                case 32:
                                    e.next = 66;
                                    break;
                                case 34:
                                    if (!d.includes("精灵王徽章")) {
                                        e.next = 66;
                                        break
                                    }
                                    return e.next = 37, s.task.sleep();
                                case 37:
                                    return e.next = 39, s.task.send("t l 8001", "<title>迷失之地");
                                case 39:
                                    return e.next = 41, s.task.sleep();
                                case 41:
                                    return e.next = 43, (0, s.findItem)("精灵王徽章", "npc 1000 j", 1);
                                case 43:
                                    return x = e.sent, h = x.code, e.next = 47, s.task.sleep();
                                case 47:
                                    return e.next = 49, s.task.send("".concat(h, " 3"), "<input");
                                case 49:
                                    return e.next = 51, s.task.sleep();
                                case 51:
                                    return e.next = 53, s.task.send("99", ["你从锻皇.柳柳买下了", "不够", "无法再买"]);
                                case 53:
                                    return k = e.sent, v = k.index, e.next = 57, s.task.sleep();
                                case 57:
                                    return e.next = 59, s.task.cancel(!0);
                                case 59:
                                    if (0 !== v) {
                                        e.next = 66;
                                        break
                                    }
                                    return e.next = 62, s.task.sleep();
                                case 62:
                                    return e.next = 64, s.task.send("t l 12001", "<title>荫凉之地");
                                case 64:
                                    return e.next = 66, n();
                                case 66:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), r.apply(this, arguments)
                }
                return s.task.move("msgd 102", "荫凉之地").then(n)
            }));
        t.default = u
    },
    "81bf": function(e, t, n) {
        (function(t, r, a) {
            e.exports = r(n("21bf"), n("38ba"))
        })(0, (function(e) {
            return e.mode.ECB = function() {
                var t = e.lib.BlockCipherMode.extend();
                return t.Encryptor = t.extend({
                    processBlock: function(e, t) {
                        this._cipher.encryptBlock(e, t)
                    }
                }), t.Decryptor = t.extend({
                    processBlock: function(e, t) {
                        this._cipher.decryptBlock(e, t)
                    }
                }), t
            }(), e.mode.ECB
        }))
    },
    "828e": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        n("6b54");
        var a = r(n("75fc")),
            s = r(n("7618"));
        n("ac6a"), n("96cf");
        var c = r(n("3b8d")),
            u = n("d8e2"),
            i = n("3f7e"),
            o = r(n("7ff5"));

        function f(e) {
            var t = {};
            for (var n in e)
                if (Object.hasOwnProperty.call(e, n)) {
                    var r = e[n],
                        a = r.title,
                        s = r.batch,
                        c = r.tags,
                        u = r.form,
                        i = r.options,
                        o = r.before;
                    t[n] = {
                        title: a,
                        batch: s,
                        tags: c,
                        form: u,
                        options: i,
                        before: !!o
                    }
                } return t
        }
        var l = {
            getList: function() {
                postMessage({
                    name: "callback",
                    args: [f(o.default)]
                })
            },
            before: function() {
                var e = (0, c.default)(regeneratorRuntime.mark((function e(t) {
                    var n, r;
                    return regeneratorRuntime.wrap((function(e) {
                        while (1) switch (e.prev = e.next) {
                            case 0:
                                return n = t.key, r = o.default[n], e.next = 4, r.before();
                            case 4:
                                postMessage({
                                    name: "callback",
                                    args: [{
                                        form: r.form,
                                        options: r.options
                                    }]
                                });
                            case 5:
                            case "end":
                                return e.stop()
                        }
                    }), e)
                })));

                function t(t) {
                    return e.apply(this, arguments)
                }
                return t
            }(),
            startTask: function() {
                var e = (0, c.default)(regeneratorRuntime.mark((function e() {
                    var t, n, r, c, u, f, l, p = arguments;
                    return regeneratorRuntime.wrap((function(e) {
                        while (1) switch (e.prev = e.next) {
                            case 0:
                                return t = p.length > 0 && void 0 !== p[0] ? p[0] : {}, n = t.key, r = t.form, c = t.options, u = t.args, f = o.default[n], r && r.forEach((function(e, t) {
                                    f.form[t] = e
                                })), "object" === (0, s.default)(c) && Object.assign(f.options, c), e.next = 6, i.globalSettings.init();
                            case 6:
                                return l = [], e.prev = 7, e.next = 10, f.start.apply(f, (0, a.default)(u));
                            case 10:
                                e.next = 15;
                                break;
                            case 12:
                                e.prev = 12, e.t0 = e["catch"](7), l.push(e.t0 && e.t0.toString() || "error");
                            case 15:
                                postMessage({
                                    name: "stop",
                                    args: l
                                });
                            case 16:
                            case "end":
                                return e.stop()
                        }
                    }), e, null, [
                        [7, 12]
                    ])
                })));

                function t() {
                    return e.apply(this, arguments)
                }
                return t
            }(),
            callback: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    t = e.callback,
                    n = e.args;
                (0, u.invokeCallback)(t, n)
            }
        };
        onmessage = function(e) {
            var t = e.data,
                n = t.name,
                r = t.data;
            l[n](r)
        }
    },
    8378: function(e, t) {
        var n = e.exports = {
            version: "2.6.12"
        };
        "number" == typeof __e && (__e = n)
    },
    "83a1": function(e, t) {
        e.exports = Object.is || function(e, t) {
            return e === t ? 0 !== e || 1 / e === 1 / t : e != e && t != t
        }
    },
    8436: function(e, t) {
        e.exports = function() {}
    },
    "84f2": function(e, t) {
        e.exports = {}
    },
    "85f2": function(e, t, n) {
        e.exports = n("454f")
    },
    "86cc": function(e, t, n) {
        var r = n("cb7c"),
            a = n("c69a"),
            s = n("6a99"),
            c = Object.defineProperty;
        t.f = n("9e1e") ? Object.defineProperty : function(e, t, n) {
            if (r(e), t = s(t, !0), r(n), a) try {
                return c(e, t, n)
            } catch (u) {}
            if ("get" in n || "set" in n) throw TypeError("Accessors not supported!");
            return "value" in n && (e[t] = n.value), e
        }
    },
    8797: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("6762"), n("2fdb"), n("7514"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = r(n("275e")),
            u = new s.Task({
                title: "夜兔王的进攻",
                tags: ["event"]
            }, (function() {
                function e() {
                    return t.apply(this, arguments)
                }

                function t() {
                    return t = (0, a.default)(regeneratorRuntime.mark((function t() {
                        var n, r, a, u, i, o, f, l;
                        return regeneratorRuntime.wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, s.task.sleep();
                                case 2:
                                    return t.next = 4, (0, s.getMainDataAsync)();
                                case 4:
                                    return n = t.sent.map.npc, r = n.find((function(e) {
                                        var t = e.code;
                                        return "npc 1000" === t
                                    })), a = r.list, u = a.find((function(e) {
                                        var t = e.title;
                                        return t.includes("夜兔王的进攻")
                                    })), t.next = 9, s.task.send("npc 1000 ".concat(u.code), ["[~1]", "需要击败", "请明天再来吧"]);
                                case 9:
                                    if (i = t.sent, o = i.index, 0 !== o) {
                                        t.next = 30;
                                        break
                                    }
                                    return t.next = 14, s.task.sleep();
                                case 14:
                                    return t.next = 16, s.task.send("1", ["m mps]", "得到"]);
                                case 16:
                                    if (f = t.sent, l = f.index, 0 !== l) {
                                        t.next = 25;
                                        break
                                    }
                                    return t.next = 21, s.task.sleep();
                                case 21:
                                    return t.next = 23, s.task.send("cl", ["cnt"]);
                                case 23:
                                    t.next = 28;
                                    break;
                                case 25:
                                    return t.next = 27, e();
                                case 27:
                                    return t.abrupt("return", t.sent);
                                case 28:
                                    t.next = 32;
                                    break;
                                case 30:
                                    if (2 !== o) {
                                        t.next = 32;
                                        break
                                    }
                                    return t.abrupt("return");
                                case 32:
                                    return c.default.reset(), c.default.set({
                                        code: ["npc 1000 0", "npc 1000 1", "npc 1000 2", "npc 1000 3", "npc 1000 4", "npc 1000 5"],
                                        killMax: 6
                                    }), t.next = 36, c.default.start(!1, !1);
                                case 36:
                                    return t.next = 38, e();
                                case 38:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    }))), t.apply(this, arguments)
                }
                return s.task.move("mszy 400", "夜兔秘境").then(e)
            }));
        t.default = u
    },
    "87f3": function(e, t, n) {
        var r = n("5ca1");
        r(r.S, "Number", {
            MAX_SAFE_INTEGER: 9007199254740991
        })
    },
    "8b97": function(e, t, n) {
        var r = n("d3f4"),
            a = n("cb7c"),
            s = function(e, t) {
                if (a(e), !r(t) && null !== t) throw TypeError(t + ": can't set as prototype!")
            };
        e.exports = {
            set: Object.setPrototypeOf || ("__proto__" in {} ? function(e, t, r) {
                try {
                    r = n("9b43")(Function.call, n("11e9").f(Object.prototype, "__proto__").set, 2), r(e, []), t = !(e instanceof Array)
                } catch (a) {
                    t = !0
                }
                return function(e, n) {
                    return s(e, n), t ? e.__proto__ = n : r(e, n), e
                }
            }({}, !1) : void 0),
            check: s
        }
    },
    "8cef": function(e, t, n) {
        (function(t, r, a) {
            e.exports = r(n("21bf"), n("38ba"))
        })(0, (function(e) {
            return e.pad.Iso97971 = {
                pad: function(t, n) {
                    t.concat(e.lib.WordArray.create([2147483648], 1)), e.pad.ZeroPadding.pad(t, n)
                },
                unpad: function(t) {
                    e.pad.ZeroPadding.unpad(t), t.sigBytes--
                }
            }, e.pad.Iso97971
        }))
    },
    "8d42": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("6762"), n("2fdb"), n("7514"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = new s.Task({
                title: "资质宝石打磨",
                tags: ["item"],
                form: [{
                    title: "宠物名称",
                    type: "input",
                    placeholder: "",
                    focus: !0,
                    value: ""
                }, {
                    title: "打磨属性",
                    type: "picker",
                    range: ["致命", "精力", "速度", "抗混", "抗睡", "抗封", "抗诅", "抗麻"],
                    value: 0
                }, {
                    title: "自动锁定",
                    type: "picker",
                    range: ["是"],
                    value: 0
                }, {
                    title: "持续打磨",
                    type: "picker",
                    range: ["是"],
                    value: 0
                }]
            }, (function() {
                var e = this.form[0].value,
                    t = this.form[1],
                    n = t.range[t.value],
                    r = ["资质宝石打磨器", "资质宝石打磨小型清除器", "资质宝石打磨锁定器"],
                    c = 0,
                    u = 0,
                    i = 0;

                function o() {
                    return f.apply(this, arguments)
                }

                function f() {
                    return f = (0, a.default)(regeneratorRuntime.mark((function t() {
                        var a, f, l, p, d, x, h, k, v, m, b, g;
                        return regeneratorRuntime.wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, s.task.sleep();
                                case 2:
                                    return t.next = 4, (0, s.findItem)(r[c]);
                                case 4:
                                    return a = t.sent, f = a.code, t.next = 8, s.task.sleep();
                                case 8:
                                    return t.next = 10, s.task.send("".concat(f, " 0"), "<menu");
                                case 10:
                                    return l = t.sent, p = l.text, d = (0, s.parseMsg)(p).data.list, x = d.find((function(t) {
                                        var n = t.title;
                                        return n.includes(e)
                                    })), t.next = 16, s.task.sleep();
                                case 16:
                                    if (x) {
                                        t.next = 24;
                                        break
                                    }
                                    return t.next = 19, s.task.cancel(!0);
                                case 19:
                                    throw h = "目标宠物未找到", s.task.log(h), new Error(h);
                                case 24:
                                    return t.next = 26, s.task.send(x.code, ["[yes]", "已达到使用次数上限"]);
                                case 26:
                                    if (k = t.sent, v = k.index, 0 !== v) {
                                        t.next = 39;
                                        break
                                    }
                                    return t.next = 31, s.task.sleep();
                                case 31:
                                    return t.next = 33, s.task.send("yes", ["成功获得", "成功锁定", "成功清除"]);
                                case 33:
                                    return m = t.sent, b = m.text, g = m.index, 0 === g ? (u++, b.includes(":".concat(n)) ? (i++, c = 2) : c = 1, s.task.log("打磨次数：".concat(u, " 成功次数：").concat(i))) : c = 0, t.next = 39, o();
                                case 39:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    }))), f.apply(this, arguments)
                }
                return o()
            }));
        t.default = c
    },
    "8d68": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("96cf");
        var a = r(n("3b8d"));
        n("c5f6");
        var s = n("3f7e"),
            c = new s.Task({
                title: "元宝创建银票",
                tags: ["change"],
                form: [{
                    title: "单张金额",
                    type: "input",
                    placeholder: "",
                    focus: !0,
                    value: "1"
                }, {
                    title: "创建张数",
                    type: "input",
                    placeholder: "",
                    focus: !0,
                    value: "1"
                }]
            }, (function() {
                var e = Number(this.form[0].value) || 1,
                    t = Number(this.form[1].value) || 1,
                    n = 0;

                function r() {
                    return c.apply(this, arguments)
                }

                function c() {
                    return c = (0, a.default)(regeneratorRuntime.mark((function a() {
                        var c, u, i, o, f, l;
                        return regeneratorRuntime.wrap((function(a) {
                            while (1) switch (a.prev = a.next) {
                                case 0:
                                    return a.next = 2, s.task.sleep();
                                case 2:
                                    return a.next = 4, s.task.send("npc 1005 0", ["<input", "不能兑换"]);
                                case 4:
                                    if (c = a.sent, u = c.text, i = c.index, !(i > 0)) {
                                        a.next = 11;
                                        break
                                    }
                                    throw new Error(u);
                                case 11:
                                    return a.next = 13, s.task.sleep();
                                case 13:
                                    return a.next = 15, s.task.send("".concat(e), ["创建成功", "无法兑换"]);
                                case 15:
                                    if (o = a.sent, f = o.index, l = o.text, !(f > 0)) {
                                        a.next = 20;
                                        break
                                    }
                                    throw new Error(l);
                                case 20:
                                    if (n++, !(n < t)) {
                                        a.next = 24;
                                        break
                                    }
                                    return a.next = 24, r();
                                case 24:
                                case "end":
                                    return a.stop()
                            }
                        }), a)
                    }))), c.apply(this, arguments)
                }
                return s.task.move("sgz 103", "光芒市场").then(r)
            }));
        t.default = c
    },
    "8e60": function(e, t, n) {
        e.exports = !n("294c")((function() {
            return 7 != Object.defineProperty({}, "a", {
                get: function() {
                    return 7
                }
            }).a
        }))
    },
    "8f60": function(e, t, n) {
        "use strict";
        var r = n("a159"),
            a = n("aebd"),
            s = n("45f2"),
            c = {};
        n("35e8")(c, n("5168")("iterator"), (function() {
            return this
        })), e.exports = function(e, t, n) {
            e.prototype = r(c, {
                next: a(1, n)
            }), s(e, t + " Iterator")
        }
    },
    "8fa4": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = new s.Task({
                title: "月亮石兑换经验",
                tags: ["event", "change"]
            }, (0, a.default)(regeneratorRuntime.mark((function e() {
                var t, n;
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                            if (n = function() {
                                    return n = (0, a.default)(regeneratorRuntime.mark((function e() {
                                        var n, r, a, c;
                                        return regeneratorRuntime.wrap((function(e) {
                                            while (1) switch (e.prev = e.next) {
                                                case 0:
                                                    return e.next = 2, s.task.sleep();
                                                case 2:
                                                    return e.next = 4, s.task.send("npc 1000 ~q1", ["[~1]", "这个任务每天只能做"]);
                                                case 4:
                                                    if (n = e.sent, r = n.index, 0 !== r) {
                                                        e.next = 20;
                                                        break
                                                    }
                                                    return e.next = 9, s.task.sleep();
                                                case 9:
                                                    return e.next = 11, s.task.send("1", ["[cl]", "月光精灵"]);
                                                case 11:
                                                    if (a = e.sent, c = a.index, 0 !== c) {
                                                        e.next = 18;
                                                        break
                                                    }
                                                    return e.next = 16, s.task.sleep();
                                                case 16:
                                                    return e.next = 18, s.task.send("cl", "cnt");
                                                case 18:
                                                    return e.next = 20, t();
                                                case 20:
                                                case "end":
                                                    return e.stop()
                                            }
                                        }), e)
                                    }))), n.apply(this, arguments)
                                }, t = function() {
                                    return n.apply(this, arguments)
                                }, !s.globalSettings.get("auto7")) {
                                e.next = 5;
                                break
                            }
                            return s.task.log("设置7号项链自动检查时，暂停换取经验。"), e.abrupt("return", Promise.resolve());
                        case 5:
                            return e.abrupt("return", s.task.move("ylshd 102", "残月平原").then(t));
                        case 6:
                        case "end":
                            return e.stop()
                    }
                }), e)
            }))));
        t.default = c
    },
    9003: function(e, t, n) {
        var r = n("6b4c");
        e.exports = Array.isArray || function(e) {
            return "Array" == r(e)
        }
    },
    9093: function(e, t, n) {
        var r = n("ce10"),
            a = n("e11e").concat("length", "prototype");
        t.f = Object.getOwnPropertyNames || function(e) {
            return r(e, a)
        }
    },
    9138: function(e, t, n) {
        e.exports = n("35e8")
    },
    "917b": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("6762"), n("2fdb"), n("7514"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = r(n("275e")),
            u = new s.Task({
                title: "黄金海岸",
                tags: ["event"],
                form: [{
                    title: "奖品选择",
                    type: "picker",
                    range: ["装备潜力", "装备潜力(绑)", "宠物养成点数", "宠物养成点数(绑)"],
                    value: 0
                }]
            }, (function() {
                var e = this.form[0],
                    t = e.range[e.value],
                    n = /<menu.+智力答题/,
                    r = /<menu.+手型/;

                function u() {
                    return i.apply(this, arguments)
                }

                function i() {
                    return i = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var t, r;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.next = 4, s.task.send("2", [n, "你暂停了", "任务完成"]);
                                case 4:
                                    if (t = e.sent, r = t.index, 0 !== r) {
                                        e.next = 11;
                                        break
                                    }
                                    return e.next = 9, u();
                                case 9:
                                    e.next = 14;
                                    break;
                                case 11:
                                    if (1 !== r) {
                                        e.next = 14;
                                        break
                                    }
                                    return e.next = 14, m();
                                case 14:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), i.apply(this, arguments)
                }

                function o() {
                    return f.apply(this, arguments)
                }

                function f() {
                    return f = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var t, n;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.next = 4, s.task.send("finger_0", [r, "你暂停了", "任务完成"]);
                                case 4:
                                    if (t = e.sent, n = t.index, 0 !== n) {
                                        e.next = 11;
                                        break
                                    }
                                    return e.next = 9, o();
                                case 9:
                                    e.next = 14;
                                    break;
                                case 11:
                                    if (1 !== n) {
                                        e.next = 14;
                                        break
                                    }
                                    return e.next = 14, m();
                                case 14:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), f.apply(this, arguments)
                }

                function l() {
                    return p.apply(this, arguments)
                }

                function p() {
                    return p = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var t, n, r, a, c, u, i;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, (0, s.findNpcItem)({
                                        code: "npc 1000"
                                    }, "环游全岛");
                                case 2:
                                    if (t = e.sent, t) {
                                        e.next = 7;
                                        break
                                    }
                                    return e.next = 6, x();
                                case 6:
                                    return e.abrupt("return");
                                case 7:
                                    return e.next = 9, s.task.sleep();
                                case 9:
                                    return e.next = 11, s.task.send("npc 1000 ".concat(t.code), "[~1]");
                                case 11:
                                    if (n = e.sent, r = n.index, 0 !== r) {
                                        e.next = 31;
                                        break
                                    }
                                    return e.next = 16, s.task.sleep();
                                case 16:
                                    return e.next = 18, s.task.send("1", ["[~0 mps]", "任务完成"]);
                                case 18:
                                    if (a = e.sent, c = a.index, 0 !== c) {
                                        e.next = 31;
                                        break
                                    }
                                    return e.next = 23, s.task.sleep();
                                case 23:
                                    return e.next = 25, s.task.send("0 mps", "<mp>");
                                case 25:
                                    return u = e.sent, i = u.text, e.next = 29, (0, s.moveMapTarget)(i);
                                case 29:
                                    return e.next = 31, l();
                                case 31:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), p.apply(this, arguments)
                }
                var d = /耳根清静|小心黄蜂|剧毒蜘蛛|调皮捣蛋|收集零件/;

                function x() {
                    return h.apply(this, arguments)
                }

                function h() {
                    return h = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var t, n, r, a, u, i, o;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, (0, s.findNpcItem)({
                                        code: "npc 1000"
                                    }, d);
                                case 2:
                                    return t = e.sent, e.next = 5, s.task.sleep();
                                case 5:
                                    return e.next = 7, s.task.send("npc 1000 ".concat(t.code), ["[~1]", "得到了"]);
                                case 7:
                                    if (n = e.sent, r = n.index, 0 !== r) {
                                        e.next = 35;
                                        break
                                    }
                                    return e.next = 12, s.task.sleep();
                                case 12:
                                    return e.next = 14, s.task.send("1", ["[~0 mps]", "任务完成"]);
                                case 14:
                                    if (a = e.sent, u = a.index, 0 !== u) {
                                        e.next = 35;
                                        break
                                    }
                                    return e.next = 19, s.task.sleep();
                                case 19:
                                    return e.next = 21, s.task.send("0 mps", "<mp>");
                                case 21:
                                    return i = e.sent, o = i.text, e.next = 25, (0, s.moveMapTarget)(o);
                                case 25:
                                    return e.next = 27, s.task.sleep();
                                case 27:
                                    return c.default.reset(), c.default.set({
                                        code: "kill",
                                        find: /[：:]\s50 \/ 50/
                                    }), e.next = 31, c.default.start(!1, !1);
                                case 31:
                                    return e.next = 33, s.task.move("hjha 100", "迎宾沙滩");
                                case 33:
                                    return e.next = 35, x();
                                case 35:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), h.apply(this, arguments)
                }

                function k() {
                    return v.apply(this, arguments)
                }

                function v() {
                    return v = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var n, r, a, c, u, i, o, f;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.next = 4, (0, s.findNpcItem)({
                                        code: "npc 1000"
                                    }, "领取每日奖励");
                                case 4:
                                    return n = e.sent, e.next = 7, s.task.send("npc 1000 ".concat(n.code), ["<menu>请选择奖品", "你无法领取奖品", "你没有贵宾称号", "已经领过"]);
                                case 7:
                                    if (r = e.sent, a = r.index, c = r.text, 0 !== a) {
                                        e.next = 26;
                                        break
                                    }
                                    return u = (0, s.parseMsg)(c).data.list, i = u.find((function(e) {
                                        var n = e.title;
                                        return n.includes(t)
                                    })), e.next = 15, s.task.sleep();
                                case 15:
                                    return e.next = 17, s.task.send(i.code, ["[confirm]", "你得到"]);
                                case 17:
                                    if (o = e.sent, f = o.index, 0 !== f) {
                                        e.next = 24;
                                        break
                                    }
                                    return e.next = 22, s.task.sleep();
                                case 22:
                                    return e.next = 24, s.task.send("confirm", ["你得到"]);
                                case 24:
                                    e.next = 29;
                                    break;
                                case 26:
                                    if (1 !== a) {
                                        e.next = 29;
                                        break
                                    }
                                    return e.next = 29, m();
                                case 29:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), v.apply(this, arguments)
                }

                function m() {
                    return b.apply(this, arguments)
                }

                function b() {
                    return b = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var t, a, c, i, f;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.next = 4, (0, s.findNpcItem)({
                                        code: "npc 1000"
                                    }, "领取日常任务");
                                case 4:
                                    return t = e.sent, e.next = 7, s.task.send("npc 1000 ".concat(t.code), ["[confirm]", "<menu>请选择奖品", "重新撞我", "明天再来"]);
                                case 7:
                                    a = e.sent, c = a.index, e.t0 = c, e.next = 0 === e.t0 ? 12 : 1 === e.t0 ? 27 : 2 === e.t0 ? 32 : 35;
                                    break;
                                case 12:
                                    return e.next = 14, s.task.sleep();
                                case 14:
                                    return e.next = 16, s.task.send("confirm", [n, r]);
                                case 16:
                                    if (i = e.sent, f = i.index, 0 !== f) {
                                        e.next = 23;
                                        break
                                    }
                                    return e.next = 21, u();
                                case 21:
                                    e.next = 26;
                                    break;
                                case 23:
                                    if (1 !== f) {
                                        e.next = 26;
                                        break
                                    }
                                    return e.next = 26, o();
                                case 26:
                                    return e.abrupt("break", 40);
                                case 27:
                                    return e.next = 29, s.task.sleep();
                                case 29:
                                    return e.next = 31, s.task.cancel();
                                case 31:
                                    return e.abrupt("break", 40);
                                case 32:
                                    return e.next = 34, l();
                                case 34:
                                    return e.abrupt("break", 40);
                                case 35:
                                    return e.next = 37, s.task.sleep();
                                case 37:
                                    return e.next = 39, s.task.send("?");
                                case 39:
                                    return e.abrupt("return");
                                case 40:
                                    return e.next = 42, k();
                                case 42:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), b.apply(this, arguments)
                }
                return s.task.move("hjha 100", "迎宾沙滩").then(k)
            }));
        t.default = u
    },
    9439: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("96cf");
        var a = r(n("3b8d"));
        n("c5f6");
        var s = n("3f7e"),
            c = [{
                title: "同屏",
                code: "11"
            }, {
                title: "本服",
                code: "14"
            }, {
                title: "本线",
                code: "18"
            }],
            u = new s.Task({
                title: "定时广播",
                tags: ["other"],
                form: [{
                    title: "频道",
                    type: "picker",
                    range: c,
                    value: 0
                }, {
                    title: "频率(分)",
                    type: "input",
                    value: "5"
                }, {
                    title: "内容",
                    type: "input",
                    focus: !0,
                    value: ""
                }]
            }, (function() {
                var e = this.form[0].range,
                    t = this.form[0].value,
                    n = e[t],
                    r = this.form[1].value,
                    c = this.form[2].value;
                if (c && Number(r) > 0) {
                    var u = 6e4 * r;
                    return i()
                }

                function i() {
                    return o.apply(this, arguments)
                }

                function o() {
                    return o = (0, a.default)(regeneratorRuntime.mark((function e() {
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.send("7 ".concat(n.code, " ").concat(c), ["你说道", "进行广播", "<setStarKey>3"]);
                                case 2:
                                    return e.next = 4, s.task.sleep(u);
                                case 4:
                                    return e.next = 6, i();
                                case 6:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), o.apply(this, arguments)
                }
            }));
        t.default = u
    },
    "94f8": function(e, t, n) {
        (function(t, r) {
            e.exports = r(n("21bf"))
        })(0, (function(e) {
            return function(t) {
                var n = e,
                    r = n.lib,
                    a = r.WordArray,
                    s = r.Hasher,
                    c = n.algo,
                    u = [],
                    i = [];
                (function() {
                    function e(e) {
                        for (var n = t.sqrt(e), r = 2; r <= n; r++)
                            if (!(e % r)) return !1;
                        return !0
                    }

                    function n(e) {
                        return 4294967296 * (e - (0 | e)) | 0
                    }
                    var r = 2,
                        a = 0;
                    while (a < 64) e(r) && (a < 8 && (u[a] = n(t.pow(r, .5))), i[a] = n(t.pow(r, 1 / 3)), a++), r++
                })();
                var o = [],
                    f = c.SHA256 = s.extend({
                        _doReset: function() {
                            this._hash = new a.init(u.slice(0))
                        },
                        _doProcessBlock: function(e, t) {
                            for (var n = this._hash.words, r = n[0], a = n[1], s = n[2], c = n[3], u = n[4], f = n[5], l = n[6], p = n[7], d = 0; d < 64; d++) {
                                if (d < 16) o[d] = 0 | e[t + d];
                                else {
                                    var x = o[d - 15],
                                        h = (x << 25 | x >>> 7) ^ (x << 14 | x >>> 18) ^ x >>> 3,
                                        k = o[d - 2],
                                        v = (k << 15 | k >>> 17) ^ (k << 13 | k >>> 19) ^ k >>> 10;
                                    o[d] = h + o[d - 7] + v + o[d - 16]
                                }
                                var m = u & f ^ ~u & l,
                                    b = r & a ^ r & s ^ a & s,
                                    g = (r << 30 | r >>> 2) ^ (r << 19 | r >>> 13) ^ (r << 10 | r >>> 22),
                                    y = (u << 26 | u >>> 6) ^ (u << 21 | u >>> 11) ^ (u << 7 | u >>> 25),
                                    w = p + y + m + i[d] + o[d],
                                    _ = g + b;
                                p = l, l = f, f = u, u = c + w | 0, c = s, s = a, a = r, r = w + _ | 0
                            }
                            n[0] = n[0] + r | 0, n[1] = n[1] + a | 0, n[2] = n[2] + s | 0, n[3] = n[3] + c | 0, n[4] = n[4] + u | 0, n[5] = n[5] + f | 0, n[6] = n[6] + l | 0, n[7] = n[7] + p | 0
                        },
                        _doFinalize: function() {
                            var e = this._data,
                                n = e.words,
                                r = 8 * this._nDataBytes,
                                a = 8 * e.sigBytes;
                            return n[a >>> 5] |= 128 << 24 - a % 32, n[14 + (a + 64 >>> 9 << 4)] = t.floor(r / 4294967296), n[15 + (a + 64 >>> 9 << 4)] = r, e.sigBytes = 4 * n.length, this._process(), this._hash
                        },
                        clone: function() {
                            var e = s.clone.call(this);
                            return e._hash = this._hash.clone(), e
                        }
                    });
                n.SHA256 = s._createHelper(f), n.HmacSHA256 = s._createHmacHelper(f)
            }(Math), e.SHA256
        }))
    },
    "96cf": function(e, t) {
        ! function(t) {
            "use strict";
            var n, r = Object.prototype,
                a = r.hasOwnProperty,
                s = "function" === typeof Symbol ? Symbol : {},
                c = s.iterator || "@@iterator",
                u = s.asyncIterator || "@@asyncIterator",
                i = s.toStringTag || "@@toStringTag",
                o = "object" === typeof e,
                f = t.regeneratorRuntime;
            if (f) o && (e.exports = f);
            else {
                f = t.regeneratorRuntime = o ? e.exports : {}, f.wrap = g;
                var l = "suspendedStart",
                    p = "suspendedYield",
                    d = "executing",
                    x = "completed",
                    h = {},
                    k = {};
                k[c] = function() {
                    return this
                };
                var v = Object.getPrototypeOf,
                    m = v && v(v(T([])));
                m && m !== r && a.call(m, c) && (k = m);
                var b = R.prototype = w.prototype = Object.create(k);
                _.prototype = b.constructor = R, R.constructor = _, R[i] = _.displayName = "GeneratorFunction", f.isGeneratorFunction = function(e) {
                    var t = "function" === typeof e && e.constructor;
                    return !!t && (t === _ || "GeneratorFunction" === (t.displayName || t.name))
                }, f.mark = function(e) {
                    return Object.setPrototypeOf ? Object.setPrototypeOf(e, R) : (e.__proto__ = R, i in e || (e[i] = "GeneratorFunction")), e.prototype = Object.create(b), e
                }, f.awrap = function(e) {
                    return {
                        __await: e
                    }
                }, M(j.prototype), j.prototype[u] = function() {
                    return this
                }, f.AsyncIterator = j, f.async = function(e, t, n, r) {
                    var a = new j(g(e, t, n, r));
                    return f.isGeneratorFunction(t) ? a : a.next().then((function(e) {
                        return e.done ? e.value : a.next()
                    }))
                }, M(b), b[i] = "Generator", b[c] = function() {
                    return this
                }, b.toString = function() {
                    return "[object Generator]"
                }, f.keys = function(e) {
                    var t = [];
                    for (var n in e) t.push(n);
                    return t.reverse(),
                        function n() {
                            while (t.length) {
                                var r = t.pop();
                                if (r in e) return n.value = r, n.done = !1, n
                            }
                            return n.done = !0, n
                        }
                }, f.values = T, A.prototype = {
                    constructor: A,
                    reset: function(e) {
                        if (this.prev = 0, this.next = 0, this.sent = this._sent = n, this.done = !1, this.delegate = null, this.method = "next", this.arg = n, this.tryEntries.forEach(P), !e)
                            for (var t in this) "t" === t.charAt(0) && a.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = n)
                    },
                    stop: function() {
                        this.done = !0;
                        var e = this.tryEntries[0],
                            t = e.completion;
                        if ("throw" === t.type) throw t.arg;
                        return this.rval
                    },
                    dispatchException: function(e) {
                        if (this.done) throw e;
                        var t = this;

                        function r(r, a) {
                            return u.type = "throw", u.arg = e, t.next = r, a && (t.method = "next", t.arg = n), !!a
                        }
                        for (var s = this.tryEntries.length - 1; s >= 0; --s) {
                            var c = this.tryEntries[s],
                                u = c.completion;
                            if ("root" === c.tryLoc) return r("end");
                            if (c.tryLoc <= this.prev) {
                                var i = a.call(c, "catchLoc"),
                                    o = a.call(c, "finallyLoc");
                                if (i && o) {
                                    if (this.prev < c.catchLoc) return r(c.catchLoc, !0);
                                    if (this.prev < c.finallyLoc) return r(c.finallyLoc)
                                } else if (i) {
                                    if (this.prev < c.catchLoc) return r(c.catchLoc, !0)
                                } else {
                                    if (!o) throw new Error("try statement without catch or finally");
                                    if (this.prev < c.finallyLoc) return r(c.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(e, t) {
                        for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                            var r = this.tryEntries[n];
                            if (r.tryLoc <= this.prev && a.call(r, "finallyLoc") && this.prev < r.finallyLoc) {
                                var s = r;
                                break
                            }
                        }
                        s && ("break" === e || "continue" === e) && s.tryLoc <= t && t <= s.finallyLoc && (s = null);
                        var c = s ? s.completion : {};
                        return c.type = e, c.arg = t, s ? (this.method = "next", this.next = s.finallyLoc, h) : this.complete(c)
                    },
                    complete: function(e, t) {
                        if ("throw" === e.type) throw e.arg;
                        return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), h
                    },
                    finish: function(e) {
                        for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                            var n = this.tryEntries[t];
                            if (n.finallyLoc === e) return this.complete(n.completion, n.afterLoc), P(n), h
                        }
                    },
                    catch: function(e) {
                        for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                            var n = this.tryEntries[t];
                            if (n.tryLoc === e) {
                                var r = n.completion;
                                if ("throw" === r.type) {
                                    var a = r.arg;
                                    P(n)
                                }
                                return a
                            }
                        }
                        throw new Error("illegal catch attempt")
                    },
                    delegateYield: function(e, t, r) {
                        return this.delegate = {
                            iterator: T(e),
                            resultName: t,
                            nextLoc: r
                        }, "next" === this.method && (this.arg = n), h
                    }
                }
            }

            function g(e, t, n, r) {
                var a = t && t.prototype instanceof w ? t : w,
                    s = Object.create(a.prototype),
                    c = new A(r || []);
                return s._invoke = E(e, n, c), s
            }

            function y(e, t, n) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, n)
                    }
                } catch (r) {
                    return {
                        type: "throw",
                        arg: r
                    }
                }
            }

            function w() {}

            function _() {}

            function R() {}

            function M(e) {
                ["next", "throw", "return"].forEach((function(t) {
                    e[t] = function(e) {
                        return this._invoke(t, e)
                    }
                }))
            }

            function j(e) {
                function t(n, r, s, c) {
                    var u = y(e[n], e, r);
                    if ("throw" !== u.type) {
                        var i = u.arg,
                            o = i.value;
                        return o && "object" === typeof o && a.call(o, "__await") ? Promise.resolve(o.__await).then((function(e) {
                            t("next", e, s, c)
                        }), (function(e) {
                            t("throw", e, s, c)
                        })) : Promise.resolve(o).then((function(e) {
                            i.value = e, s(i)
                        }), (function(e) {
                            return t("throw", e, s, c)
                        }))
                    }
                    c(u.arg)
                }
                var n;

                function r(e, r) {
                    function a() {
                        return new Promise((function(n, a) {
                            t(e, r, n, a)
                        }))
                    }
                    return n = n ? n.then(a, a) : a()
                }
                this._invoke = r
            }

            function E(e, t, n) {
                var r = l;
                return function(a, s) {
                    if (r === d) throw new Error("Generator is already running");
                    if (r === x) {
                        if ("throw" === a) throw s;
                        return B()
                    }
                    n.method = a, n.arg = s;
                    while (1) {
                        var c = n.delegate;
                        if (c) {
                            var u = S(c, n);
                            if (u) {
                                if (u === h) continue;
                                return u
                            }
                        }
                        if ("next" === n.method) n.sent = n._sent = n.arg;
                        else if ("throw" === n.method) {
                            if (r === l) throw r = x, n.arg;
                            n.dispatchException(n.arg)
                        } else "return" === n.method && n.abrupt("return", n.arg);
                        r = d;
                        var i = y(e, t, n);
                        if ("normal" === i.type) {
                            if (r = n.done ? x : p, i.arg === h) continue;
                            return {
                                value: i.arg,
                                done: n.done
                            }
                        }
                        "throw" === i.type && (r = x, n.method = "throw", n.arg = i.arg)
                    }
                }
            }

            function S(e, t) {
                var r = e.iterator[t.method];
                if (r === n) {
                    if (t.delegate = null, "throw" === t.method) {
                        if (e.iterator.return && (t.method = "return", t.arg = n, S(e, t), "throw" === t.method)) return h;
                        t.method = "throw", t.arg = new TypeError("The iterator does not provide a 'throw' method")
                    }
                    return h
                }
                var a = y(r, e.iterator, t.arg);
                if ("throw" === a.type) return t.method = "throw", t.arg = a.arg, t.delegate = null, h;
                var s = a.arg;
                return s ? s.done ? (t[e.resultName] = s.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", t.arg = n), t.delegate = null, h) : s : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), t.delegate = null, h)
            }

            function O(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t)
            }

            function P(e) {
                var t = e.completion || {};
                t.type = "normal", delete t.arg, e.completion = t
            }

            function A(e) {
                this.tryEntries = [{
                    tryLoc: "root"
                }], e.forEach(O, this), this.reset(!0)
            }

            function T(e) {
                if (e) {
                    var t = e[c];
                    if (t) return t.call(e);
                    if ("function" === typeof e.next) return e;
                    if (!isNaN(e.length)) {
                        var r = -1,
                            s = function t() {
                                while (++r < e.length)
                                    if (a.call(e, r)) return t.value = e[r], t.done = !1, t;
                                return t.value = n, t.done = !0, t
                            };
                        return s.next = s
                    }
                }
                return {
                    next: B
                }
            }

            function B() {
                return {
                    value: n,
                    done: !0
                }
            }
        }(function() {
            return this || "object" === typeof self && self
        }() || Function("return this")())
    },
    9766: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = r(n("aa72")),
            u = r(n("556d")),
            i = r(n("542d")),
            o = new s.Task({
                title: "兑换神秘礼包",
                tags: ["change"],
                form: [{
                    title: "奉献爱心",
                    type: "checkbox",
                    value: !0
                }, {
                    title: "领取爱心礼盒",
                    type: "checkbox",
                    value: !0
                }, {
                    title: "打开爱心礼盒",
                    type: "checkbox",
                    value: !0
                }]
            }, (function() {
                var e = this.form[0].value,
                    t = this.form[1].value,
                    n = this.form[2].value;

                function r() {
                    return o.apply(this, arguments)
                }

                function o() {
                    return o = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var t, n;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.next = 4, s.task.send("npc 1000 ~q0", "[~1]");
                                case 4:
                                    return e.next = 6, s.task.sleep();
                                case 6:
                                    return e.next = 8, s.task.send("1", ["m mps]", "你得到", "/ 需要"]);
                                case 8:
                                    if (t = e.sent, n = t.index, 2 !== n) {
                                        e.next = 12;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 12:
                                    if (0 !== n) {
                                        e.next = 17;
                                        break
                                    }
                                    return e.next = 15, s.task.sleep();
                                case 15:
                                    return e.next = 17, s.task.send("cl", "cnt");
                                case 17:
                                    return e.next = 19, r();
                                case 19:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), o.apply(this, arguments)
                }

                function f() {
                    return l.apply(this, arguments)
                }

                function l() {
                    return l = (0, a.default)(regeneratorRuntime.mark((function r() {
                        return regeneratorRuntime.wrap((function(r) {
                            while (1) switch (r.prev = r.next) {
                                case 0:
                                    if (!e) {
                                        r.next = 3;
                                        break
                                    }
                                    return r.next = 3, c.default.start();
                                case 3:
                                    if (!t) {
                                        r.next = 6;
                                        break
                                    }
                                    return r.next = 6, u.default.start();
                                case 6:
                                    if (!n) {
                                        r.next = 11;
                                        break
                                    }
                                    return i.default.reset(), i.default.set({
                                        item: "爱心礼盒"
                                    }), r.next = 11, i.default.start(!1);
                                case 11:
                                    s.task.move("gey 101", "孤儿院");
                                case 12:
                                case "end":
                                    return r.stop()
                            }
                        }), r)
                    }))), l.apply(this, arguments)
                }
                return f().then(r)
            }));
        t.default = o
    },
    9776: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("ac6a"), n("6b54"), n("3b2b"), n("28a5"), n("6762"), n("2fdb"), n("a481");
        var a = r(n("75fc"));
        n("c5f6"), n("4917");
        var s = r(n("768b"));
        n("7514"), n("96cf");
        var c = r(n("3b8d")),
            u = n("3f7e"),
            i = r(n("31ee"));

        function o() {
            return f.apply(this, arguments)
        }

        function f() {
            return f = (0, c.default)(regeneratorRuntime.mark((function e() {
                var t, n, r, a;
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                            return e.next = 2, (0, u.getMainDataAsync)();
                        case 2:
                            return t = e.sent, n = t.map, r = [], n.monster && r.push({
                                title: "暗怪",
                                code: "kill"
                            }), a = n.npc, a.forEach((function(e) {
                                var t = e.title,
                                    n = e.code,
                                    a = e.list,
                                    s = void 0 === a ? [] : a;
                                s.forEach((function(e) {
                                    var a = e.code,
                                        s = e.title;
                                    ("h" === a || s.includes("战斗挑战")) && r.push({
                                        title: "".concat(t, " ").concat(a),
                                        code: "".concat(n, " ").concat(a)
                                    })
                                }))
                            })), e.abrupt("return", r);
                        case 9:
                        case "end":
                            return e.stop()
                    }
                }), e)
            }))), f.apply(this, arguments)
        }
        var l = new u.Task({
            title: "挂机存物品",
            tags: ["other"],
            batch: !1,
            before: function() {
                var e = (0, c.default)(regeneratorRuntime.mark((function e() {
                    var t, n;
                    return regeneratorRuntime.wrap((function(e) {
                        while (1) switch (e.prev = e.next) {
                            case 0:
                                return e.next = 2, o();
                            case 2:
                                if (t = e.sent, t.length) {
                                    e.next = 7;
                                    break
                                }
                                throw n = "当前地图无法挂机", u.task.log(n), new Error(n);
                            case 7:
                                this.form[0].range = t;
                            case 8:
                            case "end":
                                return e.stop()
                        }
                    }), e, this)
                })));

                function t() {
                    return e.apply(this, arguments)
                }
                return t
            }(),
            form: [{
                title: "挂机目标",
                type: "picker",
                range: [],
                value: 0
            }, {
                title: "仓库存储",
                type: "picker",
                range: ["任务材料", "其他物品"],
                value: 0
            }, {
                title: "其他物品",
                type: "input",
                placeholder: "多个用|分割",
                value: ""
            }]
        }, (0, c.default)(regeneratorRuntime.mark((function e() {
            var t, n, r, f, l, p, d, x, h;
            return regeneratorRuntime.wrap((function(e) {
                while (1) switch (e.prev = e.next) {
                    case 0:
                        if (h = function() {
                                return h = (0, c.default)(regeneratorRuntime.mark((function e() {
                                    var t, n, c, o, d, h, k, v, m, b, g, y, w, _, R, M, j, E, S, O, P, A;
                                    return regeneratorRuntime.wrap((function(e) {
                                        while (1) switch (e.prev = e.next) {
                                            case 0:
                                                return e.next = 2, u.task.sleep();
                                            case 2:
                                                return t = Array.isArray(l) ? l[p % l.length] : l, e.next = 5, u.task.send(t, ["你现在很累了", "<r>walk ", "已经被你的队伍打败过了", "combat"]);
                                            case 5:
                                                if (n = e.sent, c = n.index, o = n.text, 0 !== c && 1 !== c) {
                                                    e.next = 15;
                                                    break
                                                }
                                                return console.warn(o), d = o.match(/(\d+) 秒之后就行/) || ["", 2], h = (0, s.default)(d, 2), h[0], k = h[1], e.next = 13, u.task.sleep(1e3 * Number(k));
                                            case 13:
                                                e.next = 52;
                                                break;
                                            case 15:
                                                if (2 !== c) {
                                                    e.next = 20;
                                                    break
                                                }
                                                v = [o], m = !1, e.next = 29;
                                                break;
                                            case 20:
                                                return e.next = 22, new Promise((function(e) {
                                                    uni.$once("combatready", e)
                                                }));
                                            case 22:
                                                g = e.sent, y = g.msgs, w = g.sleep, _ = g.needClear, v = y, m = w, b = _;
                                            case 29:
                                                if (m || p++, console.log("msgs:", v), R = (0, a.default)(f), 0 === r && (M = v.find((function(e) {
                                                        return /\S+ 需要: \d+ \/ \d+/.test(e)
                                                    })), M && (b = !0, j = (0, u.clearText)(M).replace(/<br\/>/g, "\n").match(/(\S+) 需要: \d+ \/ \d+/)[1], console.log("title:", j), R.includes(j) || R.push(j))), !R.length || !b) {
                                                    e.next = 52;
                                                    break
                                                }
                                                return e.next = 36, u.task.sleep();
                                            case 36:
                                                return e.next = 38, u.task.send("9 2 mps", ["<mp>"]);
                                            case 38:
                                                return E = e.sent, S = E.text, O = S.split("|"), O = O.slice(O.length - 3), P = O[O.length - 3].replace("", ""), A = S.match(new RegExp("00".concat(Number(P).toString(16).toUpperCase(), "(.+?)\\$")))[1], i.default.reset(), i.default.set({
                                                    target: 0,
                                                    items: R
                                                }), e.next = 48, i.default.start(!1, !1);
                                            case 48:
                                                return e.next = 50, u.task.sleep();
                                            case 50:
                                                return e.next = 52, u.task.move("".concat(O[2], " ").concat(P), A);
                                            case 52:
                                                return e.next = 54, x();
                                            case 54:
                                            case "end":
                                                return e.stop()
                                        }
                                    }), e)
                                }))), h.apply(this, arguments)
                            }, x = function() {
                                return h.apply(this, arguments)
                            }, t = this.form[0], n = t.range[t.value], r = this.form[1].value, f = (0, u.toArray)(this.form[2].value), l = n.code || "kill", p = 0, !Array.isArray(l)) {
                            e.next = 15;
                            break
                        }
                        return e.next = 11, o();
                    case 11:
                        if (d = e.sent, l = l.filter((function(e) {
                                return d.find((function(t) {
                                    var n = t.code;
                                    return n === e
                                }))
                            })), l.length) {
                            e.next = 15;
                            break
                        }
                        throw new Error("无法挂机");
                    case 15:
                        return e.next = 17, x();
                    case 17:
                    case "end":
                        return e.stop()
                }
            }), e, this)
        }))));
        t.default = l
    },
    "97f5": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("c5f6"), n("4917"), n("6762"), n("2fdb"), n("7514"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = new s.Task({
                title: "宠物进化",
                tags: ["other"],
                form: [{
                    title: "宠物名称",
                    type: "input",
                    placeholder: "",
                    focus: !0,
                    value: ""
                }, {
                    title: "进化类型",
                    type: "picker",
                    range: ["魂品", "神品", "五品"],
                    value: 0
                }, {
                    title: "修炼类型",
                    type: "picker",
                    range: ["自动", "神品"],
                    value: 0
                }, {
                    title: "自动补充",
                    type: "picker",
                    range: ["商店购买"],
                    value: 0
                }]
            }, (function() {
                var e = this.form[0].value,
                    t = this.form[1],
                    n = t.value;
                if (e) {
                    var r, c = this.form[2].value,
                        u = [{
                            title: "一品.宠物修炼册",
                            value: 5e4
                        }, {
                            title: "二品.宠物修炼册",
                            value: 1e5
                        }, {
                            title: "三品.宠物修炼册",
                            value: 25e4
                        }, {
                            title: "四品.宠物修炼册",
                            value: 75e4
                        }, {
                            title: "五品.宠物修炼册",
                            value: 2e6
                        }, {
                            title: "神品.宠物修炼册",
                            value: 1e7
                        }];
                    return p()
                }

                function i(e) {
                    return o.apply(this, arguments)
                }

                function o() {
                    return o = (0, a.default)(regeneratorRuntime.mark((function e(t) {
                        var n, r, a, c, u;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.next = 4, s.task.move("sgz 105", "宠物学校");
                                case 4:
                                    return e.next = 6, s.task.sleep();
                                case 6:
                                    return e.next = 8, (0, s.findItem)(t, "npc 1002 5", 1);
                                case 8:
                                    return n = e.sent, r = n.code, e.next = 12, s.task.sleep();
                                case 12:
                                    return e.next = 14, s.task.send("".concat(r, " 2"), ["你从宠物教师", "不够"]);
                                case 14:
                                    return a = e.sent, c = a.index, u = a.text, e.next = 19, s.task.sleep();
                                case 19:
                                    return e.next = 21, s.task.cancel();
                                case 21:
                                    if (0 === c) {
                                        e.next = 23;
                                        break
                                    }
                                    throw new Error(u);
                                case 23:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), o.apply(this, arguments)
                }

                function f() {
                    return l.apply(this, arguments)
                }

                function l() {
                    return l = (0, a.default)(regeneratorRuntime.mark((function a() {
                        var o, l, p, d, x, h, k, v, m, b, g, y;
                        return regeneratorRuntime.wrap((function(a) {
                            while (1) switch (a.prev = a.next) {
                                case 0:
                                    if (!(r <= 0)) {
                                        a.next = 4;
                                        break
                                    }
                                    o = {
                                        title: "".concat(t.range[n], ".宠物进化书")
                                    }, a.next = 18;
                                    break;
                                case 4:
                                    if (!c) {
                                        a.next = 8;
                                        break
                                    }
                                    o = u[u.length - 1], a.next = 18;
                                    break;
                                case 8:
                                    l = u.length - 1;
                                case 9:
                                    if (!(l >= 0)) {
                                        a.next = 17;
                                        break
                                    }
                                    if (p = u[l], !(p.value < 2 * r)) {
                                        a.next = 14;
                                        break
                                    }
                                    return o = p, a.abrupt("break", 17);
                                case 14:
                                    l--, a.next = 9;
                                    break;
                                case 17:
                                    o = o || u[0];
                                case 18:
                                    return a.prev = 18, a.next = 21, (0, s.findItem)(o.title, "2", 1);
                                case 21:
                                    return d = a.sent, x = d.code, a.next = 25, s.task.sleep();
                                case 25:
                                    return a.next = 27, s.task.send("".concat(x, " 0"), "<menu");
                                case 27:
                                    if (h = a.sent, k = h.text, v = (0, s.parseMsg)(k).data.list, m = v.find((function(t) {
                                            var n = t.title;
                                            return n.includes(e)
                                        })), !m) {
                                        a.next = 48;
                                        break
                                    }
                                    return a.next = 34, s.task.sleep();
                                case 34:
                                    return a.next = 36, s.task.send(m.code, ["使用了：", "进化成功", "你无法进化它了"]);
                                case 36:
                                    if (b = a.sent, g = b.index, 0 !== g) {
                                        a.next = 44;
                                        break
                                    }
                                    return r -= o.value, a.next = 42, f();
                                case 42:
                                    a.next = 46;
                                    break;
                                case 44:
                                    if (2 !== g) {
                                        a.next = 46;
                                        break
                                    }
                                    throw new Error("停止任务");
                                case 46:
                                    a.next = 54;
                                    break;
                                case 48:
                                    return a.next = 50, s.task.sleep();
                                case 50:
                                    return a.next = 52, s.task.cancel(!0);
                                case 52:
                                    throw s.task.log("目标宠物未找到或无法进化"), new Error("停止任务");
                                case 54:
                                    a.next = 69;
                                    break;
                                case 56:
                                    if (a.prev = 56, a.t0 = a["catch"](18), "停止任务" === a.t0.message || !o.value && !n) {
                                        a.next = 66;
                                        break
                                    }
                                    return console.warn(a.t0), a.next = 62, i(o.title);
                                case 62:
                                    return a.next = 64, f();
                                case 64:
                                    a.next = 69;
                                    break;
                                case 66:
                                    throw y = a.t0.message, "停止任务" !== a.t0.message && s.task.log(y), new Error(y);
                                case 69:
                                case "end":
                                    return a.stop()
                            }
                        }), a, null, [
                            [18, 56]
                        ])
                    }))), l.apply(this, arguments)
                }

                function p() {
                    return d.apply(this, arguments)
                }

                function d() {
                    return d = (0, a.default)(regeneratorRuntime.mark((function t() {
                        var n, a, c, u, i, o, l;
                        return regeneratorRuntime.wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    return r = null, t.next = 3, s.task.sleep();
                                case 3:
                                    return t.next = 5, s.task.send("petcmd 7", "<menu");
                                case 5:
                                    if (n = t.sent, a = n.text, c = (0, s.parseMsg)(a).data.list, u = c.find((function(t) {
                                            var n = t.title;
                                            return n.includes(e)
                                        })), !u) {
                                        t.next = 26;
                                        break
                                    }
                                    return t.next = 12, s.task.sleep();
                                case 12:
                                    return t.next = 14, s.task.send("".concat(u.code, " a"), "[chengzhang]");
                                case 14:
                                    return i = t.sent, o = i.text, console.log(o), l = o.match(/修炼:\s*\d+\s*\(尚缺\s*(\d+)\)/), l && (r = Number(l[1])), console.log("need:", r), t.next = 22, s.task.sleep();
                                case 22:
                                    return t.next = 24, s.task.send("cl", "<menu");
                                case 24:
                                    t.next = 27;
                                    break;
                                case 26:
                                    s.task.log("目标宠物未找到");
                                case 27:
                                    return t.next = 29, s.task.sleep();
                                case 29:
                                    return t.next = 31, s.task.cancel();
                                case 31:
                                    if ("number" !== typeof r) {
                                        t.next = 38;
                                        break
                                    }
                                    return t.next = 34, f();
                                case 34:
                                    return t.next = 36, p();
                                case 36:
                                    t.next = 39;
                                    break;
                                case 38:
                                    s.task.log("宠物进化未开启或已满");
                                case 39:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    }))), d.apply(this, arguments)
                }
            }));
        t.default = c
    },
    9825: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0;
        var a = n("3f7e"),
            s = r(n("b05c")),
            c = new a.Task({
                title: "出售坏装",
                tags: ["item"],
                form: [{
                    title: "坏装名称",
                    type: "input",
                    focus: !0,
                    value: ""
                }],
                reset: function() {
                    this.form[0].value = ""
                },
                set: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                        t = e.target,
                        n = void 0 === t ? "" : t;
                    this.form[0].value = n
                }
            }, (function() {
                var e = this.form[0].value;
                return s.default.start(!1, !0, "move", ["".concat(e, "&已损坏")])
            }));
        t.default = c
    },
    "9aa9": function(e, t) {
        t.f = Object.getOwnPropertySymbols
    },
    "9af0": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("6762"), n("2fdb"), n("7514"), n("28a5");
        var a = r(n("768b"));
        n("f559"), n("96cf");
        var s = r(n("3b8d")),
            c = n("3f7e"),
            u = r(n("31ee")),
            i = new c.Task({
                title: "飞到区域",
                tags: ["other"],
                form: [{
                    title: "地图码",
                    type: "input",
                    placeholder: "",
                    focus: !0,
                    value: ""
                }]
            }, (0, s.default)(regeneratorRuntime.mark((function e() {
                var t, n, r, i, o, f, l, p, d;
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                            if (t = this.form[0].value, "killxx" !== t) {
                                e.next = 7;
                                break
                            }
                            return n = function() {
                                var e = (0, s.default)(regeneratorRuntime.mark((function e() {
                                    var t, r, a, s;
                                    return regeneratorRuntime.wrap((function(e) {
                                        while (1) switch (e.prev = e.next) {
                                            case 0:
                                                return e.next = 2, c.task.sleep();
                                            case 2:
                                                return e.next = 4, c.task.send("5", ["<menu", "<r>combat", "<r>act"]);
                                            case 4:
                                                if (t = e.sent, r = t.index, a = t.text, 0 !== r) {
                                                    e.next = 16;
                                                    break
                                                }
                                                return s = (0, c.parseMsg)(a).data.list, e.next = 11, c.task.sleep();
                                            case 11:
                                                return e.next = 13, c.task.send(s[0].code, ["<pmg", "<r>combat", "<r>act"]);
                                            case 13:
                                                if (0 !== r) {
                                                    e.next = 16;
                                                    break
                                                }
                                                return e.next = 16, n();
                                            case 16:
                                            case "end":
                                                return e.stop()
                                        }
                                    }), e)
                                })));
                                return function() {
                                    return e.apply(this, arguments)
                                }
                            }(), e.next = 5, n();
                        case 5:
                            e.next = 32;
                            break;
                        case 7:
                            if (!t.startsWith("mapxx")) {
                                e.next = 14;
                                break
                            }
                            return r = function() {
                                var e = (0, s.default)(regeneratorRuntime.mark((function e() {
                                    var t, n, a, s;
                                    return regeneratorRuntime.wrap((function(e) {
                                        while (1) switch (e.prev = e.next) {
                                            case 0:
                                                return e.next = 2, c.task.sleep();
                                            case 2:
                                                return e.next = 4, (0, c.getMainDataAsync)();
                                            case 4:
                                                if (t = e.sent.map.tns, n = t.find((function(e) {
                                                        var t = e.text;
                                                        return t.includes(f)
                                                    })), !n) {
                                                    e.next = 21;
                                                    break
                                                }
                                                return e.next = 9, c.task.send(n.code, "<title>");
                                            case 9:
                                                return e.next = 11, c.task.sleep(1e4);
                                            case 11:
                                                return e.next = 13, (0, c.getMainDataAsync)();
                                            case 13:
                                                if (a = e.sent.map.tns, s = a.find((function(e) {
                                                        var t = e.text;
                                                        return t.includes(l)
                                                    })), s) {
                                                    e.next = 17;
                                                    break
                                                }
                                                return e.abrupt("return");
                                            case 17:
                                                return e.next = 19, c.task.send(s.code, "<title>");
                                            case 19:
                                                return e.next = 21, r();
                                            case 21:
                                            case "end":
                                                return e.stop()
                                        }
                                    }), e)
                                })));
                                return function() {
                                    return e.apply(this, arguments)
                                }
                            }(), i = t.split(" "), o = (0, a.default)(i, 3), o[0], f = o[1], l = o[2], e.next = 12, r();
                        case 12:
                            e.next = 32;
                            break;
                        case 14:
                            if (!t.startsWith("buyxx")) {
                                e.next = 30;
                                break
                            }
                            p = function() {
                                var e = (0, s.default)(regeneratorRuntime.mark((function e() {
                                    return regeneratorRuntime.wrap((function(e) {
                                        while (1) switch (e.prev = e.next) {
                                            case 0:
                                                return e.next = 2, c.task.sleep();
                                            case 2:
                                                return e.next = 4, c.task.move("sgz 103", "光芒市场");
                                            case 4:
                                                return e.next = 6, c.task.sleep();
                                            case 6:
                                                return e.next = 8, c.task.send("npc 1001 2", "<menu");
                                            case 8:
                                            case "end":
                                                return e.stop()
                                        }
                                    }), e)
                                })));
                                return function() {
                                    return e.apply(this, arguments)
                                }
                            }(), d = function() {
                                var e = (0, s.default)(regeneratorRuntime.mark((function e() {
                                    var t, n;
                                    return regeneratorRuntime.wrap((function(e) {
                                        while (1) switch (e.prev = e.next) {
                                            case 0:
                                                return e.next = 2, c.task.sleep();
                                            case 2:
                                                return e.next = 4, c.task.send("8 3", "<input");
                                            case 4:
                                                return e.next = 6, c.task.sleep();
                                            case 6:
                                                return e.next = 8, c.task.send("9", ["满了", "<menu"]);
                                            case 8:
                                                if (t = e.sent, n = t.index, 1 !== n) {
                                                    e.next = 15;
                                                    break
                                                }
                                                return e.next = 13, d();
                                            case 13:
                                                e.next = 19;
                                                break;
                                            case 15:
                                                return e.next = 17, c.task.sleep();
                                            case 17:
                                                return e.next = 19, c.task.cancel();
                                            case 19:
                                            case "end":
                                                return e.stop()
                                        }
                                    }), e)
                                })));
                                return function() {
                                    return e.apply(this, arguments)
                                }
                            }();
                        case 17:
                            return e.next = 20, p();
                        case 20:
                            return e.next = 22, d();
                        case 22:
                            return u.default.reset(), u.default.set({
                                target: 0,
                                items: ["月舞剑"]
                            }), e.next = 26, u.default.start(!1, !1);
                        case 26:
                            e.next = 17;
                            break;
                        case 28:
                            e.next = 32;
                            break;
                        case 30:
                            return e.next = 32, c.task.send("map move ".concat(t), "<title");
                        case 32:
                        case "end":
                            return e.stop()
                    }
                }), e, this)
            }))));
        t.default = i
    },
    "9b43": function(e, t, n) {
        var r = n("d8e8");
        e.exports = function(e, t, n) {
            if (r(e), void 0 === t) return e;
            switch (n) {
                case 1:
                    return function(n) {
                        return e.call(t, n)
                    };
                case 2:
                    return function(n, r) {
                        return e.call(t, n, r)
                    };
                case 3:
                    return function(n, r, a) {
                        return e.call(t, n, r, a)
                    }
            }
            return function() {
                return e.apply(t, arguments)
            }
        }
    },
    "9c2b": function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("4917"), n("6762"), n("2fdb"), n("7514"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = new s.Task({
                title: "丢弃物品",
                tags: ["item"],
                options: {
                    userAction: !0
                },
                form: [{
                    title: "物品名称",
                    type: "input",
                    placeholder: "多个用|分割",
                    focus: !0,
                    value: ""
                }],
                before: function() {
                    var e = (0, a.default)(regeneratorRuntime.mark((function e() {
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, this.reset();
                                case 2:
                                case "end":
                                    return e.stop()
                            }
                        }), e, this)
                    })));

                    function t() {
                        return e.apply(this, arguments)
                    }
                    return t
                }(),
                reset: function() {
                    var e = (0, a.default)(regeneratorRuntime.mark((function e() {
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return this.options.userAction = !0, e.next = 3, s.globalSettings.getAsync("discardItem");
                                case 3:
                                    this.form[0].value = e.sent;
                                case 4:
                                case "end":
                                    return e.stop()
                            }
                        }), e, this)
                    })));

                    function t() {
                        return e.apply(this, arguments)
                    }
                    return t
                }(),
                set: function(e) {
                    this.options.userAction = !1;
                    var t = Object.assign({
                            items: []
                        }, e),
                        n = t.items;
                    this.form[0].value = n.join("|")
                }
            }, (function() {
                var e = this.form[0].value;
                this.options.userAction && s.globalSettings.setAsync("discardItem", e);
                var t = (0, s.toArray)(e);
                if (t.length) return c();

                function n(e) {
                    return r.apply(this, arguments)
                }

                function r() {
                    return r = (0, a.default)(regeneratorRuntime.mark((function e(r) {
                        var a, u, i, o, f, l, p, d, x;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return a = r.index, u = r.text, e.next = 3, s.task.sleep();
                                case 3:
                                    if (1 !== a) {
                                        e.next = 5;
                                        break
                                    }
                                    throw new Error(u);
                                case 5:
                                    if (i = (0, s.parseMsg)(u).data.list, o = i.find((function(e) {
                                            var n = e.title,
                                                r = e.list;
                                            return !n.includes("装备中") && r.find((function(e) {
                                                var t = e.code;
                                                return "m" === t
                                            })) && (0, s.canClear)(t, n)
                                        })), o) {
                                        e.next = 20;
                                        break
                                    }
                                    if (!i.find((function(e) {
                                            var t = e.code;
                                            return "r" === t
                                        }))) {
                                        e.next = 15;
                                        break
                                    }
                                    return e.next = 11, s.task.send("r", ["<menu", "<pmg"]);
                                case 11:
                                    return f = e.sent, e.next = 14, n(f);
                                case 14:
                                    return e.abrupt("return", e.sent);
                                case 15:
                                    return e.next = 17, s.task.send("cnt").sleep(1e3);
                                case 17:
                                    return e.abrupt("return", e.sent);
                                case 20:
                                    return e.next = 22, s.task.send("".concat(o.code, " m"), ["<pmg(tou:5)(c:[1]", "<input"]);
                                case 22:
                                    return l = e.sent, p = l.index, d = l.text, e.next = 27, s.task.sleep();
                                case 27:
                                    if (1 !== p) {
                                        e.next = 31;
                                        break
                                    }
                                    return x = (d.match(/有(\d+)/) || ["", "1"])[1], e.next = 31, s.task.send(x, ["<pmg(tou:5)(c:[1]"]);
                                case 31:
                                    return e.next = 33, s.task.send("1", "丢弃了");
                                case 33:
                                    return e.next = 35, c();
                                case 35:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), r.apply(this, arguments)
                }

                function c() {
                    return u.apply(this, arguments)
                }

                function u() {
                    return u = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var t;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.next = 4, s.task.send("m5 all", ["<menu", "<pmg"]);
                                case 4:
                                    return t = e.sent, e.next = 7, n(t);
                                case 7:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), u.apply(this, arguments)
                }
            }));
        t.default = c
    },
    "9c6c": function(e, t, n) {
        var r = n("2b4c")("unscopables"),
            a = Array.prototype;
        void 0 == a[r] && n("32e9")(a, r, {}), e.exports = function(e) {
            a[r][e] = !0
        }
    },
    "9cd0": function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0;
        var r = n("3f7e"),
            a = new r.Task({
                title: "更换生命球",
                tags: ["item"]
            }, (function() {
                return (0, r.findItem)(/品\.生命球 \(\d+\)$/, 1).catch((function() {
                    return (0, r.buy)(["四品.生命球", "三品.生命球"]).then((function() {
                        return (0, r.findItem)(/品\.生命球 \(\d+\)/, 1)
                    }))
                })).then((function(e) {
                    var t = e.code;
                    return r.task.sleep().then((function() {
                        return r.task.send("".concat(t, " p"), ["即将更换装备"])
                    }))
                })).then((function() {
                    return r.task.sleep()
                })).then((function() {
                    return r.task.send("ch", ["你装备", "需要先签上你的名字"])
                })).then((function(e) {
                    var t = e.index;
                    if (1 === t) return r.task.sleep().then((function() {
                        return r.task.send("yes", "你装备")
                    }))
                })).then((function() {
                    return r.task.sleep()
                }))
            }));
        t.default = a
    },
    "9def": function(e, t, n) {
        var r = n("4588"),
            a = Math.min;
        e.exports = function(e) {
            return e > 0 ? a(r(e), 9007199254740991) : 0
        }
    },
    "9e1e": function(e, t, n) {
        e.exports = !n("79e5")((function() {
            return 7 != Object.defineProperty({}, "a", {
                get: function() {
                    return 7
                }
            }).a
        }))
    },
    a11b: function(e, t, n) {
        (function(t, r, a) {
            e.exports = r(n("21bf"), n("38ba"))
        })(0, (function(e) {
            return e.pad.Iso10126 = {
                pad: function(t, n) {
                    var r = 4 * n,
                        a = r - t.sigBytes % r;
                    t.concat(e.lib.WordArray.random(a - 1)).concat(e.lib.WordArray.create([a << 24], 1))
                },
                unpad: function(e) {
                    var t = 255 & e.words[e.sigBytes - 1 >>> 2];
                    e.sigBytes -= t
                }
            }, e.pad.Iso10126
        }))
    },
    a159: function(e, t, n) {
        var r = n("e4ae"),
            a = n("7e90"),
            s = n("1691"),
            c = n("5559")("IE_PROTO"),
            u = function() {},
            i = "prototype",
            o = function() {
                var e, t = n("1ec9")("iframe"),
                    r = s.length,
                    a = "<",
                    c = ">";
                t.style.display = "none", n("32fc").appendChild(t), t.src = "javascript:", e = t.contentWindow.document, e.open(), e.write(a + "script" + c + "document.F=Object" + a + "/script" + c), e.close(), o = e.F;
                while (r--) delete o[i][s[r]];
                return o()
            };
        e.exports = Object.create || function(e, t) {
            var n;
            return null !== e ? (u[i] = r(e), n = new u, u[i] = null, n[c] = e) : n = o(), void 0 === t ? n : a(n, t)
        }
    },
    a22a: function(e, t, n) {
        var r = n("d864"),
            a = n("b0dc"),
            s = n("3702"),
            c = n("e4ae"),
            u = n("b447"),
            i = n("7cd6"),
            o = {},
            f = {};
        t = e.exports = function(e, t, n, l, p) {
            var d, x, h, k, v = p ? function() {
                    return e
                } : i(e),
                m = r(n, l, t ? 2 : 1),
                b = 0;
            if ("function" != typeof v) throw TypeError(e + " is not iterable!");
            if (s(v)) {
                for (d = u(e.length); d > b; b++)
                    if (k = t ? m(c(x = e[b])[0], x[1]) : m(e[b]), k === o || k === f) return k
            } else
                for (h = v.call(e); !(x = h.next()).done;)
                    if (k = a(h, m, x.value, t), k === o || k === f) return k
        };
        t.BREAK = o, t.RETURN = f
    },
    a40e: function(e, t, n) {
        (function(t, r, a) {
            e.exports = r(n("21bf"), n("1132"), n("72fe"), n("2b79"), n("38ba"))
        })(0, (function(e) {
            return function() {
                var t = e,
                    n = t.lib,
                    r = n.WordArray,
                    a = n.BlockCipher,
                    s = t.algo,
                    c = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4],
                    u = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32],
                    i = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28],
                    o = [{
                        0: 8421888,
                        268435456: 32768,
                        536870912: 8421378,
                        805306368: 2,
                        1073741824: 512,
                        1342177280: 8421890,
                        1610612736: 8389122,
                        1879048192: 8388608,
                        2147483648: 514,
                        2415919104: 8389120,
                        2684354560: 33280,
                        2952790016: 8421376,
                        3221225472: 32770,
                        3489660928: 8388610,
                        3758096384: 0,
                        4026531840: 33282,
                        134217728: 0,
                        402653184: 8421890,
                        671088640: 33282,
                        939524096: 32768,
                        1207959552: 8421888,
                        1476395008: 512,
                        1744830464: 8421378,
                        2013265920: 2,
                        2281701376: 8389120,
                        2550136832: 33280,
                        2818572288: 8421376,
                        3087007744: 8389122,
                        3355443200: 8388610,
                        3623878656: 32770,
                        3892314112: 514,
                        4160749568: 8388608,
                        1: 32768,
                        268435457: 2,
                        536870913: 8421888,
                        805306369: 8388608,
                        1073741825: 8421378,
                        1342177281: 33280,
                        1610612737: 512,
                        1879048193: 8389122,
                        2147483649: 8421890,
                        2415919105: 8421376,
                        2684354561: 8388610,
                        2952790017: 33282,
                        3221225473: 514,
                        3489660929: 8389120,
                        3758096385: 32770,
                        4026531841: 0,
                        134217729: 8421890,
                        402653185: 8421376,
                        671088641: 8388608,
                        939524097: 512,
                        1207959553: 32768,
                        1476395009: 8388610,
                        1744830465: 2,
                        2013265921: 33282,
                        2281701377: 32770,
                        2550136833: 8389122,
                        2818572289: 514,
                        3087007745: 8421888,
                        3355443201: 8389120,
                        3623878657: 0,
                        3892314113: 33280,
                        4160749569: 8421378
                    }, {
                        0: 1074282512,
                        16777216: 16384,
                        33554432: 524288,
                        50331648: 1074266128,
                        67108864: 1073741840,
                        83886080: 1074282496,
                        100663296: 1073758208,
                        117440512: 16,
                        134217728: 540672,
                        150994944: 1073758224,
                        167772160: 1073741824,
                        184549376: 540688,
                        201326592: 524304,
                        218103808: 0,
                        234881024: 16400,
                        251658240: 1074266112,
                        8388608: 1073758208,
                        25165824: 540688,
                        41943040: 16,
                        58720256: 1073758224,
                        75497472: 1074282512,
                        92274688: 1073741824,
                        109051904: 524288,
                        125829120: 1074266128,
                        142606336: 524304,
                        159383552: 0,
                        176160768: 16384,
                        192937984: 1074266112,
                        209715200: 1073741840,
                        226492416: 540672,
                        243269632: 1074282496,
                        260046848: 16400,
                        268435456: 0,
                        285212672: 1074266128,
                        301989888: 1073758224,
                        318767104: 1074282496,
                        335544320: 1074266112,
                        352321536: 16,
                        369098752: 540688,
                        385875968: 16384,
                        402653184: 16400,
                        419430400: 524288,
                        436207616: 524304,
                        452984832: 1073741840,
                        469762048: 540672,
                        486539264: 1073758208,
                        503316480: 1073741824,
                        520093696: 1074282512,
                        276824064: 540688,
                        293601280: 524288,
                        310378496: 1074266112,
                        327155712: 16384,
                        343932928: 1073758208,
                        360710144: 1074282512,
                        377487360: 16,
                        394264576: 1073741824,
                        411041792: 1074282496,
                        427819008: 1073741840,
                        444596224: 1073758224,
                        461373440: 524304,
                        478150656: 0,
                        494927872: 16400,
                        511705088: 1074266128,
                        528482304: 540672
                    }, {
                        0: 260,
                        1048576: 0,
                        2097152: 67109120,
                        3145728: 65796,
                        4194304: 65540,
                        5242880: 67108868,
                        6291456: 67174660,
                        7340032: 67174400,
                        8388608: 67108864,
                        9437184: 67174656,
                        10485760: 65792,
                        11534336: 67174404,
                        12582912: 67109124,
                        13631488: 65536,
                        14680064: 4,
                        15728640: 256,
                        524288: 67174656,
                        1572864: 67174404,
                        2621440: 0,
                        3670016: 67109120,
                        4718592: 67108868,
                        5767168: 65536,
                        6815744: 65540,
                        7864320: 260,
                        8912896: 4,
                        9961472: 256,
                        11010048: 67174400,
                        12058624: 65796,
                        13107200: 65792,
                        14155776: 67109124,
                        15204352: 67174660,
                        16252928: 67108864,
                        16777216: 67174656,
                        17825792: 65540,
                        18874368: 65536,
                        19922944: 67109120,
                        20971520: 256,
                        22020096: 67174660,
                        23068672: 67108868,
                        24117248: 0,
                        25165824: 67109124,
                        26214400: 67108864,
                        27262976: 4,
                        28311552: 65792,
                        29360128: 67174400,
                        30408704: 260,
                        31457280: 65796,
                        32505856: 67174404,
                        17301504: 67108864,
                        18350080: 260,
                        19398656: 67174656,
                        20447232: 0,
                        21495808: 65540,
                        22544384: 67109120,
                        23592960: 256,
                        24641536: 67174404,
                        25690112: 65536,
                        26738688: 67174660,
                        27787264: 65796,
                        28835840: 67108868,
                        29884416: 67109124,
                        30932992: 67174400,
                        31981568: 4,
                        33030144: 65792
                    }, {
                        0: 2151682048,
                        65536: 2147487808,
                        131072: 4198464,
                        196608: 2151677952,
                        262144: 0,
                        327680: 4198400,
                        393216: 2147483712,
                        458752: 4194368,
                        524288: 2147483648,
                        589824: 4194304,
                        655360: 64,
                        720896: 2147487744,
                        786432: 2151678016,
                        851968: 4160,
                        917504: 4096,
                        983040: 2151682112,
                        32768: 2147487808,
                        98304: 64,
                        163840: 2151678016,
                        229376: 2147487744,
                        294912: 4198400,
                        360448: 2151682112,
                        425984: 0,
                        491520: 2151677952,
                        557056: 4096,
                        622592: 2151682048,
                        688128: 4194304,
                        753664: 4160,
                        819200: 2147483648,
                        884736: 4194368,
                        950272: 4198464,
                        1015808: 2147483712,
                        1048576: 4194368,
                        1114112: 4198400,
                        1179648: 2147483712,
                        1245184: 0,
                        1310720: 4160,
                        1376256: 2151678016,
                        1441792: 2151682048,
                        1507328: 2147487808,
                        1572864: 2151682112,
                        1638400: 2147483648,
                        1703936: 2151677952,
                        1769472: 4198464,
                        1835008: 2147487744,
                        1900544: 4194304,
                        1966080: 64,
                        2031616: 4096,
                        1081344: 2151677952,
                        1146880: 2151682112,
                        1212416: 0,
                        1277952: 4198400,
                        1343488: 4194368,
                        1409024: 2147483648,
                        1474560: 2147487808,
                        1540096: 64,
                        1605632: 2147483712,
                        1671168: 4096,
                        1736704: 2147487744,
                        1802240: 2151678016,
                        1867776: 4160,
                        1933312: 2151682048,
                        1998848: 4194304,
                        2064384: 4198464
                    }, {
                        0: 128,
                        4096: 17039360,
                        8192: 262144,
                        12288: 536870912,
                        16384: 537133184,
                        20480: 16777344,
                        24576: 553648256,
                        28672: 262272,
                        32768: 16777216,
                        36864: 537133056,
                        40960: 536871040,
                        45056: 553910400,
                        49152: 553910272,
                        53248: 0,
                        57344: 17039488,
                        61440: 553648128,
                        2048: 17039488,
                        6144: 553648256,
                        10240: 128,
                        14336: 17039360,
                        18432: 262144,
                        22528: 537133184,
                        26624: 553910272,
                        30720: 536870912,
                        34816: 537133056,
                        38912: 0,
                        43008: 553910400,
                        47104: 16777344,
                        51200: 536871040,
                        55296: 553648128,
                        59392: 16777216,
                        63488: 262272,
                        65536: 262144,
                        69632: 128,
                        73728: 536870912,
                        77824: 553648256,
                        81920: 16777344,
                        86016: 553910272,
                        90112: 537133184,
                        94208: 16777216,
                        98304: 553910400,
                        102400: 553648128,
                        106496: 17039360,
                        110592: 537133056,
                        114688: 262272,
                        118784: 536871040,
                        122880: 0,
                        126976: 17039488,
                        67584: 553648256,
                        71680: 16777216,
                        75776: 17039360,
                        79872: 537133184,
                        83968: 536870912,
                        88064: 17039488,
                        92160: 128,
                        96256: 553910272,
                        100352: 262272,
                        104448: 553910400,
                        108544: 0,
                        112640: 553648128,
                        116736: 16777344,
                        120832: 262144,
                        124928: 537133056,
                        129024: 536871040
                    }, {
                        0: 268435464,
                        256: 8192,
                        512: 270532608,
                        768: 270540808,
                        1024: 268443648,
                        1280: 2097152,
                        1536: 2097160,
                        1792: 268435456,
                        2048: 0,
                        2304: 268443656,
                        2560: 2105344,
                        2816: 8,
                        3072: 270532616,
                        3328: 2105352,
                        3584: 8200,
                        3840: 270540800,
                        128: 270532608,
                        384: 270540808,
                        640: 8,
                        896: 2097152,
                        1152: 2105352,
                        1408: 268435464,
                        1664: 268443648,
                        1920: 8200,
                        2176: 2097160,
                        2432: 8192,
                        2688: 268443656,
                        2944: 270532616,
                        3200: 0,
                        3456: 270540800,
                        3712: 2105344,
                        3968: 268435456,
                        4096: 268443648,
                        4352: 270532616,
                        4608: 270540808,
                        4864: 8200,
                        5120: 2097152,
                        5376: 268435456,
                        5632: 268435464,
                        5888: 2105344,
                        6144: 2105352,
                        6400: 0,
                        6656: 8,
                        6912: 270532608,
                        7168: 8192,
                        7424: 268443656,
                        7680: 270540800,
                        7936: 2097160,
                        4224: 8,
                        4480: 2105344,
                        4736: 2097152,
                        4992: 268435464,
                        5248: 268443648,
                        5504: 8200,
                        5760: 270540808,
                        6016: 270532608,
                        6272: 270540800,
                        6528: 270532616,
                        6784: 8192,
                        7040: 2105352,
                        7296: 2097160,
                        7552: 0,
                        7808: 268435456,
                        8064: 268443656
                    }, {
                        0: 1048576,
                        16: 33555457,
                        32: 1024,
                        48: 1049601,
                        64: 34604033,
                        80: 0,
                        96: 1,
                        112: 34603009,
                        128: 33555456,
                        144: 1048577,
                        160: 33554433,
                        176: 34604032,
                        192: 34603008,
                        208: 1025,
                        224: 1049600,
                        240: 33554432,
                        8: 34603009,
                        24: 0,
                        40: 33555457,
                        56: 34604032,
                        72: 1048576,
                        88: 33554433,
                        104: 33554432,
                        120: 1025,
                        136: 1049601,
                        152: 33555456,
                        168: 34603008,
                        184: 1048577,
                        200: 1024,
                        216: 34604033,
                        232: 1,
                        248: 1049600,
                        256: 33554432,
                        272: 1048576,
                        288: 33555457,
                        304: 34603009,
                        320: 1048577,
                        336: 33555456,
                        352: 34604032,
                        368: 1049601,
                        384: 1025,
                        400: 34604033,
                        416: 1049600,
                        432: 1,
                        448: 0,
                        464: 34603008,
                        480: 33554433,
                        496: 1024,
                        264: 1049600,
                        280: 33555457,
                        296: 34603009,
                        312: 1,
                        328: 33554432,
                        344: 1048576,
                        360: 1025,
                        376: 34604032,
                        392: 33554433,
                        408: 34603008,
                        424: 0,
                        440: 34604033,
                        456: 1049601,
                        472: 1024,
                        488: 33555456,
                        504: 1048577
                    }, {
                        0: 134219808,
                        1: 131072,
                        2: 134217728,
                        3: 32,
                        4: 131104,
                        5: 134350880,
                        6: 134350848,
                        7: 2048,
                        8: 134348800,
                        9: 134219776,
                        10: 133120,
                        11: 134348832,
                        12: 2080,
                        13: 0,
                        14: 134217760,
                        15: 133152,
                        2147483648: 2048,
                        2147483649: 134350880,
                        2147483650: 134219808,
                        2147483651: 134217728,
                        2147483652: 134348800,
                        2147483653: 133120,
                        2147483654: 133152,
                        2147483655: 32,
                        2147483656: 134217760,
                        2147483657: 2080,
                        2147483658: 131104,
                        2147483659: 134350848,
                        2147483660: 0,
                        2147483661: 134348832,
                        2147483662: 134219776,
                        2147483663: 131072,
                        16: 133152,
                        17: 134350848,
                        18: 32,
                        19: 2048,
                        20: 134219776,
                        21: 134217760,
                        22: 134348832,
                        23: 131072,
                        24: 0,
                        25: 131104,
                        26: 134348800,
                        27: 134219808,
                        28: 134350880,
                        29: 133120,
                        30: 2080,
                        31: 134217728,
                        2147483664: 131072,
                        2147483665: 2048,
                        2147483666: 134348832,
                        2147483667: 133152,
                        2147483668: 32,
                        2147483669: 134348800,
                        2147483670: 134217728,
                        2147483671: 134219808,
                        2147483672: 134350880,
                        2147483673: 134217760,
                        2147483674: 134219776,
                        2147483675: 0,
                        2147483676: 133120,
                        2147483677: 2080,
                        2147483678: 131104,
                        2147483679: 134350848
                    }],
                    f = [4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504, 2147483679],
                    l = s.DES = a.extend({
                        _doReset: function() {
                            for (var e = this._key, t = e.words, n = [], r = 0; r < 56; r++) {
                                var a = c[r] - 1;
                                n[r] = t[a >>> 5] >>> 31 - a % 32 & 1
                            }
                            for (var s = this._subKeys = [], o = 0; o < 16; o++) {
                                var f = s[o] = [],
                                    l = i[o];
                                for (r = 0; r < 24; r++) f[r / 6 | 0] |= n[(u[r] - 1 + l) % 28] << 31 - r % 6, f[4 + (r / 6 | 0)] |= n[28 + (u[r + 24] - 1 + l) % 28] << 31 - r % 6;
                                f[0] = f[0] << 1 | f[0] >>> 31;
                                for (r = 1; r < 7; r++) f[r] = f[r] >>> 4 * (r - 1) + 3;
                                f[7] = f[7] << 5 | f[7] >>> 27
                            }
                            var p = this._invSubKeys = [];
                            for (r = 0; r < 16; r++) p[r] = s[15 - r]
                        },
                        encryptBlock: function(e, t) {
                            this._doCryptBlock(e, t, this._subKeys)
                        },
                        decryptBlock: function(e, t) {
                            this._doCryptBlock(e, t, this._invSubKeys)
                        },
                        _doCryptBlock: function(e, t, n) {
                            this._lBlock = e[t], this._rBlock = e[t + 1], p.call(this, 4, 252645135), p.call(this, 16, 65535), d.call(this, 2, 858993459), d.call(this, 8, 16711935), p.call(this, 1, 1431655765);
                            for (var r = 0; r < 16; r++) {
                                for (var a = n[r], s = this._lBlock, c = this._rBlock, u = 0, i = 0; i < 8; i++) u |= o[i][((c ^ a[i]) & f[i]) >>> 0];
                                this._lBlock = c, this._rBlock = s ^ u
                            }
                            var l = this._lBlock;
                            this._lBlock = this._rBlock, this._rBlock = l, p.call(this, 1, 1431655765), d.call(this, 8, 16711935), d.call(this, 2, 858993459), p.call(this, 16, 65535), p.call(this, 4, 252645135), e[t] = this._lBlock, e[t + 1] = this._rBlock
                        },
                        keySize: 2,
                        ivSize: 2,
                        blockSize: 2
                    });

                function p(e, t) {
                    var n = (this._lBlock >>> e ^ this._rBlock) & t;
                    this._rBlock ^= n, this._lBlock ^= n << e
                }

                function d(e, t) {
                    var n = (this._rBlock >>> e ^ this._lBlock) & t;
                    this._lBlock ^= n, this._rBlock ^= n << e
                }
                t.DES = a._createHelper(l);
                var x = s.TripleDES = a.extend({
                    _doReset: function() {
                        var e = this._key,
                            t = e.words;
                        if (2 !== t.length && 4 !== t.length && t.length < 6) throw new Error("Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.");
                        var n = t.slice(0, 2),
                            a = t.length < 4 ? t.slice(0, 2) : t.slice(2, 4),
                            s = t.length < 6 ? t.slice(0, 2) : t.slice(4, 6);
                        this._des1 = l.createEncryptor(r.create(n)), this._des2 = l.createEncryptor(r.create(a)), this._des3 = l.createEncryptor(r.create(s))
                    },
                    encryptBlock: function(e, t) {
                        this._des1.encryptBlock(e, t), this._des2.decryptBlock(e, t), this._des3.encryptBlock(e, t)
                    },
                    decryptBlock: function(e, t) {
                        this._des3.decryptBlock(e, t), this._des2.encryptBlock(e, t), this._des1.decryptBlock(e, t)
                    },
                    keySize: 6,
                    ivSize: 2,
                    blockSize: 2
                });
                t.TripleDES = a._createHelper(x)
            }(), e.TripleDES
        }))
    },
    a46e: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0;
        var a = r(n("768b"));
        n("6762"), n("2fdb"), n("4917"), n("96cf");
        var s = r(n("3b8d")),
            c = n("3f7e"),
            u = new c.Task({
                title: "摆摊",
                tags: ["item"],
                options: {
                    frist: !0
                },
                before: function() {
                    var e = (0, s.default)(regeneratorRuntime.mark((function e() {
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return this.options.frist = !0, e.next = 3, c.globalSettings.getAsync("sellItem");
                                case 3:
                                    this.form[0].value = e.sent, console.log(this.form[0].value);
                                case 5:
                                case "end":
                                    return e.stop()
                            }
                        }), e, this)
                    })));

                    function t() {
                        return e.apply(this, arguments)
                    }
                    return t
                }(),
                form: [{
                    title: "物品清单",
                    type: "input",
                    placeholder: "名称:价格|名称:价格",
                    value: ""
                }, {
                    title: "覆盖原价",
                    type: "checkbox",
                    value: !1
                }, {
                    title: "等待摊位",
                    type: "checkbox",
                    value: !0
                }]
            }, (0, s.default)(regeneratorRuntime.mark((function e() {
                var t, n, r, u, i, o, f, l, p, d, x = this;
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                            return d = function() {
                                return d = (0, s.default)(regeneratorRuntime.mark((function e() {
                                    var n, r, a, s;
                                    return regeneratorRuntime.wrap((function(e) {
                                        while (1) switch (e.prev = e.next) {
                                            case 0:
                                                return e.next = 2, c.task.sleep();
                                            case 2:
                                                return e.next = 4, c.task.send("m5 s", "<menu");
                                            case 4:
                                                if (n = e.sent, !n.text.includes("[4]")) {
                                                    e.next = 12;
                                                    break
                                                }
                                                return e.next = 8, c.task.sleep();
                                            case 8:
                                                return e.next = 10, c.task.cancel(!0);
                                            case 10:
                                                return l(), e.abrupt("return");
                                            case 12:
                                                return e.next = 14, o(n);
                                            case 14:
                                                return t && l(), e.next = 17, c.task.sleep();
                                            case 17:
                                                return e.next = 19, c.task.send("1 3", ["先清理一下", "摊位已经满", "开始摆摊"]);
                                            case 19:
                                                if (r = e.sent, a = r.index, s = r.text, 0 !== a) {
                                                    e.next = 26;
                                                    break
                                                }
                                                throw new Error(s);
                                            case 26:
                                                if (1 !== a) {
                                                    e.next = 31;
                                                    break
                                                }
                                                if (u) {
                                                    e.next = 29;
                                                    break
                                                }
                                                throw new Error(s);
                                            case 29:
                                                return e.next = 31, p();
                                            case 31:
                                            case "end":
                                                return e.stop()
                                        }
                                    }), e)
                                }))), d.apply(this, arguments)
                            }, p = function() {
                                return d.apply(this, arguments)
                            }, f = function() {
                                return f = (0, s.default)(regeneratorRuntime.mark((function e(n) {
                                    var s, u, f, l, p, d, x, h, k, v, m, b, g, y, w;
                                    return regeneratorRuntime.wrap((function(e) {
                                        while (1) switch (e.prev = e.next) {
                                            case 0:
                                                s = n.text, u = (0, c.parseMsg)(s).data.list, f = 0;
                                            case 3:
                                                if (!(f < u.length)) {
                                                    e.next = 41;
                                                    break
                                                }
                                                if (l = u[f], p = l.title, d = l.code, !(!p.includes(": 单价") || r && t)) {
                                                    e.next = 38;
                                                    break
                                                }
                                                if ("(下一页)" !== p) {
                                                    e.next = 15;
                                                    break
                                                }
                                                return e.next = 9, c.task.sleep();
                                            case 9:
                                                return e.next = 11, c.task.send("".concat(d), "<menu");
                                            case 11:
                                                return x = e.sent, e.next = 14, o(x);
                                            case 14:
                                                return e.abrupt("return", e.sent);
                                            case 15:
                                                h = 0;
                                            case 16:
                                                if (!(h < i.length)) {
                                                    e.next = 38;
                                                    break
                                                }
                                                if (k = (0, a.default)(i[h], 4), k[0], v = k[1], m = k[2], b = k[3], !p.includes(v)) {
                                                    e.next = 35;
                                                    break
                                                }
                                                return e.next = 21, c.task.sleep();
                                            case 21:
                                                return e.next = 23, c.task.send("".concat(d, " ").concat("银" === b ? 0 : 5), ["<input", "<menu"]);
                                            case 23:
                                                if (g = e.sent, y = g.index, 1 !== y) {
                                                    e.next = 27;
                                                    break
                                                }
                                                return e.abrupt("return");
                                            case 27:
                                                return e.next = 29, c.task.sleep();
                                            case 29:
                                                return e.next = 31, c.task.send("".concat(m), "<menu");
                                            case 31:
                                                return w = e.sent, e.next = 34, o(w);
                                            case 34:
                                                return e.abrupt("return", e.sent);
                                            case 35:
                                                h++, e.next = 16;
                                                break;
                                            case 38:
                                                f++, e.next = 3;
                                                break;
                                            case 41:
                                            case "end":
                                                return e.stop()
                                        }
                                    }), e)
                                }))), f.apply(this, arguments)
                            }, o = function(e) {
                                return f.apply(this, arguments)
                            }, t = this.options.frist, n = this.form[0].value, r = this.form[1].value, u = this.form[2].value, i = (0, c.toArray)(n).map((function(e) {
                                var t = e.match(/^(.+?)[:：](\d+)(元宝|银)/);
                                if (!t) {
                                    var n = "格式错误：".concat(e, "，示例：锻造宝石:1银币｜精炼:1元宝");
                                    throw c.task.log(n).sleep(100), new Error(n)
                                }
                                return t
                            })), c.globalSettings.setAsync("sellItem", n), l = function() {
                                t = x.options.frist = !1, x.update()
                            }, e.next = 13, p();
                        case 13:
                            return e.abrupt("return", new Promise((function() {})));
                        case 14:
                        case "end":
                            return e.stop()
                    }
                }), e, this)
            }))));
        t.default = u
    },
    a481: function(e, t, n) {
        "use strict";
        var r = n("cb7c"),
            a = n("4bf8"),
            s = n("9def"),
            c = n("4588"),
            u = n("0390"),
            i = n("5f1b"),
            o = Math.max,
            f = Math.min,
            l = Math.floor,
            p = /\$([$&`']|\d\d?|<[^>]*>)/g,
            d = /\$([$&`']|\d\d?)/g,
            x = function(e) {
                return void 0 === e ? e : String(e)
            };
        n("214f")("replace", 2, (function(e, t, n, h) {
            return [function(r, a) {
                var s = e(this),
                    c = void 0 == r ? void 0 : r[t];
                return void 0 !== c ? c.call(r, s, a) : n.call(String(s), r, a)
            }, function(e, t) {
                var a = h(n, e, this, t);
                if (a.done) return a.value;
                var l = r(e),
                    p = String(this),
                    d = "function" === typeof t;
                d || (t = String(t));
                var v = l.global;
                if (v) {
                    var m = l.unicode;
                    l.lastIndex = 0
                }
                var b = [];
                while (1) {
                    var g = i(l, p);
                    if (null === g) break;
                    if (b.push(g), !v) break;
                    var y = String(g[0]);
                    "" === y && (l.lastIndex = u(p, s(l.lastIndex), m))
                }
                for (var w = "", _ = 0, R = 0; R < b.length; R++) {
                    g = b[R];
                    for (var M = String(g[0]), j = o(f(c(g.index), p.length), 0), E = [], S = 1; S < g.length; S++) E.push(x(g[S]));
                    var O = g.groups;
                    if (d) {
                        var P = [M].concat(E, j, p);
                        void 0 !== O && P.push(O);
                        var A = String(t.apply(void 0, P))
                    } else A = k(M, p, j, E, O, t);
                    j >= _ && (w += p.slice(_, j) + A, _ = j + M.length)
                }
                return w + p.slice(_)
            }];

            function k(e, t, r, s, c, u) {
                var i = r + e.length,
                    o = s.length,
                    f = d;
                return void 0 !== c && (c = a(c), f = p), n.call(u, f, (function(n, a) {
                    var u;
                    switch (a.charAt(0)) {
                        case "$":
                            return "$";
                        case "&":
                            return e;
                        case "`":
                            return t.slice(0, r);
                        case "'":
                            return t.slice(i);
                        case "<":
                            u = c[a.slice(1, -1)];
                            break;
                        default:
                            var f = +a;
                            if (0 === f) return n;
                            if (f > o) {
                                var p = l(f / 10);
                                return 0 === p ? n : p <= o ? void 0 === s[p - 1] ? a.charAt(1) : s[p - 1] + a.charAt(1) : n
                            }
                            u = s[f - 1]
                    }
                    return void 0 === u ? "" : u
                }))
            }
        }))
    },
    a564: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("4917"), n("6762"), n("2fdb"), n("ac6a"), n("f559"), n("7514"), n("c5f6");
        var r = n("3f7e"),
            a = new r.Task({
                title: "精灵学院大会考-答题",
                tags: ["event"],
                form: [{
                    title: "最小延迟",
                    type: "input",
                    placeholder: "1000",
                    focus: !0,
                    value: "1000"
                }]
            }, (function() {
                var e, t, n = !0,
                    a = !1,
                    s = Number(this.form[0].value || "1000");

                function c(n, s) {
                    r.task.send(n), e = s, t = String(Number(n) - 2 || 0), a = !1
                }

                function u(n) {
                    var a = n.find((function(e) {
                        if ("string" === typeof e) return e = (0, r.parseMsg)(e), "pmg" === e.type && e.text.startsWith("错误！")
                    }));
                    a && e && t && uni.request({
                        url: "https://i-weather.cn/api/?key=jldhk&question=".concat(encodeURIComponent(e), "&fail=").concat(t)
                    }), e = null, t = null
                }
                return s = isNaN(s) ? 1e3 : s, new Promise((function(e) {
                    function t(i) {
                        i = i.map((function(e) {
                            return (0, r.clearText)(e)
                        })), i.forEach((function(o) {
                            if ("string" === typeof o) {
                                o = (0, r.parseMsg)(o);
                                var f = o.text;
                                if ("menu" === o.type || "pmg" === o.type)
                                    if ((f.includes("本次答题结束") || f.includes("精灵学院大会考")) && u(i), f.includes("不能答题") || f.includes("你今天已经答过了") || f.includes("本次答题结束")) uni.$off("msgs", t), e();
                                    else if (f.includes("精灵学院大会考")) {
                                    if (f.includes("[jiabei]")) {
                                        var l = Number(f.match(/本次答题得分加倍\((\d)\)次/)[1]);
                                        return l <= 1 && (n = !1), void r.task.sleep().then((function() {
                                            r.task.send("jiabei"), a = !0
                                        }))
                                    }
                                    if (n && !a) return void r.task.sleep().then((function() {
                                        r.task.send("assistant")
                                    }));
                                    var p = Date.now();
                                    (0, r.getKey)().then((function(e) {
                                        uni.request({
                                            url: "https://i-weather.cn/api/?key=jldhk&question=".concat(encodeURIComponent(f), "&k=").concat(e),
                                            success: function(e) {
                                                setTimeout((function() {
                                                    c(e.data.answer, f)
                                                }), Math.max(0, s - (Date.now() - p)))
                                            },
                                            fail: function() {
                                                c("2", f)
                                            }
                                        })
                                    }))
                                }
                            }
                        }))
                    }
                    uni.$on("msgs", t), r.task.send("jldhk_dati")
                }))
            }));
        t.default = a
    },
    a57a: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = new s.Task({
                title: "装备分解",
                tags: ["item"],
                form: [{
                    title: "装备名称",
                    type: "input",
                    placeholder: "",
                    value: ""
                }]
            }, (function() {
                var e = this.form[0].value;

                function t() {
                    return n.apply(this, arguments)
                }

                function n() {
                    return n = (0, a.default)(regeneratorRuntime.mark((function n() {
                        var r, a, c;
                        return regeneratorRuntime.wrap((function(n) {
                            while (1) switch (n.prev = n.next) {
                                case 0:
                                    return n.next = 2, s.task.sleep();
                                case 2:
                                    return n.next = 4, (0, s.findItem)(e, "npc 1000 4", 1);
                                case 4:
                                    return r = n.sent, n.next = 7, s.task.sleep();
                                case 7:
                                    return n.next = 9, s.task.send("".concat(r.code), ["[~yesgo]"]);
                                case 9:
                                    return n.next = 11, s.task.sleep();
                                case 11:
                                    return n.next = 13, s.task.send("yesgo", ["你分解了", "活力值只有", "才能完成装备分解"]);
                                case 13:
                                    if (a = n.sent, c = a.index, 0 !== c) {
                                        n.next = 18;
                                        break
                                    }
                                    return n.next = 18, t();
                                case 18:
                                case "end":
                                    return n.stop()
                            }
                        }), n)
                    }))), n.apply(this, arguments)
                }
                return s.task.move("msgd 101", "迷失之地").then(t)
            }));
        t.default = c
    },
    a745: function(e, t, n) {
        e.exports = n("f410")
    },
    a817: function(e, t, n) {
        (function(t, r, a) {
            e.exports = r(n("21bf"), n("38ba"))
        })(0, (function(e) {
            return e.pad.AnsiX923 = {
                pad: function(e, t) {
                    var n = e.sigBytes,
                        r = 4 * t,
                        a = r - n % r,
                        s = n + a - 1;
                    e.clamp(), e.words[s >>> 2] |= a << 24 - s % 4 * 8, e.sigBytes += a
                },
                unpad: function(e) {
                    var t = 255 & e.words[e.sigBytes - 1 >>> 2];
                    e.sigBytes -= t
                }
            }, e.pad.Ansix923
        }))
    },
    a8ce: function(e, t, n) {
        (function(t, r) {
            e.exports = r(n("21bf"))
        })(0, (function(e) {
            return function() {
                var t = e,
                    n = t.lib,
                    r = n.WordArray,
                    a = t.enc;
                a.Utf16 = a.Utf16BE = {
                    stringify: function(e) {
                        for (var t = e.words, n = e.sigBytes, r = [], a = 0; a < n; a += 2) {
                            var s = t[a >>> 2] >>> 16 - a % 4 * 8 & 65535;
                            r.push(String.fromCharCode(s))
                        }
                        return r.join("")
                    },
                    parse: function(e) {
                        for (var t = e.length, n = [], a = 0; a < t; a++) n[a >>> 1] |= e.charCodeAt(a) << 16 - a % 2 * 16;
                        return r.create(n, 2 * t)
                    }
                };

                function s(e) {
                    return e << 8 & 4278255360 | e >>> 8 & 16711935
                }
                a.Utf16LE = {
                    stringify: function(e) {
                        for (var t = e.words, n = e.sigBytes, r = [], a = 0; a < n; a += 2) {
                            var c = s(t[a >>> 2] >>> 16 - a % 4 * 8 & 65535);
                            r.push(String.fromCharCode(c))
                        }
                        return r.join("")
                    },
                    parse: function(e) {
                        for (var t = e.length, n = [], a = 0; a < t; a++) n[a >>> 1] |= s(e.charCodeAt(a) << 16 - a % 2 * 16);
                        return r.create(n, 2 * t)
                    }
                }
            }(), e.enc.Utf16
        }))
    },
    aa72: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("c5f6"), n("4917"), n("ac6a");
        var r = n("3f7e"),
            a = new r.Task({
                title: "奉献爱心",
                tags: ["change"]
            }, (function() {
                var e = 0;

                function t() {
                    var n = e > 9999 ? 9999 : e;
                    return r.task.sleep().then((function() {
                        return r.task.send("npc 1000 0", "请输入要捐献的爱心卡片的数量")
                    })).then((function() {
                        return r.task.sleep()
                    })).then((function() {
                        return r.task.send("".concat(n), ["你没有足够的", "你输入的数目不正确", "奉献爱心"])
                    })).then((function(e) {
                        var t = e.index,
                            n = e.text;
                        if (t < 2) throw new Error(n);
                        return r.task.sleep()
                    })).then((function() {
                        return r.task.send("yes", "恭喜您获得")
                    })).then((function() {
                        return e -= n, r.task.sleep()
                    })).then((function() {
                        if (e > 0) return t()
                    }))
                }
                return r.task.sleep().then((function() {
                    return (0, r.findItem)("爱心卡片", 3, 2, !0)
                })).then((function(t) {
                    t.forEach((function(t) {
                        var n = t.title,
                            r = n.match(/{crd\$99} 爱心卡片 \(共(\d+)组\)/);
                        r ? e += 99 * Number(r[1]) : (r = n.match(/{crd\$(\d+)} 爱心卡片$/), r && (e += Number(r[1])))
                    }))
                })).then((function() {
                    return r.task.log("爱心卡片数量: ".concat(e)).sleep()
                })).then((function() {
                    return r.task.move("gey 101", "孤儿院")
                })).then(t)
            }));
        t.default = a
    },
    aa77: function(e, t, n) {
        var r = n("5ca1"),
            a = n("be13"),
            s = n("79e5"),
            c = n("fdef"),
            u = "[" + c + "]",
            i = "​",
            o = RegExp("^" + u + u + "*"),
            f = RegExp(u + u + "*$"),
            l = function(e, t, n) {
                var a = {},
                    u = s((function() {
                        return !!c[e]() || i[e]() != i
                    })),
                    o = a[e] = u ? t(p) : c[e];
                n && (a[n] = o), r(r.P + r.F * u, "String", a)
            },
            p = l.trim = function(e, t) {
                return e = String(a(e)), 1 & t && (e = e.replace(o, "")), 2 & t && (e = e.replace(f, "")), e
            };
        e.exports = l
    },
    aae3: function(e, t, n) {
        var r = n("d3f4"),
            a = n("2d95"),
            s = n("2b4c")("match");
        e.exports = function(e) {
            var t;
            return r(e) && (void 0 !== (t = e[s]) ? !!t : "RegExp" == a(e))
        }
    },
    aaef: function(e, t, n) {
        (function(t, r, a) {
            e.exports = r(n("21bf"), n("38ba"))
        })(0, (function(e) {
            /** @preserve
             * Counter block mode compatible with  Dr Brian Gladman fileenc.c
             * derived from CryptoJS.mode.CTR
             * Jan Hruby jhruby.web@gmail.com
             */
            return e.mode.CTRGladman = function() {
                var t = e.lib.BlockCipherMode.extend();

                function n(e) {
                    if (255 === (e >> 24 & 255)) {
                        var t = e >> 16 & 255,
                            n = e >> 8 & 255,
                            r = 255 & e;
                        255 === t ? (t = 0, 255 === n ? (n = 0, 255 === r ? r = 0 : ++r) : ++n) : ++t, e = 0, e += t << 16, e += n << 8, e += r
                    } else e += 1 << 24;
                    return e
                }

                function r(e) {
                    return 0 === (e[0] = n(e[0])) && (e[1] = n(e[1])), e
                }
                var a = t.Encryptor = t.extend({
                    processBlock: function(e, t) {
                        var n = this._cipher,
                            a = n.blockSize,
                            s = this._iv,
                            c = this._counter;
                        s && (c = this._counter = s.slice(0), this._iv = void 0), r(c);
                        var u = c.slice(0);
                        n.encryptBlock(u, 0);
                        for (var i = 0; i < a; i++) e[t + i] ^= u[i]
                    }
                });
                return t.Decryptor = a, t
            }(), e.mode.CTRGladman
        }))
    },
    aba2: function(e, t, n) {
        var r = n("e53d"),
            a = n("4178").set,
            s = r.MutationObserver || r.WebKitMutationObserver,
            c = r.process,
            u = r.Promise,
            i = "process" == n("6b4c")(c);
        e.exports = function() {
            var e, t, n, o = function() {
                var r, a;
                i && (r = c.domain) && r.exit();
                while (e) {
                    a = e.fn, e = e.next;
                    try {
                        a()
                    } catch (s) {
                        throw e ? n() : t = void 0, s
                    }
                }
                t = void 0, r && r.enter()
            };
            if (i) n = function() {
                c.nextTick(o)
            };
            else if (!s || r.navigator && r.navigator.standalone)
                if (u && u.resolve) {
                    var f = u.resolve(void 0);
                    n = function() {
                        f.then(o)
                    }
                } else n = function() {
                    a.call(r, o)
                };
            else {
                var l = !0,
                    p = document.createTextNode("");
                new s(o).observe(p, {
                    characterData: !0
                }), n = function() {
                    p.data = l = !l
                }
            }
            return function(r) {
                var a = {
                    fn: r,
                    next: void 0
                };
                t && (t.next = a), e || (e = a, n()), t = a
            }
        }
    },
    ac6a: function(e, t, n) {
        for (var r = n("cadf"), a = n("0d58"), s = n("2aba"), c = n("7726"), u = n("32e9"), i = n("84f2"), o = n("2b4c"), f = o("iterator"), l = o("toStringTag"), p = i.Array, d = {
                CSSRuleList: !0,
                CSSStyleDeclaration: !1,
                CSSValueList: !1,
                ClientRectList: !1,
                DOMRectList: !1,
                DOMStringList: !1,
                DOMTokenList: !0,
                DataTransferItemList: !1,
                FileList: !1,
                HTMLAllCollection: !1,
                HTMLCollection: !1,
                HTMLFormElement: !1,
                HTMLSelectElement: !1,
                MediaList: !0,
                MimeTypeArray: !1,
                NamedNodeMap: !1,
                NodeList: !0,
                PaintRequestList: !1,
                Plugin: !1,
                PluginArray: !1,
                SVGLengthList: !1,
                SVGNumberList: !1,
                SVGPathSegList: !1,
                SVGPointList: !1,
                SVGStringList: !1,
                SVGTransformList: !1,
                SourceBufferList: !1,
                StyleSheetList: !0,
                TextTrackCueList: !1,
                TextTrackList: !1,
                TouchList: !1
            }, x = a(d), h = 0; h < x.length; h++) {
            var k, v = x[h],
                m = d[v],
                b = c[v],
                g = b && b.prototype;
            if (g && (g[f] || u(g, f, p), g[l] || u(g, l, v), i[v] = p, m))
                for (k in r) g[k] || s(g, k, r[k], !0)
        }
    },
    ae2e: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = new s.Task({
                title: "兑换三品材料兑换包",
                tags: ["change"]
            }, (function() {
                function e() {
                    return t.apply(this, arguments)
                }

                function t() {
                    return t = (0, a.default)(regeneratorRuntime.mark((function t() {
                        var n, r;
                        return regeneratorRuntime.wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, s.task.sleep();
                                case 2:
                                    return t.next = 4, s.task.send("npc 1000 ~q0", ["[~1"]);
                                case 4:
                                    return t.next = 6, s.task.sleep();
                                case 6:
                                    return t.next = 8, s.task.send("1", ["m mps]", "你得到", "需要"]);
                                case 8:
                                    if (n = t.sent, r = n.index, 0 !== r) {
                                        t.next = 17;
                                        break
                                    }
                                    return t.next = 13, s.task.sleep();
                                case 13:
                                    return t.next = 15, s.task.send("cl", "cnt");
                                case 15:
                                    t.next = 19;
                                    break;
                                case 17:
                                    if (2 !== r) {
                                        t.next = 19;
                                        break
                                    }
                                    return t.abrupt("return");
                                case 19:
                                    return t.next = 21, e();
                                case 21:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    }))), t.apply(this, arguments)
                }
                return s.task.move("yhxz 101", "焰火小镇").then(e)
            }));
        t.default = c
    },
    aebd: function(e, t) {
        e.exports = function(e, t) {
            return {
                enumerable: !(1 & e),
                configurable: !(2 & e),
                writable: !(4 & e),
                value: t
            }
        }
    },
    aef6: function(e, t, n) {
        "use strict";
        var r = n("5ca1"),
            a = n("9def"),
            s = n("d2c8"),
            c = "endsWith",
            u = "" [c];
        r(r.P + r.F * n("5147")(c), "String", {
            endsWith: function(e) {
                var t = s(this, e, c),
                    n = arguments.length > 1 ? arguments[1] : void 0,
                    r = a(t.length),
                    i = void 0 === n ? r : Math.min(a(n), r),
                    o = String(e);
                return u ? u.call(t, o, i) : t.slice(i - o.length, i) === o
            }
        })
    },
    b05c: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("aef6"), n("7514"), n("96cf");
        var a = r(n("3b8d"));
        n("a481"), n("ac6a"), n("28a5");
        var s = n("3f7e"),
            c = new s.Task({
                title: "清理背包",
                tags: ["item"]
            }, (function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "move",
                    t = arguments.length > 1 ? arguments[1] : void 0,
                    n = s.globalSettings.get("clearItem").split(/[｜|]/).filter((function(e) {
                        return e.length
                    })),
                    r = s.globalSettings.get("keepItem").split(/[｜|]/).filter((function(e) {
                        return e.length
                    }));

                function c() {
                    return s.task.sleep().then((function() {
                        return s.task.send("sell", ["您要卖出哪些物品", "cnt", "没有可以卖的"])
                    })).then((function(e) {
                        var t = e.index,
                            n = e.text;
                        return 1 === t ? s.task.send("sell", ["您要卖出哪些物品", "cnt", "没有可以卖的"]) : Promise.resolve({
                            index: t,
                            text: n
                        })
                    })).then((function(e) {
                        var r = e.index,
                            a = e.text;
                        if (r > 0) throw new Error(a);
                        var c = [],
                            u = (0, s.parseMsg)(a).data.list;
                        if (u.forEach((function(e) {
                                var r = e.id,
                                    a = e.title;
                                a = (0, s.clearText)(a).replace(/\(共\d+组，\d+[个张]\)/, "").replace(/[\d,]+银币/, "").trim();
                                var u = t || n.filter((function(e) {
                                    return "配方" !== e
                                }));
                                (0, s.canClear)(u, a) && c.push("".concat(r, ",-1"))
                            })), !c.length) throw new Error("未找的可出售物品");
                        return s.task.send("sell ".concat(c.join(";")), ["卖出获得"])
                    })).then((function(e, t) {
                        return c()
                    }))
                }

                function u() {
                    return i.apply(this, arguments)
                }

                function i() {
                    return i = (0, a.default)(regeneratorRuntime.mark((function t() {
                        var a, c;
                        return regeneratorRuntime.wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, (0, s.easyshop)(e);
                                case 2:
                                    return t.next = 4, s.task.sleep();
                                case 4:
                                    return t.next = 6, s.task.send("sp0 1", ["银币", "没有可以出售的"]);
                                case 6:
                                    if (!n.find((function(e) {
                                            return "配方" === e
                                        })) || r.find((function(e) {
                                            return e.endsWith("配方")
                                        }))) {
                                        t.next = 20;
                                        break
                                    }
                                    return t.next = 9, (0, s.easyshop)(e);
                                case 9:
                                    return t.next = 11, s.task.sleep();
                                case 11:
                                    return t.next = 13, s.task.send("sp0 2", ["[yes]", "银币", "没有可以出售的"]);
                                case 13:
                                    if (a = t.sent, c = a.index, 0 !== c) {
                                        t.next = 20;
                                        break
                                    }
                                    return t.next = 18, s.task.sleep();
                                case 18:
                                    return t.next = 20, s.task.send("yes", ["银币", "没有可以出售的"]);
                                case 20:
                                    return t.next = 22, (0, s.easyshop)(e);
                                case 22:
                                    return t.next = 24, s.task.sleep();
                                case 24:
                                    return t.next = 26, s.task.send("sp0 4", ["银币", "没有可以出售的"]);
                                case 26:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    }))), i.apply(this, arguments)
                }
                return u().then(c)
            }));
        t.default = c
    },
    b0b4: function(e, t, n) {
        "use strict";
        n.r(t), n.d(t, "default", (function() {
            return c
        }));
        var r = n("85f2"),
            a = n.n(r);

        function s(e, t) {
            for (var n = 0; n < t.length; n++) {
                var r = t[n];
                r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), a()(e, r.key, r)
            }
        }

        function c(e, t, n) {
            return t && s(e.prototype, t), n && s(e, n), a()(e, "prototype", {
                writable: !1
            }), e
        }
    },
    b0c5: function(e, t, n) {
        "use strict";
        var r = n("520a");
        n("5ca1")({
            target: "RegExp",
            proto: !0,
            forced: r !== /./.exec
        }, {
            exec: r
        })
    },
    b0dc: function(e, t, n) {
        var r = n("e4ae");
        e.exports = function(e, t, n, a) {
            try {
                return a ? t(r(n)[0], n[1]) : t(n)
            } catch (c) {
                var s = e["return"];
                throw void 0 !== s && r(s.call(e)), c
            }
        }
    },
    b1be: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("28a5"), n("3b2b");
        var a = r(n("768b"));
        n("4917"), n("7514"), n("6762"), n("2fdb"), n("c5f6"), n("96cf");
        var s = r(n("3b8d")),
            c = n("3f7e"),
            u = r(n("9825")),
            i = new c.Task({
                title: "强化装备(锻造/打潜/打孔)",
                tags: ["item"],
                options: {
                    itemTitle: "",
                    num: 1,
                    autoBuy: !1,
                    type: "",
                    magics: "",
                    addType: "",
                    autoBuyDzbs: !1
                },
                reset: function() {
                    var e = this.options;
                    e.num = 1, e.autoBuy = !1, e.type = ""
                },
                before: function() {
                    var e = (0, s.default)(regeneratorRuntime.mark((function e() {
                        var t, n, r, a, s, u, i, o, f, l, p, d, x, h, k, v, m, b, g;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return t = this.options, n = ["精致长剑", "精致火枪", "精致法杖", "精致头巾", "精致皮甲", "精致腰带", "精致长裤", "精致皮靴", "自定义", "镶嵌磨玉", "增加潜力", "装备打孔", "装备注魔"], e.next = 4, (0, c.showActionSheet)({
                                        itemList: n
                                    });
                                case 4:
                                    if (r = e.sent, a = r.tapIndex, !(a < 0)) {
                                        e.next = 10;
                                        break
                                    }
                                    throw new Error("取消");
                                case 10:
                                    if (!(a <= 7)) {
                                        e.next = 26;
                                        break
                                    }
                                    return t.itemTitle = n[a], e.next = 14, new Promise((function(e) {
                                        uni.showModal({
                                            title: "是否自动购买装备",
                                            success: function(e) {
                                                var n = e.confirm;
                                                t.autoBuy = n
                                            },
                                            complete: function() {
                                                e()
                                            }
                                        })
                                    }));
                                case 14:
                                    return e.next = 16, (0, c.x0popup)({
                                        title: "输入锻造等级",
                                        type: "input",
                                        inputValue: String(t.num)
                                    });
                                case 16:
                                    if (s = e.sent, u = s.button, i = s.text, "cancel" !== u && i) {
                                        e.next = 21;
                                        break
                                    }
                                    throw new Error("取消");
                                case 21:
                                    return t.num = Number(i) || 1, e.next = 24, new Promise((function(e) {
                                        uni.showModal({
                                            title: "是否自动购买锻石",
                                            success: function(e) {
                                                var n = e.confirm;
                                                t.autoBuyDzbs = n
                                            },
                                            complete: function() {
                                                e()
                                            }
                                        })
                                    }));
                                case 24:
                                    e.next = 78;
                                    break;
                                case 26:
                                    return e.next = 28, (0, c.x0popup)({
                                        title: "输入装备名称",
                                        type: "input",
                                        inputValue: t.itemTitle
                                    });
                                case 28:
                                    if (o = e.sent, f = o.button, l = o.text, "cancel" !== f && l) {
                                        e.next = 33;
                                        break
                                    }
                                    throw new Error("取消");
                                case 33:
                                    t.itemTitle = l, e.t0 = a, e.next = e.t0 === n.length - 4 ? 37 : e.t0 === n.length - 3 ? 50 : e.t0 === n.length - 2 ? 53 : e.t0 === n.length - 1 ? 56 : 67;
                                    break;
                                case 37:
                                    return t.num = 99, t.type = "set", p = ["五品", "神品", "魂品"], e.next = 42, (0, c.showActionSheet)({
                                        title: "磨玉类型",
                                        itemList: p
                                    });
                                case 42:
                                    if (d = e.sent, x = d.tapIndex, !(x < 0)) {
                                        e.next = 48;
                                        break
                                    }
                                    throw new Error("取消");
                                case 48:
                                    t.addType = p[x];
                                case 49:
                                    return e.abrupt("break", 78);
                                case 50:
                                    return t.num = 99, t.type = "add", e.abrupt("break", 78);
                                case 53:
                                    return t.num = 99, t.type = "xx", e.abrupt("break", 78);
                                case 56:
                                    return t.num = 99, t.type = "magic", e.next = 60, (0, c.x0popup)({
                                        title: "多个属性用&分隔",
                                        type: "input",
                                        inputValue: t.magics
                                    });
                                case 60:
                                    if (h = e.sent, k = h.button, v = h.text, "cancel" !== k && v) {
                                        e.next = 65;
                                        break
                                    }
                                    throw new Error("取消");
                                case 65:
                                    return t.magics = v, e.abrupt("break", 78);
                                case 67:
                                    return e.next = 69, (0, c.x0popup)({
                                        title: "输入锻造等级",
                                        type: "input",
                                        inputValue: String(t.num)
                                    });
                                case 69:
                                    if (m = e.sent, b = m.button, g = m.text, "cancel" !== b && g) {
                                        e.next = 74;
                                        break
                                    }
                                    throw new Error("取消");
                                case 74:
                                    return t.num = Number(g) || 1, e.next = 77, new Promise((function(e) {
                                        uni.showModal({
                                            title: "是否自动购买锻石",
                                            success: function(e) {
                                                var n = e.confirm;
                                                t.autoBuyDzbs = n
                                            },
                                            complete: function() {
                                                e()
                                            }
                                        })
                                    }));
                                case 77:
                                    return e.abrupt("break", 78);
                                case 78:
                                case "end":
                                    return e.stop()
                            }
                        }), e, this)
                    })));

                    function t() {
                        return e.apply(this, arguments)
                    }
                    return t
                }()
            }, (function() {
                var e, t = this.options;

                function n() {
                    return c.task.send("vs_cmd vs_equip", "佣兵装备").then((function() {
                        return c.task.sleep()
                    })).then((function() {
                        return c.task.send("buy_vep", "<menu")
                    })).then((function(e) {
                        var n = e.text;
                        return n.includes(t.itemTitle) ? Promise.resolve({
                            text: n
                        }) : c.task.sleep().then((function() {
                            return c.task.send("r", "<menu")
                        }))
                    })).then((function(e) {
                        var n = e.text;
                        return c.task.sleep().then((function() {
                            var e = (0, c.parseMsg)(n).data.list,
                                r = e.find((function(e) {
                                    var n = e.title;
                                    return n.includes(t.itemTitle)
                                }));
                            return c.task.send("".concat(r.code, " 3"), "<input")
                        }))
                    })).then((function() {
                        return c.task.sleep()
                    })).then((function() {
                        return c.task.send("9", ["<menu", "你已经超过你行囊上限"])
                    })).then((function(r) {
                        var a = r.index;
                        return c.task.sleep().then((function() {
                            return c.task.send("cnt").sleep(1e3).then((function() {
                                if (1 === a) {
                                    if (e) throw new Error("背包已满");
                                    return e = !0, u.default.reset(), u.default.set({
                                        target: t.itemTitle
                                    }), u.default.start().then(n)
                                }
                                e = !1
                            }))
                        }))
                    }))
                }

                function r(e) {
                    return i.apply(this, arguments)
                }

                function i() {
                    return i = (0, s.default)(regeneratorRuntime.mark((function e(n) {
                        var a, s, u;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, c.task.sleep();
                                case 2:
                                    if (/是否要修复/.test(n)) {
                                        e.next = 14;
                                        break
                                    }
                                    return e.next = 5, c.task.send("yes", ["[yes]", "<pmg"]);
                                case 5:
                                    if (a = e.sent, s = a.index, u = a.text, 0 !== s || u.includes("锻造等级：+".concat(t.num))) {
                                        e.next = 14;
                                        break
                                    }
                                    return e.next = 11, r(u);
                                case 11:
                                    return e.next = 13, k();
                                case 13:
                                    return e.abrupt("return");
                                case 14:
                                    return e.next = 16, c.task.sleep();
                                case 16:
                                    return e.next = 18, c.task.send("cnt", "cnt");
                                case 18:
                                    return e.next = 20, k();
                                case 20:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), i.apply(this, arguments)
                }

                function o(e) {
                    var r = e.text,
                        a = (0, c.parseMsg)(r).data.list,
                        s = a && a.find((function(e) {
                            var n = e.title,
                                r = parseInt((n.match(/\+\d+/) || ["0"])[0]);
                            return n.includes(t.itemTitle) && r < t.num
                        }));
                    return c.task.sleep().then((function() {
                        if (!s) {
                            if (!a || !a.length) {
                                if (t.autoBuy) return n().then(k);
                                throw new Error("强化完毕")
                            }
                            return a.find((function(e) {
                                var t = e.code;
                                return "r" === t
                            })) ? c.task.send("r", ["<menu", "<pmg"]).then(o) : c.task.send("cnt").sleep(1e3).then((function() {
                                if (t.autoBuy) return n().then(k);
                                throw new Error("强化完毕")
                            }))
                        }
                        return c.task.send(s.code, "<pmg")
                    }))
                }
                var f = 0,
                    l = 0;

                function p(e) {
                    var n = e.text,
                        r = (0, c.parseMsg)(n).data.list,
                        s = 0,
                        u = r.find((function(e, n) {
                            var r = e.title,
                                a = e.code;
                            return "r" !== a && "l" !== a && s++, console.log(f, n + l), r.includes(t.itemTitle) && f === n + l
                        }));
                    return c.task.sleep().then((function() {
                        return u ? c.task.send(u.code, "[yes]").then((function() {
                            return c.task.sleep()
                        })).then((function() {
                            return c.task.send("yes", "<menu")
                        })).then((function(e) {
                            var t = e.text,
                                n = (0, c.parseMsg)(t).data.list;
                            return c.task.sleep().then((function() {
                                var e = n.find((function(e) {
                                    var t = e.title;
                                    return t.includes("锻造几率")
                                }));
                                return e ? c.task.send("".concat(e.code), "<pmg") : c.task.send("cnt").sleep(1e3).then((function() {
                                    throw new Error("不支持")
                                }))
                            }))
                        })).then((function(e) {
                            var t = e.text;
                            if (!/镶嵌失败/.test(t)) {
                                var n = t.match(/\((\d+) \/ (\d+)\)/),
                                    r = (0, a.default)(n, 3),
                                    s = (r[0], r[1]),
                                    c = r[2];
                                s !== c && f++
                            }
                        })) : r.find((function(e) {
                            var t = e.code;
                            return "r" === t
                        })) ? (l += s, c.task.send("r", "<menu").then(p)) : c.task.send("cnt").sleep(1e3).then((function() {
                            throw new Error("强化完毕")
                        }))
                    }))
                }

                function d() {
                    return x.apply(this, arguments)
                }

                function x() {
                    return x = (0, s.default)(regeneratorRuntime.mark((function e() {
                        var n, r, a, s, u;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, c.task.sleep();
                                case 2:
                                    return e.next = 4, c.task.send("yes", ["[yes]", "当前装备属性"]);
                                case 4:
                                    if (n = e.sent, r = n.index, a = n.text, 1 !== r) {
                                        e.next = 9;
                                        break
                                    }
                                    throw new Error(a);
                                case 9:
                                    if (s = t.magics.split(/&/).filter((function(e) {
                                            return e.length
                                        })).map((function(e) {
                                            return "致命" === e ? "暴击" : e
                                        })), u = s.filter((function(e) {
                                            return e.split(/[｜|]/).find((function(e) {
                                                return a.includes(e + "：+") || a.includes(e + "抗性：+")
                                            }))
                                        })), u.length === s.length) {
                                        e.next = 16;
                                        break
                                    }
                                    return e.next = 14, d();
                                case 14:
                                    e.next = 20;
                                    break;
                                case 16:
                                    return e.next = 18, c.task.sleep();
                                case 18:
                                    return e.next = 20, c.task.send("cnt", "cnt");
                                case 20:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), x.apply(this, arguments)
                }

                function h(e) {
                    var n = e.text,
                        r = (0, c.parseMsg)(n).data.list,
                        a = 0,
                        s = r.find((function(e, n) {
                            var r = e.title,
                                s = e.code;
                            return "r" !== s && "l" !== s && a++, console.log(f, n + l), r.includes(t.itemTitle) && f === n + l
                        }));
                    return c.task.sleep().then((function() {
                        return s ? c.task.send(s.code, "[yes]").then(d).then((function() {
                            f++
                        })) : r.find((function(e) {
                            var t = e.code;
                            return "r" === t
                        })) ? (l += a, c.task.send("r", "<menu").then(h)) : c.task.send("cnt").sleep(1e3).then((function() {
                            throw new Error("强化完毕")
                        }))
                    }))
                }

                function k() {
                    return l = 0, (0, c.checkCode)().then((function() {
                        return c.task.sleep()
                    })).then((function() {
                        return c.task.send("m5 5", "<menu", !0)
                    })).then((function(e) {
                        var n = e.text,
                            r = (0, c.parseMsg)(n).data.list,
                            a = r.find((function(e) {
                                var n = e.title;
                                switch (t.type) {
                                    case "add":
                                        return /装备潜力/.test(n);
                                    case "xx":
                                        return /装备打孔器/.test(n);
                                    case "set":
                                        return new RegExp(t.addType + ".+镶嵌石").test(n);
                                    case "magic":
                                        return /注魔/.test(n);
                                    default:
                                        return /( 锻造宝石|级三星石)/.test(n)
                                }
                            }));
                        return c.task.sleep().then((function() {
                            return a ? c.task.send("".concat(a.code, " 0"), ["<menu", "<pmg"]) : c.task.send("cnt").sleep(1e3).then((function() {
                                if (!t.type && t.autoBuyDzbs) return (0, c.buy)("锻造宝石", 99).then(k);
                                throw new Error("无强化材料")
                            }))
                        }))
                    })).then("set" === t.type ? p : "magic" === t.type ? h : o).then(t.type ? k : r)
                }
                return k().catch((function(e) {
                    c.task.log(String(e)), (0, c.checkCode)()
                }))
            }));
        t.default = i
    },
    b301: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("6762"), n("2fdb"), n("7514"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = r(n("275e")),
            u = new s.Task({
                title: "精灵王星石",
                tags: ["event"]
            }, (function() {
                var e = 1;

                function t() {
                    return n.apply(this, arguments)
                }

                function n() {
                    return n = (0, a.default)(regeneratorRuntime.mark((function n() {
                        var r, a, u, i, o, f, l, p, d, x, h, k, v, m, b;
                        return regeneratorRuntime.wrap((function(n) {
                            while (1) switch (n.prev = n.next) {
                                case 0:
                                    return n.next = 2, s.task.sleep();
                                case 2:
                                    return n.next = 4, (0, s.getMainDataAsync)();
                                case 4:
                                    return r = n.sent.map.npc, a = r.find((function(e) {
                                        var t = e.code;
                                        return "npc 1000" === t
                                    })), u = a.list.find((function(t) {
                                        var n = t.title;
                                        return n.includes("精灵王徽章") && n.includes(11 === e ? "刷新" : "(".concat(e, "/10)"))
                                    })), n.next = 9, s.task.sleep();
                                case 9:
                                    return n.next = 11, s.task.send("npc 1000 ".concat(u.code), ["mps]", "[~1]", "已击败0个", "你已经完成了", "请明天再来吧"]);
                                case 11:
                                    if (i = n.sent, o = i.index, 0 !== o) {
                                        n.next = 20;
                                        break
                                    }
                                    return n.next = 16, s.task.sleep();
                                case 16:
                                    return n.next = 18, s.task.send("cl", "cnt");
                                case 18:
                                    n.next = 106;
                                    break;
                                case 20:
                                    if (1 !== o) {
                                        n.next = 76;
                                        break
                                    }
                                    return n.next = 23, s.task.sleep();
                                case 23:
                                    return n.next = 25, s.task.send("1", ["mps]", "你得到：", "/ 需要", "你又可以重新开始"]);
                                case 25:
                                    if (f = n.sent, l = f.index, 0 !== l) {
                                        n.next = 34;
                                        break
                                    }
                                    return n.next = 30, s.task.sleep();
                                case 30:
                                    return n.next = 32, s.task.send("cl", "cnt");
                                case 32:
                                    n.next = 74;
                                    break;
                                case 34:
                                    if (1 !== l) {
                                        n.next = 38;
                                        break
                                    }
                                    e++, n.next = 74;
                                    break;
                                case 38:
                                    if (2 !== l) {
                                        n.next = 73;
                                        break
                                    }
                                    return n.next = 41, s.task.sleep();
                                case 41:
                                    return n.next = 43, s.task.send("t l 5001", "<title>迷失之地");
                                case 43:
                                    return n.next = 45, s.task.sleep();
                                case 45:
                                    return n.next = 47, (0, s.findItem)("精灵王徽章", "npc 1000 j", 1);
                                case 47:
                                    return p = n.sent, d = p.code, n.next = 51, s.task.sleep();
                                case 51:
                                    return n.next = 53, s.task.send("".concat(d, " 3"), "<input");
                                case 53:
                                    return n.next = 55, s.task.sleep();
                                case 55:
                                    return n.next = 57, s.task.send("99", ["你从锻皇.柳柳买下了", "不够", "无法再买"]);
                                case 57:
                                    return x = n.sent, h = x.index, n.next = 61, s.task.sleep();
                                case 61:
                                    return n.next = 63, s.task.cancel(!0);
                                case 63:
                                    if (0 !== h) {
                                        n.next = 70;
                                        break
                                    }
                                    return n.next = 66, s.task.sleep();
                                case 66:
                                    return n.next = 68, s.task.send("t l 6001", "<title>寂寥之地");
                                case 68:
                                    n.next = 71;
                                    break;
                                case 70:
                                    throw new Error("无精灵王徽章");
                                case 71:
                                    n.next = 74;
                                    break;
                                case 73:
                                    3 === l && (e = 1);
                                case 74:
                                    n.next = 106;
                                    break;
                                case 76:
                                    if (2 !== o) {
                                        n.next = 101;
                                        break
                                    }
                                    return n.next = 79, s.task.sleep();
                                case 79:
                                    return n.next = 81, s.task.send("t l 5101", "<menu");
                                case 81:
                                    return k = n.sent, v = k.text, m = (0, s.parseMsg)(v).data.list, b = m.find((function(t) {
                                        var n = t.title;
                                        return n.includes("【".concat(e, "档】"))
                                    })), n.next = 87, s.task.sleep();
                                case 87:
                                    return n.next = 89, s.task.send(b.code, "<title>");
                                case 89:
                                    return n.next = 91, s.task.sleep();
                                case 91:
                                    return c.default.reset(), c.default.set({
                                        code: "npc 1000 h",
                                        killMax: 1
                                    }), n.next = 95, c.default.start(!1, !1);
                                case 95:
                                    return n.next = 97, s.task.sleep();
                                case 97:
                                    return n.next = 99, s.task.send("t l 6001", "<title>寂寥之地");
                                case 99:
                                    n.next = 106;
                                    break;
                                case 101:
                                    if (3 !== o) {
                                        n.next = 105;
                                        break
                                    }
                                    e++, n.next = 106;
                                    break;
                                case 105:
                                    return n.abrupt("return");
                                case 106:
                                    return n.next = 108, t();
                                case 108:
                                case "end":
                                    return n.stop()
                            }
                        }), n)
                    }))), n.apply(this, arguments)
                }
                return s.task.move("msgd 104", "寂寥之地").then(t)
            }));
        t.default = u
    },
    b3b6: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("4917"), n("7514"), n("6762"), n("2fdb"), n("96cf");
        var a = r(n("3b8d"));
        n("c5f6");
        var s = n("3f7e"),
            c = new s.Task({
                title: "磨锻28鞋",
                tags: ["item"],
                form: [{
                    title: "初始等级",
                    type: "picker",
                    range: ["11", "12", "13", "14"],
                    value: 0
                }, {
                    title: "磨玉类型",
                    type: "picker",
                    range: ["混合100%", "混合98%", "纯五品72%", "混合12%", "纯五品12%"],
                    value: 0
                }, {
                    title: "购买锻石",
                    type: "checkbox",
                    value: !0
                }, {
                    title: "磨玉查找",
                    type: "picker",
                    range: ["一页"],
                    value: 0
                }]
            }, (function() {
                var e = this.form[0].range,
                    t = this.form[0].value,
                    n = this.form[1].value,
                    r = this.form[2].value,
                    c = "水纹靴",
                    u = "磨玉镶嵌石",
                    i = "锻造宝石",
                    o = "五",
                    f = "神",
                    l = [
                        [
                            [o, o],
                            [o, f],
                            [o, f],
                            [o, o, f]
                        ],
                        [
                            [o, o],
                            [o, o],
                            [o, f],
                            [o, o, f]
                        ],
                        [
                            [o],
                            [o, o],
                            [o, o],
                            [o, o, o, o]
                        ],
                        [
                            [],
                            [],
                            [],
                            [o, o, f]
                        ],
                        [
                            [],
                            [],
                            [],
                            [o, o, o, o]
                        ]
                    ],
                    p = l[n],
                    d = 11,
                    x = Number(e[t]),
                    h = x - d,
                    k = 0,
                    v = 0;

                function m() {
                    return b.apply(this, arguments)
                }

                function b() {
                    return b = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var t, n, r;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.next = 4, s.task.send("yes", ["[yes]", "<pmg"]);
                                case 4:
                                    if (t = e.sent, n = t.index, r = t.text, 0 !== n) {
                                        e.next = 12;
                                        break
                                    }
                                    return e.next = 10, s.task.sleep();
                                case 10:
                                    return e.next = 12, s.task.send("cnt", "cnt");
                                case 12:
                                    return e.next = 14, (0, s.checkCode)();
                                case 14:
                                    return e.abrupt("return", !r.includes("锻造失败"));
                                case 15:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), b.apply(this, arguments)
                }

                function g() {
                    return y.apply(this, arguments)
                }

                function y() {
                    return y = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var t, n, r, a, c, u;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.next = 4, s.task.send("yes", "<menu");
                                case 4:
                                    return t = e.sent, n = t.text, r = (0, s.parseMsg)(n).data.list, a = r.find((function(e) {
                                        var t = e.title;
                                        return t.includes("锻造几率")
                                    })), e.next = 10, s.task.sleep();
                                case 10:
                                    return e.next = 12, s.task.send("".concat(a.code), "<pmg");
                                case 12:
                                    return c = e.sent, u = c.text, e.next = 16, (0, s.checkCode)();
                                case 16:
                                    return e.abrupt("return", !/镶嵌失败/.test(u));
                                case 17:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), y.apply(this, arguments)
                }

                function w(e) {
                    return _.apply(this, arguments)
                }

                function _() {
                    return _ = (0, a.default)(regeneratorRuntime.mark((function e(t) {
                        var n, r, a, u, i;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    if (n = t.index, r = t.text, 1 !== n) {
                                        e.next = 3;
                                        break
                                    }
                                    throw new Error(r);
                                case 3:
                                    return a = (0, s.parseMsg)(r).data.list, u = a && a.find((function(e) {
                                        var t = e.title,
                                            n = parseInt((t.match(/\+\d+/) || ["0"])[0]);
                                        return t.includes(c) && n === d + h
                                    })), e.next = 7, s.task.sleep();
                                case 7:
                                    if (u) {
                                        e.next = 22;
                                        break
                                    }
                                    if (!a.find((function(e) {
                                            var t = e.code;
                                            return "r" === t
                                        }))) {
                                        e.next = 17;
                                        break
                                    }
                                    return e.next = 11, s.task.send("r", ["<menu"]);
                                case 11:
                                    return i = e.sent, e.next = 14, w(i);
                                case 14:
                                    return e.abrupt("return", e.sent);
                                case 17:
                                    return e.next = 19, s.task.cancel(!0);
                                case 19:
                                    throw new Error("强化完毕");
                                case 20:
                                    e.next = 25;
                                    break;
                                case 22:
                                    return e.next = 24, s.task.send(u.code, "[yes]");
                                case 24:
                                    return e.abrupt("return", e.sent);
                                case 25:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), _.apply(this, arguments)
                }

                function R(e) {
                    return M.apply(this, arguments)
                }

                function M() {
                    return M = (0, a.default)(regeneratorRuntime.mark((function e(t) {
                        var n, a, c, o, l, b, y, _, M, j, E, S, O, P;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    if (n = p[h], n.length || t !== u) {
                                        e.next = 3;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 3:
                                    return e.next = 5, s.task.sleep();
                                case 5:
                                    return e.next = 7, s.task.send("m5 5", "<menu", !0);
                                case 7:
                                    return a = e.sent, c = a.text, o = (0, s.parseMsg)(c).data.list, b = o.find((function(e) {
                                        var r = e.title;
                                        if (t === i) return r.includes(" " + t);
                                        if (r.includes(t)) {
                                            var a = n[k];
                                            return r.includes(f) && (l = e), r.includes(a)
                                        }
                                    })) || l, e.next = 13, s.task.sleep();
                                case 13:
                                    if (b) {
                                        e.next = 25;
                                        break
                                    }
                                    return e.next = 16, s.task.cancel(!0);
                                case 16:
                                    if (t !== i || !r) {
                                        e.next = 22;
                                        break
                                    }
                                    return e.next = 19, (0, s.buy)("锻造宝石", 99);
                                case 19:
                                    return e.next = 21, R(t);
                                case 21:
                                    return e.abrupt("return", e.sent);
                                case 22:
                                    throw y = "无强化材料：" + t, s.task.log(y), new Error(y);
                                case 25:
                                    return e.next = 27, s.task.send("".concat(b.code, " 0"), ["<menu", "没有合适的装备"]);
                                case 27:
                                    return _ = e.sent, e.next = 30, w(_);
                                case 30:
                                    if (M = e.sent, j = M.text, t !== i) {
                                        e.next = 40;
                                        break
                                    }
                                    return e.next = 35, m();
                                case 35:
                                    E = e.sent, E && h++, E && h !== p.length || (h = x - d, v = 0), e.next = 59;
                                    break;
                                case 40:
                                    if (S = Number(j.match(/：(\d+)/)[1]), O = S > v, e.t0 = O, e.t0) {
                                        e.next = 47;
                                        break
                                    }
                                    return e.next = 46, g();
                                case 46:
                                    e.t0 = e.sent;
                                case 47:
                                    if (P = e.t0, console.log(S, k, v), P && (k++, v++), !O) {
                                        e.next = 55;
                                        break
                                    }
                                    return e.next = 53, s.task.sleep();
                                case 53:
                                    return e.next = 55, s.task.send("cnt", "cnt");
                                case 55:
                                    if (!(k < p[h].length)) {
                                        e.next = 58;
                                        break
                                    }
                                    return e.next = 58, R(t);
                                case 58:
                                    k = 0;
                                case 59:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), M.apply(this, arguments)
                }

                function j() {
                    return E.apply(this, arguments)
                }

                function E() {
                    return E = (0, a.default)(regeneratorRuntime.mark((function e() {
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, R(u);
                                case 2:
                                    return e.next = 4, R(i);
                                case 4:
                                    return e.next = 6, j();
                                case 6:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), E.apply(this, arguments)
                }
                return j()
            }));
        t.default = c
    },
    b447: function(e, t, n) {
        var r = n("3a38"),
            a = Math.min;
        e.exports = function(e) {
            return e > 0 ? a(r(e), 9007199254740991) : 0
        }
    },
    b860: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("c5f6"), n("6b54"), n("3b2b"), n("28a5"), n("6762"), n("2fdb"), n("7514"), n("4917"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = r(n("275e")),
            u = r(n("3918")),
            i = new s.Task({
                title: "家族任务",
                tags: ["event"],
                options: {
                    target: void 0
                },
                before: function() {
                    var e = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var t, n, r, a, c, u;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return t = this.options, n = [{
                                        title: "成员",
                                        npc: 1001,
                                        type: "jz"
                                    }, {
                                        title: "内政",
                                        npc: 1006,
                                        type: "nz"
                                    }, {
                                        title: "快速建设",
                                        npc: 1002,
                                        type: ""
                                    }], e.next = 4, (0, s.showActionSheet)({
                                        itemList: n.map((function(e) {
                                            var t = e.title;
                                            return t
                                        }))
                                    });
                                case 4:
                                    if (r = e.sent, a = r.tapIndex, !(a < 0)) {
                                        e.next = 8;
                                        break
                                    }
                                    throw new Error("取消");
                                case 8:
                                    if (t.target = n[a], 2 !== a) {
                                        e.next = 13;
                                        break
                                    }
                                    t.target.update = !0, e.next = 21;
                                    break;
                                case 13:
                                    return e.next = 15, (0, s.showActionSheet)({
                                        itemList: ["普通", "高级", "终极"]
                                    });
                                case 15:
                                    if (c = e.sent, u = c.tapIndex, !(a < 0)) {
                                        e.next = 19;
                                        break
                                    }
                                    throw new Error("取消");
                                case 19:
                                    t.target.index = u, t.target.update = !1;
                                case 21:
                                case "end":
                                    return e.stop()
                            }
                        }), e, this)
                    })));

                    function t() {
                        return e.apply(this, arguments)
                    }
                    return t
                }()
            }, (function() {
                var e = this.options;

                function t() {
                    return n.apply(this, arguments)
                }

                function n() {
                    return n = (0, a.default)(regeneratorRuntime.mark((function t() {
                        var n, r, a;
                        return regeneratorRuntime.wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, s.task.sleep();
                                case 2:
                                    return t.next = 4, s.task.send("npc ".concat(e.target.npc, " ").concat(e.target.index), ["你确定要发布一个"]);
                                case 4:
                                    return t.next = 6, s.task.sleep();
                                case 6:
                                    return t.next = 8, s.task.send(e.target.type ? "yes ".concat(e.target.type) : "yes", ["为你发布了", "神秘商店", "对不起"]);
                                case 8:
                                    if (n = t.sent, r = n.index, a = n.text, !(r > 0)) {
                                        t.next = 13;
                                        break
                                    }
                                    throw new Error(a);
                                case 13:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    }))), n.apply(this, arguments)
                }

                function r(e) {
                    return i.apply(this, arguments)
                }

                function i() {
                    return i = (0, a.default)(regeneratorRuntime.mark((function e(t) {
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return u.default.reset(), u.default.set({
                                        item: /水晶/.test(t) ? /内政任务道具盒\s*(\(共\d+组\))?$/ : /家族任务道具盒\s*(\(共\d组\))?$/,
                                        item2: t.match(/\S色|混沌/)[0],
                                        max: 1
                                    }), e.next = 6, u.default.start(!1, !1);
                                case 6:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), i.apply(this, arguments)
                }

                function o() {
                    return f.apply(this, arguments)
                }

                function f() {
                    return f = (0, a.default)(regeneratorRuntime.mark((function n() {
                        var a, u, i, f, l, p, d, x, h, k, v, m, b, g, y, w, _, R, M, j, E;
                        return regeneratorRuntime.wrap((function(n) {
                            while (1) switch (n.prev = n.next) {
                                case 0:
                                    return n.next = 2, s.task.sleep();
                                case 2:
                                    return n.next = 4, s.task.move("sgpy 130", "家族会馆");
                                case 4:
                                    return n.next = 6, (0, s.getMainDataAsync)();
                                case 6:
                                    if (a = n.sent.map.npc, u = a.find((function(e) {
                                            var t = e.code;
                                            return "npc 1006" === t
                                        })), u || e.target.update || (e.target.update = !0, i = a.find((function(e) {
                                            var t = e.code,
                                                n = e.list;
                                            return "npc 1004" === t && n.find((function(e) {
                                                var t = e.title;
                                                return t.includes("普通内政任务")
                                            }))
                                        })), i ? e.target.npc = 1006 === e.target.npc ? 1004 : 1001 : (e.target.index = 1006 === e.target.npc ? 0 : e.target.index + 1, e.target.type = "", e.target.npc = 1001)), f = a.find((function(t) {
                                            var n = t.code;
                                            return n === "npc ".concat(e.target.npc)
                                        })), l = f.list, p = l.find((function(e) {
                                            var t = e.code;
                                            return "~q0" === t
                                        })), p) {
                                        n.next = 14;
                                        break
                                    }
                                    return n.next = 14, t();
                                case 14:
                                    return n.next = 16, s.task.sleep();
                                case 16:
                                    return n.next = 18, s.task.send("npc ".concat(e.target.npc, " ~q0"), ["[~1]", "/ 需要"]);
                                case 18:
                                    if (h = n.sent, k = h.index, 0 !== k) {
                                        n.next = 32;
                                        break
                                    }
                                    return n.next = 23, s.task.sleep();
                                case 23:
                                    return n.next = 25, s.task.send("1", ["[~0 mps]", "获得奖励", "/ 需要", "材料不足"]);
                                case 25:
                                    v = n.sent, m = v.index, b = v.text, d = m, x = b, n.next = 33;
                                    break;
                                case 32:
                                    d = 2;
                                case 33:
                                    if (0 !== d) {
                                        n.next = 41;
                                        break
                                    }
                                    return n.next = 36, s.task.sleep();
                                case 36:
                                    return n.next = 38, s.task.send("cl", "cnt");
                                case 38:
                                    return n.abrupt("return", o());
                                case 41:
                                    if (1 !== d) {
                                        n.next = 47;
                                        break
                                    }
                                    return n.next = 44, o();
                                case 44:
                                    return n.abrupt("return", n.sent);
                                case 47:
                                    if (2 !== d) {
                                        n.next = 70;
                                        break
                                    }
                                    return n.prev = 48, n.next = 51, r(x);
                                case 51:
                                    return n.abrupt("return", o());
                                case 54:
                                    n.prev = 54, n.t0 = n["catch"](48);
                                case 56:
                                    return n.next = 58, s.task.sleep();
                                case 58:
                                    return n.next = 60, s.task.send("9 1", "查看任务");
                                case 60:
                                    return g = n.sent, y = g.text, w = (0, s.parseMsg)(y).data.list, _ = w.find((function(e) {
                                        var t = e.title;
                                        return (0, s.clearText)(t) === (0, s.clearText)(p.title)
                                    })), n.next = 66, s.task.sleep();
                                case 66:
                                    return n.next = 68, s.task.send("".concat(_.code, " m mps"), "选择地图目标");
                                case 68:
                                    n.next = 72;
                                    break;
                                case 70:
                                    if (3 !== d) {
                                        n.next = 72;
                                        break
                                    }
                                    throw new Error(x);
                                case 72:
                                    return n.next = 74, s.task.sleep();
                                case 74:
                                    return n.next = 76, s.task.send("0 mps", ["<mp>"]);
                                case 76:
                                    return R = n.sent, M = R.text, j = M.split("|"), j = j.slice(j.length - 2), E = M.match(new RegExp("00".concat(Number(j[0]).toString(16).toUpperCase(), "(.+?)\\$")))[1], n.next = 83, s.task.sleep();
                                case 83:
                                    return n.next = 85, s.task.move("".concat(j[1], " ").concat(j[0]), E);
                                case 85:
                                    return n.next = 87, s.task.sleep();
                                case 87:
                                    return c.default.reset(), c.default.set({
                                        code: "kill",
                                        find: /(精灵石|水晶) \(?需要: 10 \/ 10\)?/
                                    }), n.next = 91, c.default.start(!1, !1);
                                case 91:
                                    return n.next = 93, o();
                                case 93:
                                case "end":
                                    return n.stop()
                            }
                        }), n, null, [
                            [48, 54]
                        ])
                    }))), f.apply(this, arguments)
                }
                return o()
            }));
        t.default = i
    },
    b86b: function(e, t, n) {
        (function(t, r, a) {
            e.exports = r(n("21bf"), n("3252"), n("d6e6"))
        })(0, (function(e) {
            return function() {
                var t = e,
                    n = t.x64,
                    r = n.Word,
                    a = n.WordArray,
                    s = t.algo,
                    c = s.SHA512,
                    u = s.SHA384 = c.extend({
                        _doReset: function() {
                            this._hash = new a.init([new r.init(3418070365, 3238371032), new r.init(1654270250, 914150663), new r.init(2438529370, 812702999), new r.init(355462360, 4144912697), new r.init(1731405415, 4290775857), new r.init(2394180231, 1750603025), new r.init(3675008525, 1694076839), new r.init(1203062813, 3204075428)])
                        },
                        _doFinalize: function() {
                            var e = c._doFinalize.call(this);
                            return e.sigBytes -= 16, e
                        }
                    });
                t.SHA384 = c._createHelper(u), t.HmacSHA384 = c._createHmacHelper(u)
            }(), e.SHA384
        }))
    },
    b86c: function(e, t, n) {
        (function(t, r, a) {
            e.exports = r(n("21bf"), n("38ba"))
        })(0, (function(e) {
            return e.pad.NoPadding = {
                pad: function() {},
                unpad: function() {}
            }, e.pad.NoPadding
        }))
    },
    b8e3: function(e, t) {
        e.exports = !0
    },
    bacc: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = r(n("3918")),
            u = new s.Task({
                title: "动他一下",
                tags: ["other"],
                form: [{
                    title: "完整昵称",
                    type: "input",
                    focus: !0,
                    value: ""
                }, {
                    title: "类型",
                    type: "picker",
                    range: ["动他一下", "爱抚"],
                    value: 0
                }]
            }, (0, a.default)(regeneratorRuntime.mark((function e() {
                var t, n, r, u, i;
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                            return i = function() {
                                return i = (0, a.default)(regeneratorRuntime.mark((function e() {
                                    var n, a;
                                    return regeneratorRuntime.wrap((function(e) {
                                        while (1) switch (e.prev = e.next) {
                                            case 0:
                                                return e.next = 2, s.task.sleep();
                                            case 2:
                                                return e.next = 4, s.task.send("3n ".concat(t, " 5"), ["动他一下", "你的活力值不够", "对方目前不在本线"]);
                                            case 4:
                                                if (n = e.sent, a = n.index, 0 !== a) {
                                                    e.next = 13;
                                                    break
                                                }
                                                return e.next = 9, s.task.sleep();
                                            case 9:
                                                return e.next = 11, s.task.send(r, ["动了", "爱抚着", "cnt"]);
                                            case 11:
                                                e.next = 20;
                                                break;
                                            case 13:
                                                if (1 !== a) {
                                                    e.next = 20;
                                                    break
                                                }
                                                return e.next = 16, s.task.sleep();
                                            case 16:
                                                return c.default.reset(), c.default.set({
                                                    item: "运动饮料",
                                                    use: !0,
                                                    max: 1
                                                }), e.next = 20, c.default.start(!1);
                                            case 20:
                                                return e.next = 22, u();
                                            case 22:
                                            case "end":
                                                return e.stop()
                                        }
                                    }), e)
                                }))), i.apply(this, arguments)
                            }, u = function() {
                                return i.apply(this, arguments)
                            }, t = this.form[0].value || "xxxx", n = this.form[1].value, r = n ? "sex" : "t", e.next = 7, u();
                        case 7:
                        case "end":
                            return e.stop()
                    }
                }), e, this)
            }))));
        t.default = u
    },
    bb2b: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = r(n("275e")),
            u = new s.Task({
                title: "刷月饼",
                tags: ["event"],
                batch: !1,
                form: [{
                    title: "挂机类型",
                    type: "picker",
                    range: ["暗怪", "BOSS", "混合"],
                    value: 2
                }]
            }, (function() {
                var e = this.form[0].value,
                    t = {
                        kill: {
                            code: "mhjy 109",
                            title: "劲雨山腰",
                            next: "t l 5001"
                        },
                        npc: {
                            code: "mhjy 113",
                            title: "劲雨山麓",
                            next: "t l 6001"
                        }
                    },
                    n = 1 === e ? t.npc : t.kill;

                function r() {
                    return u.apply(this, arguments)
                }

                function u() {
                    return u = (0, a.default)(regeneratorRuntime.mark((function a() {
                        return regeneratorRuntime.wrap((function(a) {
                            while (1) switch (a.prev = a.next) {
                                case 0:
                                    return a.next = 2, s.task.sleep();
                                case 2:
                                    return c.default.reset(), c.default.set({
                                        code: ["npc 1000 h", "kill"],
                                        killMax: 1
                                    }), a.next = 6, c.default.start(!1, !1);
                                case 6:
                                    if (2 !== e) {
                                        a.next = 12;
                                        break
                                    }
                                    return a.next = 9, s.task.sleep();
                                case 9:
                                    return a.next = 11, s.task.send(n.next, "<title>");
                                case 11:
                                    n = n === t.npc ? t.kill : t.npc;
                                case 12:
                                    return a.next = 14, r();
                                case 14:
                                case "end":
                                    return a.stop()
                            }
                        }), a)
                    }))), u.apply(this, arguments)
                }
                return s.task.move(n.code, n.title).then(r)
            }));
        t.default = u
    },
    bc13: function(e, t, n) {
        var r = n("e53d"),
            a = r.navigator;
        e.exports = a && a.userAgent || ""
    },
    be13: function(e, t) {
        e.exports = function(e) {
            if (void 0 == e) throw TypeError("Can't call method on  " + e);
            return e
        }
    },
    bf0b: function(e, t, n) {
        var r = n("355d"),
            a = n("aebd"),
            s = n("36c3"),
            c = n("1bc3"),
            u = n("07e3"),
            i = n("794b"),
            o = Object.getOwnPropertyDescriptor;
        t.f = n("8e60") ? o : function(e, t) {
            if (e = s(e), t = c(t, !0), i) try {
                return o(e, t)
            } catch (n) {}
            if (u(e, t)) return a(!r.f.call(e, t), e[t])
        }
    },
    bf97: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = new s.Task({
                title: "银币强化英雄之戒",
                tags: ["other"]
            }, (function() {
                function e() {
                    return t.apply(this, arguments)
                }

                function t() {
                    return t = (0, a.default)(regeneratorRuntime.mark((function t() {
                        var n, r, a, c, u, i, o, f;
                        return regeneratorRuntime.wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, s.task.sleep();
                                case 2:
                                    return t.next = 4, s.task.send("npc 1000 0", ["银币强化", "你身上没有英雄之戒", "无法强化"]);
                                case 4:
                                    if (n = t.sent, r = n.index, 0 !== r) {
                                        t.next = 30;
                                        break
                                    }
                                    return t.next = 9, s.task.sleep();
                                case 9:
                                    return t.next = 11, s.task.send("sel0", "银币强化");
                                case 11:
                                    if (a = t.sent, c = a.text, u = (0, s.parseMsg)(c).data.list, !u.length) {
                                        t.next = 30;
                                        break
                                    }
                                    return t.next = 17, s.task.sleep();
                                case 17:
                                    return t.next = 19, s.task.send(u[0].code, ["[yes]"]);
                                case 19:
                                    return t.next = 21, s.task.sleep();
                                case 21:
                                    return t.next = 23, s.task.send("yes", ["恭喜你", "无法强化"]);
                                case 23:
                                    if (i = t.sent, o = i.index, f = i.text, 1 !== o) {
                                        t.next = 28;
                                        break
                                    }
                                    throw new Error(f);
                                case 28:
                                    return t.next = 30, e();
                                case 30:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    }))), t.apply(this, arguments)
                }
                return s.task.move("zz 100", "职业者广场").then(e)
            }));
        t.default = c
    },
    c09c: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("c5f6"), n("4917");
        var a = r(n("768b"));
        n("96cf");
        var s = r(n("3b8d")),
            c = n("3f7e"),
            u = r(n("4988")),
            i = r(n("5b6c")),
            o = r(n("275e")),
            f = [{
                title: "巨型雪人",
                code: "npc 1001 h"
            }, {
                title: "雪灵蛟龙",
                code: "npc 1000 h"
            }],
            l = new c.Task({
                title: "雪域国度(持续刷雪团)",
                tags: ["event"],
                batch: !1,
                form: [{
                    title: "目标",
                    type: "picker",
                    range: f,
                    value: 0
                }, {
                    title: "混合暗怪",
                    type: "checkbox",
                    value: !1
                }, {
                    title: "精魄处理",
                    type: "picker",
                    range: ["兑换经验", "兑换材料"],
                    value: 0
                }]
            }, (function() {
                var e = this.form[0].value,
                    t = f[e],
                    n = this.form[1].value,
                    r = this.form[2].value;

                function l() {
                    return p.apply(this, arguments)
                }

                function p() {
                    return p = (0, s.default)(regeneratorRuntime.mark((function e() {
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, u.default.start(!1);
                                case 2:
                                    return i.default.set({
                                        target: r
                                    }), e.next = 5, i.default.start(!1);
                                case 5:
                                    return e.next = 7, c.task.sleep();
                                case 7:
                                    return e.next = 9, c.task.move("sdj 104", "荒雪丘陵");
                                case 9:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), p.apply(this, arguments)
                }

                function d() {
                    return x.apply(this, arguments)
                }

                function x() {
                    return x = (0, s.default)(regeneratorRuntime.mark((function e() {
                        var r, s, u, i, f, p, x, h;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, c.task.sleep();
                                case 2:
                                    return e.next = 4, c.task.send(t.code, ["你现在很累了", "<r>walk ", "combat"]);
                                case 4:
                                    if (r = e.sent, s = r.index, u = r.text, 0 !== s && 1 !== s) {
                                        e.next = 14;
                                        break
                                    }
                                    return console.warn(u), i = u.match(/(\d+) 秒之后就行/) || ["", 2], f = (0, a.default)(i, 2), f[0], p = f[1], e.next = 12, c.task.sleep(1e3 * Number(p));
                                case 12:
                                    e.next = 46;
                                    break;
                                case 14:
                                    return e.next = 16, new Promise((function(e) {
                                        uni.$once("combatready", e)
                                    }));
                                case 16:
                                    if (x = e.sent, h = x.needClear, !h) {
                                        e.next = 23;
                                        break
                                    }
                                    return e.next = 21, l();
                                case 21:
                                    e.next = 46;
                                    break;
                                case 23:
                                    if (!n) {
                                        e.next = 46;
                                        break
                                    }
                                    return e.next = 26, c.task.sleep();
                                case 26:
                                    return e.next = 28, c.task.send("t l 8001", "<title>");
                                case 28:
                                    return e.next = 30, c.task.sleep();
                                case 30:
                                    return e.next = 32, c.task.send("t l 6001", "<title>");
                                case 32:
                                    return e.next = 34, c.task.sleep();
                                case 34:
                                    return o.default.reset(), o.default.set({
                                        code: "kill",
                                        killMax: 1
                                    }), e.next = 38, o.default.start(!1, !1);
                                case 38:
                                    return e.next = 40, c.task.sleep();
                                case 40:
                                    return e.next = 42, c.task.send("t l 5001", "<title>");
                                case 42:
                                    return e.next = 44, c.task.sleep();
                                case 44:
                                    return e.next = 46, c.task.send("t l 12001", "<title>");
                                case 46:
                                    return e.next = 48, d();
                                case 48:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), x.apply(this, arguments)
                }

                function h() {
                    return k.apply(this, arguments)
                }

                function k() {
                    return k = (0, s.default)(regeneratorRuntime.mark((function e() {
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, c.task.sleep();
                                case 2:
                                    return e.next = 4, c.task.move("sdj 104", "荒雪丘陵");
                                case 4:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), k.apply(this, arguments)
                }
                return h().then(d)
            }));
        t.default = l
    },
    c0a1: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("4917"), n("7514"), n("6762"), n("2fdb"), n("96cf");
        var a = r(n("3b8d"));
        n("c5f6");
        var s = n("3f7e"),
            c = new s.Task({
                title: "专业锻造",
                tags: ["item"],
                form: [{
                    title: "装备名称",
                    type: "input",
                    placeholder: "名称",
                    focus: !0,
                    value: ""
                }, {
                    title: "锻造等级",
                    type: "input",
                    placeholder: "数字",
                    focus: !1,
                    value: "1"
                }, {
                    title: "强化材料",
                    type: "picker",
                    range: ["锻造宝石", "精灵锻造宝石", "28级三星石", "轻锻宝石", "精炼宝石"],
                    value: 0
                }, {
                    title: "自动修复",
                    type: "checkbox",
                    value: !1
                }, {
                    title: "购买锻石",
                    type: "checkbox",
                    value: !1
                }]
            }, (function() {
                var e = this.form[0].value || "xxx",
                    t = Number(this.form[1].value) || 1,
                    n = this.form[2].range,
                    r = this.form[2].value,
                    c = n[r],
                    u = this.form[3].value,
                    i = this.form[4].value;

                function o(e) {
                    return f.apply(this, arguments)
                }

                function f() {
                    return f = (0, a.default)(regeneratorRuntime.mark((function e(n) {
                        var r, a, c;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.next = 4, (0, s.hasCode)();
                                case 4:
                                    if (e.t0 = !e.sent, !e.t0) {
                                        e.next = 7;
                                        break
                                    }
                                    e.t0 = u || !/是否要修复/.test(n);
                                case 7:
                                    if (!e.t0) {
                                        e.next = 17;
                                        break
                                    }
                                    return e.next = 10, s.task.send("yes", ["[yes]", "<pmg"]);
                                case 10:
                                    if (r = e.sent, a = r.index, c = r.text, 0 !== a || c.includes("锻造等级：+".concat(t))) {
                                        e.next = 17;
                                        break
                                    }
                                    return e.next = 16, o(c);
                                case 16:
                                    return e.abrupt("return");
                                case 17:
                                    return e.next = 19, s.task.sleep();
                                case 19:
                                    return e.next = 21, s.task.send("cnt", "cnt");
                                case 21:
                                    return e.next = 23, (0, s.checkCode)();
                                case 23:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), f.apply(this, arguments)
                }

                function l(e) {
                    return p.apply(this, arguments)
                }

                function p() {
                    return p = (0, a.default)(regeneratorRuntime.mark((function n(r) {
                        var a, c, u, i, o;
                        return regeneratorRuntime.wrap((function(n) {
                            while (1) switch (n.prev = n.next) {
                                case 0:
                                    if (a = r.index, c = r.text, 1 !== a) {
                                        n.next = 3;
                                        break
                                    }
                                    throw new Error(c);
                                case 3:
                                    return u = (0, s.parseMsg)(c).data.list, i = u && u.find((function(n) {
                                        var r = n.title,
                                            a = parseInt((r.match(/\+\d+/) || ["0"])[0]);
                                        return r.includes(e) && a < t
                                    })), n.next = 7, s.task.sleep();
                                case 7:
                                    if (i) {
                                        n.next = 21;
                                        break
                                    }
                                    if (!u.find((function(e) {
                                            var t = e.code;
                                            return "r" === t
                                        }))) {
                                        n.next = 16;
                                        break
                                    }
                                    return n.next = 11, s.task.send("r", ["<menu"]);
                                case 11:
                                    return o = n.sent, n.next = 14, l(o);
                                case 14:
                                    n.next = 19;
                                    break;
                                case 16:
                                    return n.next = 18, s.task.cancel(!0);
                                case 18:
                                    throw new Error("强化完毕");
                                case 19:
                                    n.next = 23;
                                    break;
                                case 21:
                                    return n.next = 23, s.task.send(i.code, "[yes]");
                                case 23:
                                case "end":
                                    return n.stop()
                            }
                        }), n)
                    }))), p.apply(this, arguments)
                }

                function d() {
                    return x.apply(this, arguments)
                }

                function x() {
                    return x = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var t, n, a, u, f, p;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.next = 4, s.task.send("m5 5", "<menu", !0);
                                case 4:
                                    return t = e.sent, n = t.text, a = (0, s.parseMsg)(n).data.list, u = a.find((function(e) {
                                        var t = e.title;
                                        return t.includes((r ? "" : " ") + c)
                                    })), e.next = 10, s.task.sleep();
                                case 10:
                                    if (u) {
                                        e.next = 22;
                                        break
                                    }
                                    return e.next = 13, s.task.cancel(!0);
                                case 13:
                                    if (0 !== r || !i) {
                                        e.next = 19;
                                        break
                                    }
                                    return e.next = 16, (0, s.buy)("锻造宝石", 99);
                                case 16:
                                    return e.next = 18, d();
                                case 18:
                                    return e.abrupt("return", e.sent);
                                case 19:
                                    throw f = "无强化材料", s.task.log(f), new Error(f);
                                case 22:
                                    return e.next = 24, s.task.send("".concat(u.code, " 0"), ["<menu", "没有合适的装备"]);
                                case 24:
                                    return p = e.sent, e.next = 27, l(p);
                                case 27:
                                    return e.next = 29, o();
                                case 29:
                                    return e.next = 31, d();
                                case 31:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), x.apply(this, arguments)
                }
                return d()
            }));
        t.default = c
    },
    c198: function(e, t, n) {
        (function(t, r, a) {
            e.exports = r(n("21bf"), n("1132"), n("72fe"), n("2b79"), n("38ba"))
        })(0, (function(e) {
            return function() {
                var t = e,
                    n = t.lib,
                    r = n.BlockCipher,
                    a = t.algo,
                    s = [],
                    c = [],
                    u = [],
                    i = [],
                    o = [],
                    f = [],
                    l = [],
                    p = [],
                    d = [],
                    x = [];
                (function() {
                    for (var e = [], t = 0; t < 256; t++) e[t] = t < 128 ? t << 1 : t << 1 ^ 283;
                    var n = 0,
                        r = 0;
                    for (t = 0; t < 256; t++) {
                        var a = r ^ r << 1 ^ r << 2 ^ r << 3 ^ r << 4;
                        a = a >>> 8 ^ 255 & a ^ 99, s[n] = a, c[a] = n;
                        var h = e[n],
                            k = e[h],
                            v = e[k],
                            m = 257 * e[a] ^ 16843008 * a;
                        u[n] = m << 24 | m >>> 8, i[n] = m << 16 | m >>> 16, o[n] = m << 8 | m >>> 24, f[n] = m;
                        m = 16843009 * v ^ 65537 * k ^ 257 * h ^ 16843008 * n;
                        l[a] = m << 24 | m >>> 8, p[a] = m << 16 | m >>> 16, d[a] = m << 8 | m >>> 24, x[a] = m, n ? (n = h ^ e[e[e[v ^ h]]], r ^= e[e[r]]) : n = r = 1
                    }
                })();
                var h = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],
                    k = a.AES = r.extend({
                        _doReset: function() {
                            if (!this._nRounds || this._keyPriorReset !== this._key) {
                                for (var e = this._keyPriorReset = this._key, t = e.words, n = e.sigBytes / 4, r = this._nRounds = n + 6, a = 4 * (r + 1), c = this._keySchedule = [], u = 0; u < a; u++) u < n ? c[u] = t[u] : (f = c[u - 1], u % n ? n > 6 && u % n == 4 && (f = s[f >>> 24] << 24 | s[f >>> 16 & 255] << 16 | s[f >>> 8 & 255] << 8 | s[255 & f]) : (f = f << 8 | f >>> 24, f = s[f >>> 24] << 24 | s[f >>> 16 & 255] << 16 | s[f >>> 8 & 255] << 8 | s[255 & f], f ^= h[u / n | 0] << 24), c[u] = c[u - n] ^ f);
                                for (var i = this._invKeySchedule = [], o = 0; o < a; o++) {
                                    u = a - o;
                                    if (o % 4) var f = c[u];
                                    else f = c[u - 4];
                                    i[o] = o < 4 || u <= 4 ? f : l[s[f >>> 24]] ^ p[s[f >>> 16 & 255]] ^ d[s[f >>> 8 & 255]] ^ x[s[255 & f]]
                                }
                            }
                        },
                        encryptBlock: function(e, t) {
                            this._doCryptBlock(e, t, this._keySchedule, u, i, o, f, s)
                        },
                        decryptBlock: function(e, t) {
                            var n = e[t + 1];
                            e[t + 1] = e[t + 3], e[t + 3] = n, this._doCryptBlock(e, t, this._invKeySchedule, l, p, d, x, c);
                            n = e[t + 1];
                            e[t + 1] = e[t + 3], e[t + 3] = n
                        },
                        _doCryptBlock: function(e, t, n, r, a, s, c, u) {
                            for (var i = this._nRounds, o = e[t] ^ n[0], f = e[t + 1] ^ n[1], l = e[t + 2] ^ n[2], p = e[t + 3] ^ n[3], d = 4, x = 1; x < i; x++) {
                                var h = r[o >>> 24] ^ a[f >>> 16 & 255] ^ s[l >>> 8 & 255] ^ c[255 & p] ^ n[d++],
                                    k = r[f >>> 24] ^ a[l >>> 16 & 255] ^ s[p >>> 8 & 255] ^ c[255 & o] ^ n[d++],
                                    v = r[l >>> 24] ^ a[p >>> 16 & 255] ^ s[o >>> 8 & 255] ^ c[255 & f] ^ n[d++],
                                    m = r[p >>> 24] ^ a[o >>> 16 & 255] ^ s[f >>> 8 & 255] ^ c[255 & l] ^ n[d++];
                                o = h, f = k, l = v, p = m
                            }
                            h = (u[o >>> 24] << 24 | u[f >>> 16 & 255] << 16 | u[l >>> 8 & 255] << 8 | u[255 & p]) ^ n[d++], k = (u[f >>> 24] << 24 | u[l >>> 16 & 255] << 16 | u[p >>> 8 & 255] << 8 | u[255 & o]) ^ n[d++], v = (u[l >>> 24] << 24 | u[p >>> 16 & 255] << 16 | u[o >>> 8 & 255] << 8 | u[255 & f]) ^ n[d++], m = (u[p >>> 24] << 24 | u[o >>> 16 & 255] << 16 | u[f >>> 8 & 255] << 8 | u[255 & l]) ^ n[d++];
                            e[t] = h, e[t + 1] = k, e[t + 2] = v, e[t + 3] = m
                        },
                        keySize: 8
                    });
                t.AES = r._createHelper(k)
            }(), e.AES
        }))
    },
    c1bc: function(e, t, n) {
        (function(t, r) {
            e.exports = r(n("21bf"))
        })(0, (function(e) {
            return function() {
                var t = e,
                    n = t.lib,
                    r = n.WordArray,
                    a = t.enc;
                a.Base64url = {
                    stringify: function(e, t = !0) {
                        var n = e.words,
                            r = e.sigBytes,
                            a = t ? this._safe_map : this._map;
                        e.clamp();
                        for (var s = [], c = 0; c < r; c += 3)
                            for (var u = n[c >>> 2] >>> 24 - c % 4 * 8 & 255, i = n[c + 1 >>> 2] >>> 24 - (c + 1) % 4 * 8 & 255, o = n[c + 2 >>> 2] >>> 24 - (c + 2) % 4 * 8 & 255, f = u << 16 | i << 8 | o, l = 0; l < 4 && c + .75 * l < r; l++) s.push(a.charAt(f >>> 6 * (3 - l) & 63));
                        var p = a.charAt(64);
                        if (p)
                            while (s.length % 4) s.push(p);
                        return s.join("")
                    },
                    parse: function(e, t = !0) {
                        var n = e.length,
                            r = t ? this._safe_map : this._map,
                            a = this._reverseMap;
                        if (!a) {
                            a = this._reverseMap = [];
                            for (var c = 0; c < r.length; c++) a[r.charCodeAt(c)] = c
                        }
                        var u = r.charAt(64);
                        if (u) {
                            var i = e.indexOf(u); - 1 !== i && (n = i)
                        }
                        return s(e, n, a)
                    },
                    _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                    _safe_map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"
                };

                function s(e, t, n) {
                    for (var a = [], s = 0, c = 0; c < t; c++)
                        if (c % 4) {
                            var u = n[e.charCodeAt(c - 1)] << c % 4 * 2,
                                i = n[e.charCodeAt(c)] >>> 6 - c % 4 * 2,
                                o = u | i;
                            a[s >>> 2] |= o << 24 - s % 4 * 8, s++
                        } return r.create(a, s)
                }
            }(), e.enc.Base64url
        }))
    },
    c207: function(e, t) {},
    c366: function(e, t, n) {
        var r = n("6821"),
            a = n("9def"),
            s = n("77f1");
        e.exports = function(e) {
            return function(t, n, c) {
                var u, i = r(t),
                    o = a(i.length),
                    f = s(c, o);
                if (e && n != n) {
                    while (o > f)
                        if (u = i[f++], u != u) return !0
                } else
                    for (; o > f; f++)
                        if ((e || f in i) && i[f] === n) return e || f || 0;
                return !e && -1
            }
        }
    },
    c367: function(e, t, n) {
        "use strict";
        var r = n("8436"),
            a = n("50ed"),
            s = n("481b"),
            c = n("36c3");
        e.exports = n("30f1")(Array, "Array", (function(e, t) {
            this._t = c(e), this._i = 0, this._k = t
        }), (function() {
            var e = this._t,
                t = this._k,
                n = this._i++;
            return !e || n >= e.length ? (this._t = void 0, a(1)) : a(0, "keys" == t ? n : "values" == t ? e[n] : [n, e[n]])
        }), "values"), s.Arguments = s.Array, r("keys"), r("values"), r("entries")
    },
    c3a1: function(e, t, n) {
        var r = n("e6f3"),
            a = n("1691");
        e.exports = Object.keys || function(e) {
            return r(e, a)
        }
    },
    c3b6: function(e, t, n) {
        (function(t, r, a) {
            e.exports = r(n("21bf"), n("1132"), n("72fe"), n("2b79"), n("38ba"))
        })(0, (function(e) {
            return function() {
                var t = e,
                    n = t.lib,
                    r = n.StreamCipher,
                    a = t.algo,
                    s = a.RC4 = r.extend({
                        _doReset: function() {
                            for (var e = this._key, t = e.words, n = e.sigBytes, r = this._S = [], a = 0; a < 256; a++) r[a] = a;
                            a = 0;
                            for (var s = 0; a < 256; a++) {
                                var c = a % n,
                                    u = t[c >>> 2] >>> 24 - c % 4 * 8 & 255;
                                s = (s + r[a] + u) % 256;
                                var i = r[a];
                                r[a] = r[s], r[s] = i
                            }
                            this._i = this._j = 0
                        },
                        _doProcessBlock: function(e, t) {
                            e[t] ^= c.call(this)
                        },
                        keySize: 8,
                        ivSize: 0
                    });

                function c() {
                    for (var e = this._S, t = this._i, n = this._j, r = 0, a = 0; a < 4; a++) {
                        t = (t + 1) % 256, n = (n + e[t]) % 256;
                        var s = e[t];
                        e[t] = e[n], e[n] = s, r |= e[(e[t] + e[n]) % 256] << 24 - 8 * a
                    }
                    return this._i = t, this._j = n, r
                }
                t.RC4 = r._createHelper(s);
                var u = a.RC4Drop = s.extend({
                    cfg: s.cfg.extend({
                        drop: 192
                    }),
                    _doReset: function() {
                        s._doReset.call(this);
                        for (var e = this.cfg.drop; e > 0; e--) c.call(this)
                    }
                });
                t.RC4Drop = r._createHelper(u)
            }(), e.RC4
        }))
    },
    c5ea: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = r(n("3918")),
            u = [1, 5, 4, 2, 6],
            i = new s.Task({
                title: "生活技能",
                tags: ["other"],
                form: [{
                    title: "技能名称",
                    type: "picker",
                    range: ["寻找财宝", "采集花束", "神之天眼", "制作技能挂机卡", "带宠大师"],
                    value: 3
                }]
            }, (function() {
                var e = this.form[0].value;

                function t() {
                    return n.apply(this, arguments)
                }

                function n() {
                    return n = (0, a.default)(regeneratorRuntime.mark((function n() {
                        var r, a, i;
                        return regeneratorRuntime.wrap((function(n) {
                            while (1) switch (n.prev = n.next) {
                                case 0:
                                    return n.next = 2, s.task.sleep();
                                case 2:
                                    return n.next = 4, s.task.send("shjn", "当前活力");
                                case 4:
                                    return n.next = 6, s.task.sleep();
                                case 6:
                                    return r = ["使用失败", "寻宝成功", "采集花束", "神之天眼", "技能挂机卡", "练宠大师", "已经满级"], n.next = 9, s.task.send("shjn".concat(u[e]), r);
                                case 9:
                                    if (a = n.sent, i = a.index, 0 !== i) {
                                        n.next = 20;
                                        break
                                    }
                                    return n.next = 14, s.task.sleep();
                                case 14:
                                    return c.default.reset(), c.default.set({
                                        item: "运动饮料",
                                        use: !0,
                                        max: 1
                                    }), n.next = 18, c.default.start(!1, !1);
                                case 18:
                                    n.next = 22;
                                    break;
                                case 20:
                                    if (i !== r.length - 1) {
                                        n.next = 22;
                                        break
                                    }
                                    return n.abrupt("return");
                                case 22:
                                    return n.next = 24, t();
                                case 24:
                                case "end":
                                    return n.stop()
                            }
                        }), n)
                    }))), n.apply(this, arguments)
                }
                return t()
            }));
        t.default = i
    },
    c5f6: function(e, t, n) {
        "use strict";
        var r = n("7726"),
            a = n("69a8"),
            s = n("2d95"),
            c = n("5dbc"),
            u = n("6a99"),
            i = n("79e5"),
            o = n("9093").f,
            f = n("11e9").f,
            l = n("86cc").f,
            p = n("aa77").trim,
            d = "Number",
            x = r[d],
            h = x,
            k = x.prototype,
            v = s(n("2aeb")(k)) == d,
            m = "trim" in String.prototype,
            b = function(e) {
                var t = u(e, !1);
                if ("string" == typeof t && t.length > 2) {
                    t = m ? t.trim() : p(t, 3);
                    var n, r, a, s = t.charCodeAt(0);
                    if (43 === s || 45 === s) {
                        if (n = t.charCodeAt(2), 88 === n || 120 === n) return NaN
                    } else if (48 === s) {
                        switch (t.charCodeAt(1)) {
                            case 66:
                            case 98:
                                r = 2, a = 49;
                                break;
                            case 79:
                            case 111:
                                r = 8, a = 55;
                                break;
                            default:
                                return +t
                        }
                        for (var c, i = t.slice(2), o = 0, f = i.length; o < f; o++)
                            if (c = i.charCodeAt(o), c < 48 || c > a) return NaN;
                        return parseInt(i, r)
                    }
                }
                return +t
            };
        if (!x(" 0o1") || !x("0b1") || x("+0x1")) {
            x = function(e) {
                var t = arguments.length < 1 ? 0 : e,
                    n = this;
                return n instanceof x && (v ? i((function() {
                    k.valueOf.call(n)
                })) : s(n) != d) ? c(new h(b(t)), n, x) : b(t)
            };
            for (var g, y = n("9e1e") ? o(h) : "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","), w = 0; y.length > w; w++) a(h, g = y[w]) && !a(x, g) && l(x, g, f(h, g));
            x.prototype = k, k.constructor = x, n("2aba")(r, d, x)
        }
    },
    c64e: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("c5f6"), n("4917");
        var a = r(n("768b"));
        n("96cf");
        var s = r(n("3b8d")),
            c = n("3f7e"),
            u = r(n("aa72")),
            i = r(n("5b6c")),
            o = r(n("31ee")),
            f = r(n("9c2b")),
            l = new c.Task({
                title: "刷磨玉镶嵌石",
                tags: ["event"],
                batch: !1,
                form: [{
                    title: "挂机NPC",
                    type: "picker",
                    range: [{
                        title: "邪恶意志",
                        code: "npc 1000"
                    }, {
                        title: "邪恶灵魂",
                        code: "npc 1001"
                    }],
                    value: 1
                }, {
                    title: "爱心处理方式",
                    type: "picker",
                    range: ["奉献爱心", "不处理"],
                    value: 0
                }, {
                    title: "精魄处理方式",
                    type: "picker",
                    range: ["兑换经验", "兑换材料", "存仓库", "不处理"],
                    value: 1
                }, {
                    title: "自动丢弃",
                    type: "input",
                    placeholder: "多个用|分割",
                    value: "小卖部银会员卡|飞行之羽"
                }, {
                    title: "物品存仓",
                    type: "input",
                    placeholder: "多个用|分割",
                    value: "磨玉镶嵌石"
                }]
            }, (function() {
                var e = this.form[0],
                    t = e.range[e.value],
                    n = this.form[1].value,
                    r = this.form[2].value,
                    l = (0, c.toArray)(this.form[3].value),
                    p = (0, c.toArray)(this.form[4].value);

                function d() {
                    return x.apply(this, arguments)
                }

                function x() {
                    return x = (0, s.default)(regeneratorRuntime.mark((function e() {
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    if (n) {
                                        e.next = 3;
                                        break
                                    }
                                    return e.next = 3, u.default.start(!1);
                                case 3:
                                    if (2 !== r) {
                                        e.next = 7;
                                        break
                                    }
                                    p.push("燃烧的精魄"), e.next = 11;
                                    break;
                                case 7:
                                    if (3 === r) {
                                        e.next = 11;
                                        break
                                    }
                                    return i.default.set({
                                        target: r
                                    }), e.next = 11, i.default.start(!1);
                                case 11:
                                    if (!p.length) {
                                        e.next = 18;
                                        break
                                    }
                                    return e.next = 14, c.task.sleep();
                                case 14:
                                    return o.default.reset(), o.default.set({
                                        target: 0,
                                        items: p
                                    }), e.next = 18, o.default.start(!1, !1);
                                case 18:
                                    if (!l.length) {
                                        e.next = 27;
                                        break
                                    }
                                    return e.next = 21, c.task.sleep();
                                case 21:
                                    return e.next = 23, c.task.move("msgd 195", "尚武擂台(95级)");
                                case 23:
                                    return f.default.reset(), f.default.set({
                                        items: l
                                    }), e.next = 27, f.default.start(!1, !1);
                                case 27:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), x.apply(this, arguments)
                }

                function h() {
                    return k.apply(this, arguments)
                }

                function k() {
                    return k = (0, s.default)(regeneratorRuntime.mark((function e() {
                        var n, r, s, u, i, o, f, l;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, c.task.sleep();
                                case 2:
                                    return e.next = 4, c.task.move("msgd 195", "尚武擂台(95级)");
                                case 4:
                                    return e.next = 6, c.task.sleep();
                                case 6:
                                    return e.next = 8, c.task.send(t.code + " h", ["你现在很累了", "<r>walk ", "combat"]);
                                case 8:
                                    if (n = e.sent, r = n.index, s = n.text, 0 !== r && 1 !== r) {
                                        e.next = 18;
                                        break
                                    }
                                    return console.warn(s), u = s.match(/(\d+) 秒之后就行/) || ["", 2], i = (0, a.default)(u, 2), i[0], o = i[1], e.next = 16, c.task.sleep(1e3 * Number(o));
                                case 16:
                                    e.next = 25;
                                    break;
                                case 18:
                                    return e.next = 20, new Promise((function(e) {
                                        uni.$once("combatready", e)
                                    }));
                                case 20:
                                    if (f = e.sent, l = f.needClear, !l) {
                                        e.next = 25;
                                        break
                                    }
                                    return e.next = 25, d();
                                case 25:
                                    return e.next = 27, h();
                                case 27:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), k.apply(this, arguments)
                }
                return h()
            }));
        t.default = l
    },
    c69a: function(e, t, n) {
        e.exports = !n("9e1e") && !n("79e5")((function() {
            return 7 != Object.defineProperty(n("230e")("div"), "a", {
                get: function() {
                    return 7
                }
            }).a
        }))
    },
    c8ba: function(e, t) {
        var n;
        n = function() {
            return this
        }();
        try {
            n = n || new Function("return this")()
        } catch (r) {
            "object" === typeof window && (n = window)
        }
        e.exports = n
    },
    c906: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("f559"), n("6b54"), n("28a5"), n("4917"), n("c5f6"), n("7514"), n("3b2b"), n("96cf");
        for (var a = r(n("3b8d")), s = n("3f7e"), c = r(n("275e")), u = [], i = 0; i < 100; i++) u.unshift("".concat(i, " m mps"));
        u.unshift("~0 mps");
        var o = new s.Task({
            title: "夺宝骑兵",
            tags: ["event"]
        }, (0, a.default)(regeneratorRuntime.mark((function e() {
            var t, n, r, i, o, f, l, p, d;
            return regeneratorRuntime.wrap((function(e) {
                while (1) switch (e.prev = e.next) {
                    case 0:
                        return p = function() {
                            return p = (0, a.default)(regeneratorRuntime.mark((function e() {
                                var r, a, c, u, i, o, f, l, p, d, x;
                                return regeneratorRuntime.wrap((function(e) {
                                    while (1) switch (e.prev = e.next) {
                                        case 0:
                                            return e.next = 2, s.task.send("mountcmd see", ["查看坐骑", "您目前没有坐骑"]);
                                        case 2:
                                            if (r = e.sent, a = r.text, c = r.index, 0 !== c) {
                                                e.next = 23;
                                                break
                                            }
                                            n = (0, s.parseMsg)(a).data.list, i = 0;
                                        case 8:
                                            if (!(i < n.length)) {
                                                e.next = 18;
                                                break
                                            }
                                            if (o = n[i], f = o.title.match(/（(\d)+）.*（乘骑中）/), !f) {
                                                e.next = 15;
                                                break
                                            }
                                            return u = o, t = Number(f[1]), e.abrupt("break", 18);
                                        case 15:
                                            i++, e.next = 8;
                                            break;
                                        case 18:
                                            return t > 1 && n.push({
                                                title: "步行（1）",
                                                code: u.code
                                            }), e.next = 21, s.task.sleep();
                                        case 21:
                                            return e.next = 23, s.task.cancel();
                                        case 23:
                                            return console.log("level:", t), e.next = 26, (0, s.getMainDataAsync)();
                                        case 26:
                                            if (l = e.sent.map, p = l.title, d = l.npc, x = d.find((function(e) {
                                                    var t = e.list;
                                                    return t.find((function(e) {
                                                        var t = e.code;
                                                        return "~q0" === t
                                                    }))
                                                })), p.startsWith("夺宝骑兵") && x) {
                                                e.next = 35;
                                                break
                                            }
                                            return e.next = 33, s.task.sleep();
                                        case 33:
                                            return e.next = 35, s.task.move("dbqb 901", "夺宝骑兵01");
                                        case 35:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e)
                            }))), p.apply(this, arguments)
                        }, l = function() {
                            return p.apply(this, arguments)
                        }, f = function() {
                            return f = (0, a.default)(regeneratorRuntime.mark((function e() {
                                var a, c, i, f, l, p, d, x, h, k, v, m, b, g, y, w, _, R, M, j, E, S, O, P, A, T, B, N, I, z, C, D, L, H, F;
                                return regeneratorRuntime.wrap((function(e) {
                                    while (1) switch (e.prev = e.next) {
                                        case 0:
                                            return e.next = 2, (0, s.getMainDataAsync)();
                                        case 2:
                                            if (a = e.sent.map, c = a.title, i = a.npc, f = i.find((function(e) {
                                                    var t = e.list;
                                                    return t.find((function(e) {
                                                        var t = e.code;
                                                        return "~q0" === t
                                                    }))
                                                })), !f) {
                                                e.next = 91;
                                                break
                                            }
                                            if (p = 30, d = Number(c.match(/夺宝骑兵(\d+)/)[1]), x = p - d, console.log("level:".concat(t, " need:").concat(x)), !(t / 2 >= x)) {
                                                e.next = 35;
                                                break
                                            }
                                            for (h = null, k = 0, v = 0; v < n.length; v++) m = n[v], b = m.title.match(/（(\d)+）/), g = Number(b[1]), g / 2 < x && g > k && (k = g, h = m);
                                            if (!h) {
                                                e.next = 35;
                                                break
                                            }
                                            return e.next = 18, s.task.sleep();
                                        case 18:
                                            return e.next = 20, s.task.send("mountcmd see", ["查看坐骑"]);
                                        case 20:
                                            return e.next = 22, s.task.sleep();
                                        case 22:
                                            return e.next = 24, s.task.send("".concat(h.code), "坐骑：");
                                        case 24:
                                            return e.next = 26, s.task.sleep();
                                        case 26:
                                            if (!(k > 1)) {
                                                e.next = 31;
                                                break
                                            }
                                            return e.next = 29, s.task.send("mount", "骑上了");
                                        case 29:
                                            e.next = 33;
                                            break;
                                        case 31:
                                            return e.next = 33, s.task.send("cancel", "cnt");
                                        case 33:
                                            s.task.log("提示：当前坐骑等级大于剩余步数，已自动".concat(k > 1 ? "更换" : "取消", "坐骑")), t = k;
                                        case 35:
                                            return e.next = 37, s.task.sleep();
                                        case 37:
                                            return e.next = 39, s.task.send("".concat(f.code, " ~q0"), ["[~1]", "需要", "不是活动时间", "任务已经过期"]);
                                        case 39:
                                            if (y = e.sent, w = y.index, _ = y.text, 0 !== w) {
                                                e.next = 80;
                                                break
                                            }
                                            return e.next = 45, s.task.sleep();
                                        case 45:
                                            return e.next = 47, s.task.send("1", u.concat(["[random]", "需要"]));
                                        case 47:
                                            if (R = e.sent, M = R.index, j = R.text, M !== u.length) {
                                                e.next = 70;
                                                break
                                            }
                                            return e.next = 53, s.task.sleep();
                                        case 53:
                                            return e.next = 55, s.task.send("random", ["[lucky over]继续"].concat(u));
                                        case 55:
                                            if (E = e.sent, S = E.index, 0 !== S) {
                                                e.next = 67;
                                                break
                                            }
                                            return e.next = 60, s.task.sleep();
                                        case 60:
                                            return e.next = 62, s.task.send("lucky over", u);
                                        case 62:
                                            O = e.sent, P = O.index, l = P, e.next = 68;
                                            break;
                                        case 67:
                                            l = S - 1;
                                        case 68:
                                            e.next = 78;
                                            break;
                                        case 70:
                                            if (M !== u.length + 1) {
                                                e.next = 77;
                                                break
                                            }
                                            return e.next = 73, r(j);
                                        case 73:
                                            return e.next = 75, o();
                                        case 75:
                                            e.next = 78;
                                            break;
                                        case 77:
                                            l = M;
                                        case 78:
                                            e.next = 89;
                                            break;
                                        case 80:
                                            if (1 !== w) {
                                                e.next = 87;
                                                break
                                            }
                                            return e.next = 83, r(_);
                                        case 83:
                                            return e.next = 85, o();
                                        case 85:
                                            e.next = 89;
                                            break;
                                        case 87:
                                            if (2 !== w && 3 !== w) {
                                                e.next = 89;
                                                break
                                            }
                                            throw new Error(_);
                                        case 89:
                                            e.next = 106;
                                            break;
                                        case 91:
                                            return e.next = 93, s.task.sleep();
                                        case 93:
                                            return e.next = 95, s.task.send("9 1", "查看任务");
                                        case 95:
                                            return A = e.sent, T = A.text, B = (0, s.parseMsg)(T).data.list, N = B.find((function(e) {
                                                var t = e.title;
                                                return /夺宝骑兵/.test(t)
                                            })), e.next = 101, s.task.sleep();
                                        case 101:
                                            return e.next = 103, s.task.send("".concat(N.code, " a"), u);
                                        case 103:
                                            I = e.sent, z = I.index, l = z;
                                        case 106:
                                            return e.next = 108, s.task.sleep();
                                        case 108:
                                            return e.next = 110, s.task.send(u[l], ["<mp>", "不用飞啦"]);
                                        case 110:
                                            if (C = e.sent, D = C.index, L = C.text, 0 !== D) {
                                                e.next = 121;
                                                break
                                            }
                                            return H = L.split("|"), H = H.slice(H.length - 2), F = L.match(new RegExp("00".concat(Number(H[0]).toString(16).toUpperCase(), "(.+?)\\$")))[1], e.next = 119, s.task.sleep();
                                        case 119:
                                            return e.next = 121, s.task.move("".concat(H[1], " ").concat(H[0]), F);
                                        case 121:
                                            return e.next = 123, o();
                                        case 123:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e)
                            }))), f.apply(this, arguments)
                        }, o = function() {
                            return f.apply(this, arguments)
                        }, i = function() {
                            return i = (0, a.default)(regeneratorRuntime.mark((function e(t) {
                                var n, r, a, u, i;
                                return regeneratorRuntime.wrap((function(e) {
                                    while (1) switch (e.prev = e.next) {
                                        case 0:
                                            for (console.log("kill1 text:", t), n = /需要.+需要/.test(t) || / \/ .+ \/ /.test(t), r = [], a = 1; a < 21; a++) r.push("需要击败".concat(a, "个.+?已击败").concat(a, "个")), r.push("( ".concat(a, " / ").concat(a, " )")), r.push("需要击败.+?：".concat(a, " \\/ ").concat(a)), r.push("\\(?需要: ".concat(a, " \\/ ").concat(a, "\\)?"));
                                            return u = new RegExp(r.join("|")), i = u.test(t), e.next = 8, s.task.sleep();
                                        case 8:
                                            return c.default.reset(), c.default.set({
                                                code: n ? i ? "kill" : ["npc 1000 h", "npc 1001 h"] : ["npc 1000 h", "npc 1001 h", "kill"],
                                                find: u
                                            }), e.next = 12, c.default.start(!1, !1);
                                        case 12:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e)
                            }))), i.apply(this, arguments)
                        }, r = function(e) {
                            return i.apply(this, arguments)
                        }, t = 1, n = [], e.next = 10, l();
                    case 10:
                        return d = e.sent, e.next = 13, o(d);
                    case 13:
                    case "end":
                        return e.stop()
                }
            }), e)
        }))));
        t.default = o
    },
    c930: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("6762"), n("2fdb"), n("7514");
        var a = r(n("7618"));
        n("ac6a"), n("28a5"), n("96cf");
        var s = r(n("3b8d")),
            c = n("3f7e"),
            u = r(n("f2e2")),
            i = r(n("275e")),
            o = [{
                code: "yxzl 111",
                title: "力量部落"
            }, {
                code: "yxzl 115",
                title: "勇气擂台"
            }, {
                code: "yxzl 112",
                title: "急速平原"
            }, {
                code: "yxzl 114",
                title: "永恒之河"
            }],
            f = new c.Task({
                title: "英雄之家-所有试炼",
                tags: ["event"],
                form: [{
                    title: "优先级",
                    type: "input",
                    focus: !0,
                    value: "法力|防御|速度|攻击|生命"
                }]
            }, (function() {
                var e = this.form[0].value;

                function t(e) {
                    return n.apply(this, arguments)
                }

                function n() {
                    return n = (0, s.default)(regeneratorRuntime.mark((function t(n) {
                        var r, s, u, i, o, f, l, p;
                        return regeneratorRuntime.wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, c.task.sleep();
                                case 2:
                                    return t.next = 4, c.task.move("yxzl 101", "英雄之家");
                                case 4:
                                    return t.next = 6, c.task.sleep();
                                case 6:
                                    return t.next = 8, c.task.send("npc 1000 2", "领取奖励");
                                case 8:
                                    return t.next = 10, c.task.sleep();
                                case 10:
                                    return t.next = 12, c.task.send(n, ["<menu", "没有你能够领取的", "已经领取过", "才能领取奖励"]);
                                case 12:
                                    if (r = t.sent, s = r.text, u = r.index, 0 !== u) {
                                        t.next = 32;
                                        break
                                    }
                                    i = (0, c.parseMsg)(s).data.list, o = e.split(/[｜|]/).filter((function(e) {
                                        return e
                                    })), f = regeneratorRuntime.mark((function e(t) {
                                        var n, r;
                                        return regeneratorRuntime.wrap((function(e) {
                                            while (1) switch (e.prev = e.next) {
                                                case 0:
                                                    if (n = o[t], r = i.find((function(e) {
                                                            var t = e.title;
                                                            return t.includes(n)
                                                        })), !r) {
                                                        e.next = 8;
                                                        break
                                                    }
                                                    return e.next = 5, c.task.sleep();
                                                case 5:
                                                    return e.next = 7, c.task.send(r.code, ["恭喜你获得"]);
                                                case 7:
                                                    return e.abrupt("return", {
                                                        v: void 0
                                                    });
                                                case 8:
                                                case "end":
                                                    return e.stop()
                                            }
                                        }), e)
                                    })), l = 0;
                                case 20:
                                    if (!(l < o.length)) {
                                        t.next = 28;
                                        break
                                    }
                                    return t.delegateYield(f(l), "t0", 22);
                                case 22:
                                    if (p = t.t0, "object" !== (0, a.default)(p)) {
                                        t.next = 25;
                                        break
                                    }
                                    return t.abrupt("return", p.v);
                                case 25:
                                    l++, t.next = 20;
                                    break;
                                case 28:
                                    return t.next = 30, c.task.sleep();
                                case 30:
                                    return t.next = 32, c.task.cancel();
                                case 32:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    }))), n.apply(this, arguments)
                }
                var r = 0;

                function f() {
                    return l.apply(this, arguments)
                }

                function l() {
                    return l = (0, s.default)(regeneratorRuntime.mark((function e() {
                        var n, a, s;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, c.task.sleep();
                                case 2:
                                    return n = o[r], e.next = 5, c.task.move(n.code, n.title);
                                case 5:
                                    return e.next = 7, c.task.sleep();
                                case 7:
                                    return e.next = 9, c.task.send("npc 1000 0", ["试炼已经开启", "今天你已经完成了本试炼"]);
                                case 9:
                                    if (a = e.sent, s = a.index, 0 !== s) {
                                        e.next = 18;
                                        break
                                    }
                                    return i.default.reset(), i.default.set({
                                        code: "急速平原" === n.title ? "kill" : "npc 1000 1",
                                        find: /试炼结束/,
                                        stepMax: "永恒之河" === n.title ? 12 : 0
                                    }), e.next = 16, i.default.start();
                                case 16:
                                    return e.next = 18, c.task.send("npc 1000 0", ["今天你已经完成了本试炼"]);
                                case 18:
                                    if (r++, r === o.length) {
                                        e.next = 24;
                                        break
                                    }
                                    return e.next = 22, f();
                                case 22:
                                    e.next = 28;
                                    break;
                                case 24:
                                    return e.next = 26, t("mr_award");
                                case 26:
                                    return e.next = 28, t("wm_award");
                                case 28:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), l.apply(this, arguments)
                }
                return u.default.start(!1, !1).then(f)
            }));
        t.default = f
    },
    ca5a: function(e, t) {
        var n = 0,
            r = Math.random();
        e.exports = function(e) {
            return "Symbol(".concat(void 0 === e ? "" : e, ")_", (++n + r).toString(36))
        }
    },
    cadf: function(e, t, n) {
        "use strict";
        var r = n("9c6c"),
            a = n("d53b"),
            s = n("84f2"),
            c = n("6821");
        e.exports = n("01f9")(Array, "Array", (function(e, t) {
            this._t = c(e), this._i = 0, this._k = t
        }), (function() {
            var e = this._t,
                t = this._k,
                n = this._i++;
            return !e || n >= e.length ? (this._t = void 0, a(1)) : a(0, "keys" == t ? n : "values" == t ? e[n] : [n, e[n]])
        }), "values"), s.Arguments = s.Array, r("keys"), r("values"), r("entries")
    },
    cb7c: function(e, t, n) {
        var r = n("d3f4");
        e.exports = function(e) {
            if (!r(e)) throw TypeError(e + " is not an object!");
            return e
        }
    },
    ccb9: function(e, t, n) {
        t.f = n("5168")
    },
    cd1c: function(e, t, n) {
        var r = n("e853");
        e.exports = function(e, t) {
            return new(r(e))(t)
        }
    },
    cd78: function(e, t, n) {
        var r = n("e4ae"),
            a = n("f772"),
            s = n("656e");
        e.exports = function(e, t) {
            if (r(e), a(t) && t.constructor === e) return t;
            var n = s.f(e),
                c = n.resolve;
            return c(t), n.promise
        }
    },
    ce10: function(e, t, n) {
        var r = n("69a8"),
            a = n("6821"),
            s = n("c366")(!1),
            c = n("613b")("IE_PROTO");
        e.exports = function(e, t) {
            var n, u = a(e),
                i = 0,
                o = [];
            for (n in u) n != c && r(u, n) && o.push(n);
            while (t.length > i) r(u, n = t[i++]) && (~s(o, n) || o.push(n));
            return o
        }
    },
    d225: function(e, t, n) {
        "use strict";

        function r(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }
        n.r(t), n.d(t, "default", (function() {
            return r
        }))
    },
    d2c8: function(e, t, n) {
        var r = n("aae3"),
            a = n("be13");
        e.exports = function(e, t, n) {
            if (r(t)) throw TypeError("String#" + n + " doesn't accept regex!");
            return String(a(e))
        }
    },
    d2d5: function(e, t, n) {
        n("1654"), n("549b"), e.exports = n("584a").Array.from
    },
    d3f4: function(e, t) {
        e.exports = function(e) {
            return "object" === typeof e ? null !== e : "function" === typeof e
        }
    },
    d53b: function(e, t) {
        e.exports = function(e, t) {
            return {
                value: t,
                done: !!e
            }
        }
    },
    d678: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("96cf");
        var a = r(n("3b8d"));
        n("c5f6");
        var s = n("3f7e"),
            c = new s.Task({
                title: "银票兑换元宝",
                tags: ["change"],
                form: [{
                    title: "次数限制",
                    type: "input",
                    placeholder: "默认不限",
                    focus: !0,
                    value: "999"
                }]
            }, (function() {
                var e = Number(this.form[0].value) || 999,
                    t = 0;

                function n() {
                    return r.apply(this, arguments)
                }

                function r() {
                    return r = (0, a.default)(regeneratorRuntime.mark((function r() {
                        var a, c, u, i, o, f;
                        return regeneratorRuntime.wrap((function(r) {
                            while (1) switch (r.prev = r.next) {
                                case 0:
                                    return r.next = 2, s.task.sleep();
                                case 2:
                                    return r.next = 4, s.task.send("npc 1005 1", ["<menu", "不能兑换"]);
                                case 4:
                                    if (a = r.sent, c = a.text, u = a.index, !(u > 0)) {
                                        r.next = 11;
                                        break
                                    }
                                    throw new Error(c);
                                case 11:
                                    return r.next = 13, s.task.sleep();
                                case 13:
                                    return r.next = 15, s.task.send("1", ["兑换成功", "不能兑换"]);
                                case 15:
                                    if (i = r.sent, o = i.index, f = i.text, !(o > 0)) {
                                        r.next = 20;
                                        break
                                    }
                                    throw new Error(f);
                                case 20:
                                    if (t++, !(t < e)) {
                                        r.next = 24;
                                        break
                                    }
                                    return r.next = 24, n();
                                case 24:
                                case "end":
                                    return r.stop()
                            }
                        }), r)
                    }))), r.apply(this, arguments)
                }
                return s.task.move("sgz 103", "光芒市场").then(n)
            }));
        t.default = c
    },
    d681: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("96cf");
        var a = r(n("3b8d"));
        n("c5f6");
        var s = n("3f7e"),
            c = new s.Task({
                title: "购买摆摊物品",
                tags: ["item"],
                form: [{
                    title: "摊主名称",
                    type: "input",
                    placeholder: "",
                    focus: !0,
                    value: ""
                }, {
                    title: "物品名称",
                    type: "input",
                    placeholder: "",
                    value: ""
                }, {
                    title: "购买数量",
                    type: "input",
                    placeholder: "",
                    value: ""
                }]
            }, (function() {
                var e = this.form[0].value,
                    t = this.form[1].value,
                    n = Number(this.form[2].value) || 0,
                    r = 0;

                function c() {
                    return u.apply(this, arguments)
                }

                function u() {
                    return u = (0, a.default)(regeneratorRuntime.mark((function a() {
                        var u, i, o, f, l, p, d, x;
                        return regeneratorRuntime.wrap((function(a) {
                            while (1) switch (a.prev = a.next) {
                                case 0:
                                    if (!(r < n)) {
                                        a.next = 39;
                                        break
                                    }
                                    return a.prev = 1, a.next = 4, s.task.sleep();
                                case 4:
                                    return a.next = 6, (0, s.findItem)(e, ":5", 1);
                                case 6:
                                    return u = a.sent, a.next = 9, s.task.sleep();
                                case 9:
                                    return a.next = 11, (0, s.findItem)(t, "".concat(u.code, " q"), 1);
                                case 11:
                                    return i = a.sent, a.next = 14, s.task.sleep();
                                case 14:
                                    return a.next = 16, s.task.send("".concat(i.code), ["<menu"]);
                                case 16:
                                    return a.next = 18, s.task.sleep();
                                case 18:
                                    return a.next = 20, s.task.send("1", ["你已经购买了", "<menu", "对不起", "您银币不够"]);
                                case 20:
                                    if (o = a.sent, f = o.index, l = o.text, 1 !== f) {
                                        a.next = 30;
                                        break
                                    }
                                    return p = (0, s.parseMsg)(l).data.list, d = p[0], a.next = 28, s.task.send(d.code, ["你成功购买了", "不能购买"]);
                                case 28:
                                    x = a.sent, f = x.index;
                                case 30:
                                    if (0 !== f) {
                                        a.next = 35;
                                        break
                                    }
                                    return r++, s.task.log("提示：共计购买".concat(r, "次")), a.next = 35, c();
                                case 35:
                                    a.next = 39;
                                    break;
                                case 37:
                                    a.prev = 37, a.t0 = a["catch"](1);
                                case 39:
                                case "end":
                                    return a.stop()
                            }
                        }), a, null, [
                            [1, 37]
                        ])
                    }))), u.apply(this, arguments)
                }
                return c()
            }));
        t.default = c
    },
    d6e6: function(e, t, n) {
        (function(t, r, a) {
            e.exports = r(n("21bf"), n("3252"))
        })(0, (function(e) {
            return function() {
                var t = e,
                    n = t.lib,
                    r = n.Hasher,
                    a = t.x64,
                    s = a.Word,
                    c = a.WordArray,
                    u = t.algo;

                function i() {
                    return s.create.apply(s, arguments)
                }
                var o = [i(1116352408, 3609767458), i(1899447441, 602891725), i(3049323471, 3964484399), i(3921009573, 2173295548), i(961987163, 4081628472), i(1508970993, 3053834265), i(2453635748, 2937671579), i(2870763221, 3664609560), i(3624381080, 2734883394), i(310598401, 1164996542), i(607225278, 1323610764), i(1426881987, 3590304994), i(1925078388, 4068182383), i(2162078206, 991336113), i(2614888103, 633803317), i(3248222580, 3479774868), i(3835390401, 2666613458), i(4022224774, 944711139), i(264347078, 2341262773), i(604807628, 2007800933), i(770255983, 1495990901), i(1249150122, 1856431235), i(1555081692, 3175218132), i(1996064986, 2198950837), i(2554220882, 3999719339), i(2821834349, 766784016), i(2952996808, 2566594879), i(3210313671, 3203337956), i(3336571891, 1034457026), i(3584528711, 2466948901), i(113926993, 3758326383), i(338241895, 168717936), i(666307205, 1188179964), i(773529912, 1546045734), i(1294757372, 1522805485), i(1396182291, 2643833823), i(1695183700, 2343527390), i(1986661051, 1014477480), i(2177026350, 1206759142), i(2456956037, 344077627), i(2730485921, 1290863460), i(2820302411, 3158454273), i(3259730800, 3505952657), i(3345764771, 106217008), i(3516065817, 3606008344), i(3600352804, 1432725776), i(4094571909, 1467031594), i(275423344, 851169720), i(430227734, 3100823752), i(506948616, 1363258195), i(659060556, 3750685593), i(883997877, 3785050280), i(958139571, 3318307427), i(1322822218, 3812723403), i(1537002063, 2003034995), i(1747873779, 3602036899), i(1955562222, 1575990012), i(2024104815, 1125592928), i(2227730452, 2716904306), i(2361852424, 442776044), i(2428436474, 593698344), i(2756734187, 3733110249), i(3204031479, 2999351573), i(3329325298, 3815920427), i(3391569614, 3928383900), i(3515267271, 566280711), i(3940187606, 3454069534), i(4118630271, 4000239992), i(116418474, 1914138554), i(174292421, 2731055270), i(289380356, 3203993006), i(460393269, 320620315), i(685471733, 587496836), i(852142971, 1086792851), i(1017036298, 365543100), i(1126000580, 2618297676), i(1288033470, 3409855158), i(1501505948, 4234509866), i(1607167915, 987167468), i(1816402316, 1246189591)],
                    f = [];
                (function() {
                    for (var e = 0; e < 80; e++) f[e] = i()
                })();
                var l = u.SHA512 = r.extend({
                    _doReset: function() {
                        this._hash = new c.init([new s.init(1779033703, 4089235720), new s.init(3144134277, 2227873595), new s.init(1013904242, 4271175723), new s.init(2773480762, 1595750129), new s.init(1359893119, 2917565137), new s.init(2600822924, 725511199), new s.init(528734635, 4215389547), new s.init(1541459225, 327033209)])
                    },
                    _doProcessBlock: function(e, t) {
                        for (var n = this._hash.words, r = n[0], a = n[1], s = n[2], c = n[3], u = n[4], i = n[5], l = n[6], p = n[7], d = r.high, x = r.low, h = a.high, k = a.low, v = s.high, m = s.low, b = c.high, g = c.low, y = u.high, w = u.low, _ = i.high, R = i.low, M = l.high, j = l.low, E = p.high, S = p.low, O = d, P = x, A = h, T = k, B = v, N = m, I = b, z = g, C = y, D = w, L = _, H = R, F = M, $ = j, W = E, q = S, U = 0; U < 80; U++) {
                            var V, G, K = f[U];
                            if (U < 16) G = K.high = 0 | e[t + 2 * U], V = K.low = 0 | e[t + 2 * U + 1];
                            else {
                                var X = f[U - 15],
                                    Y = X.high,
                                    J = X.low,
                                    Z = (Y >>> 1 | J << 31) ^ (Y >>> 8 | J << 24) ^ Y >>> 7,
                                    Q = (J >>> 1 | Y << 31) ^ (J >>> 8 | Y << 24) ^ (J >>> 7 | Y << 25),
                                    ee = f[U - 2],
                                    te = ee.high,
                                    ne = ee.low,
                                    re = (te >>> 19 | ne << 13) ^ (te << 3 | ne >>> 29) ^ te >>> 6,
                                    ae = (ne >>> 19 | te << 13) ^ (ne << 3 | te >>> 29) ^ (ne >>> 6 | te << 26),
                                    se = f[U - 7],
                                    ce = se.high,
                                    ue = se.low,
                                    ie = f[U - 16],
                                    oe = ie.high,
                                    fe = ie.low;
                                V = Q + ue, G = Z + ce + (V >>> 0 < Q >>> 0 ? 1 : 0), V += ae, G = G + re + (V >>> 0 < ae >>> 0 ? 1 : 0), V += fe, G = G + oe + (V >>> 0 < fe >>> 0 ? 1 : 0), K.high = G, K.low = V
                            }
                            var le = C & L ^ ~C & F,
                                pe = D & H ^ ~D & $,
                                de = O & A ^ O & B ^ A & B,
                                xe = P & T ^ P & N ^ T & N,
                                he = (O >>> 28 | P << 4) ^ (O << 30 | P >>> 2) ^ (O << 25 | P >>> 7),
                                ke = (P >>> 28 | O << 4) ^ (P << 30 | O >>> 2) ^ (P << 25 | O >>> 7),
                                ve = (C >>> 14 | D << 18) ^ (C >>> 18 | D << 14) ^ (C << 23 | D >>> 9),
                                me = (D >>> 14 | C << 18) ^ (D >>> 18 | C << 14) ^ (D << 23 | C >>> 9),
                                be = o[U],
                                ge = be.high,
                                ye = be.low,
                                we = q + me,
                                _e = W + ve + (we >>> 0 < q >>> 0 ? 1 : 0),
                                Re = (we = we + pe, _e = _e + le + (we >>> 0 < pe >>> 0 ? 1 : 0), we = we + ye, _e = _e + ge + (we >>> 0 < ye >>> 0 ? 1 : 0), we = we + V, _e = _e + G + (we >>> 0 < V >>> 0 ? 1 : 0), ke + xe),
                                Me = he + de + (Re >>> 0 < ke >>> 0 ? 1 : 0);
                            W = F, q = $, F = L, $ = H, L = C, H = D, D = z + we | 0, C = I + _e + (D >>> 0 < z >>> 0 ? 1 : 0) | 0, I = B, z = N, B = A, N = T, A = O, T = P, P = we + Re | 0, O = _e + Me + (P >>> 0 < we >>> 0 ? 1 : 0) | 0
                        }
                        x = r.low = x + P, r.high = d + O + (x >>> 0 < P >>> 0 ? 1 : 0), k = a.low = k + T, a.high = h + A + (k >>> 0 < T >>> 0 ? 1 : 0), m = s.low = m + N, s.high = v + B + (m >>> 0 < N >>> 0 ? 1 : 0), g = c.low = g + z, c.high = b + I + (g >>> 0 < z >>> 0 ? 1 : 0), w = u.low = w + D, u.high = y + C + (w >>> 0 < D >>> 0 ? 1 : 0), R = i.low = R + H, i.high = _ + L + (R >>> 0 < H >>> 0 ? 1 : 0), j = l.low = j + $, l.high = M + F + (j >>> 0 < $ >>> 0 ? 1 : 0), S = p.low = S + q, p.high = E + W + (S >>> 0 < q >>> 0 ? 1 : 0)
                    },
                    _doFinalize: function() {
                        var e = this._data,
                            t = e.words,
                            n = 8 * this._nDataBytes,
                            r = 8 * e.sigBytes;
                        t[r >>> 5] |= 128 << 24 - r % 32, t[30 + (r + 128 >>> 10 << 5)] = Math.floor(n / 4294967296), t[31 + (r + 128 >>> 10 << 5)] = n, e.sigBytes = 4 * t.length, this._process();
                        var a = this._hash.toX32();
                        return a
                    },
                    clone: function() {
                        var e = r.clone.call(this);
                        return e._hash = this._hash.clone(), e
                    },
                    blockSize: 32
                });
                t.SHA512 = r._createHelper(l), t.HmacSHA512 = r._createHmacHelper(l)
            }(), e.SHA512
        }))
    },
    d864: function(e, t, n) {
        var r = n("79aa");
        e.exports = function(e, t, n) {
            if (r(e), void 0 === t) return e;
            switch (n) {
                case 1:
                    return function(n) {
                        return e.call(t, n)
                    };
                case 2:
                    return function(n, r) {
                        return e.call(t, n, r)
                    };
                case 3:
                    return function(n, r, a) {
                        return e.call(t, n, r, a)
                    }
            }
            return function() {
                return e.apply(t, arguments)
            }
        }
    },
    d8d6: function(e, t, n) {
        n("1654"), n("6c1c"), e.exports = n("ccb9").f("iterator")
    },
    d8e2: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.encodeCallback = u, t.invokeCallback = i, n("ac6a"), n("456d"), n("7514");
        var a = r(n("75fc")),
            s = 0,
            c = {};

        function u(e, t) {
            var n = "$callback".concat(s++);
            return c[n] = t ? e : function() {
                delete c[n], e.apply(void 0, arguments)
            }, n
        }

        function i(e, t) {
            var n = c[e];
            n && n.apply(void 0, (0, a.default)(t))
        }

        function o(e) {
            var t = {};
            for (var n in e) {
                var r = e[n];
                t[n] = "function" === typeof r ? u(r) : r
            }
            return t
        }
        self.uni = {
            $emit: function() {
                for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                postMessage({
                    name: "uni.$emit",
                    args: t
                })
            },
            $once: function(e, t) {
                postMessage({
                    name: "uni.$on",
                    args: [e, u(t)]
                })
            },
            $on: function(e, t) {
                postMessage({
                    name: "uni.$on",
                    args: [e, u(t, !0)]
                })
            },
            $off: function(e, t) {
                var n = Object.keys(c).find((function(e) {
                    return c[e] = t
                }));
                n && (delete c[n], postMessage({
                    name: "uni.$off",
                    args: [e, n]
                }))
            },
            request: function(e) {
                postMessage({
                    name: "uni.request",
                    args: [o(e)]
                })
            },
            showActionSheet: function(e) {
                postMessage({
                    name: "uni.showActionSheet",
                    args: [o(e)]
                })
            },
            showModal: function(e) {
                postMessage({
                    name: "uni.showModal",
                    args: [o(e)]
                })
            },
            showToast: function(e) {
                postMessage({
                    name: "uni.showToast",
                    args: [o(e)]
                })
            }
        }
    },
    d8e8: function(e, t) {
        e.exports = function(e) {
            if ("function" != typeof e) throw TypeError(e + " is not a function!");
            return e
        }
    },
    d9f6: function(e, t, n) {
        var r = n("e4ae"),
            a = n("794b"),
            s = n("1bc3"),
            c = Object.defineProperty;
        t.f = n("8e60") ? Object.defineProperty : function(e, t, n) {
            if (r(e), t = s(t, !0), r(n), a) try {
                return c(e, t, n)
            } catch (u) {}
            if ("get" in n || "set" in n) throw TypeError("Accessors not supported!");
            return "value" in n && (e[t] = n.value), e
        }
    },
    db2a: function(e, t, n) {
        "use strict";

        function r(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }
        n.d(t, "a", (function() {
            return r
        }))
    },
    dbdb: function(e, t, n) {
        var r = n("584a"),
            a = n("e53d"),
            s = "__core-js_shared__",
            c = a[s] || (a[s] = {});
        (e.exports = function(e, t) {
            return c[e] || (c[e] = void 0 !== t ? t : {})
        })("versions", []).push({
            version: r.version,
            mode: n("b8e3") ? "pure" : "global",
            copyright: "© 2020 Denis Pushkarev (zloirock.ru)"
        })
    },
    df2f: function(e, t, n) {
        (function(t, r) {
            e.exports = r(n("21bf"))
        })(0, (function(e) {
            return function() {
                var t = e,
                    n = t.lib,
                    r = n.WordArray,
                    a = n.Hasher,
                    s = t.algo,
                    c = [],
                    u = s.SHA1 = a.extend({
                        _doReset: function() {
                            this._hash = new r.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520])
                        },
                        _doProcessBlock: function(e, t) {
                            for (var n = this._hash.words, r = n[0], a = n[1], s = n[2], u = n[3], i = n[4], o = 0; o < 80; o++) {
                                if (o < 16) c[o] = 0 | e[t + o];
                                else {
                                    var f = c[o - 3] ^ c[o - 8] ^ c[o - 14] ^ c[o - 16];
                                    c[o] = f << 1 | f >>> 31
                                }
                                var l = (r << 5 | r >>> 27) + i + c[o];
                                l += o < 20 ? 1518500249 + (a & s | ~a & u) : o < 40 ? 1859775393 + (a ^ s ^ u) : o < 60 ? (a & s | a & u | s & u) - 1894007588 : (a ^ s ^ u) - 899497514, i = u, u = s, s = a << 30 | a >>> 2, a = r, r = l
                            }
                            n[0] = n[0] + r | 0, n[1] = n[1] + a | 0, n[2] = n[2] + s | 0, n[3] = n[3] + u | 0, n[4] = n[4] + i | 0
                        },
                        _doFinalize: function() {
                            var e = this._data,
                                t = e.words,
                                n = 8 * this._nDataBytes,
                                r = 8 * e.sigBytes;
                            return t[r >>> 5] |= 128 << 24 - r % 32, t[14 + (r + 64 >>> 9 << 4)] = Math.floor(n / 4294967296), t[15 + (r + 64 >>> 9 << 4)] = n, e.sigBytes = 4 * t.length, this._process(), this._hash
                        },
                        clone: function() {
                            var e = a.clone.call(this);
                            return e._hash = this._hash.clone(), e
                        }
                    });
                t.SHA1 = a._createHelper(u), t.HmacSHA1 = a._createHmacHelper(u)
            }(), e.SHA1
        }))
    },
    dff7: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("3b2b"), n("6762"), n("2fdb"), n("7514"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = r(n("275e")),
            u = new s.Task({
                title: "挑战黑暗精灵",
                tags: ["event"]
            }, (function() {
                var e = 0;

                function t() {
                    return n.apply(this, arguments)
                }

                function n() {
                    return n = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var t, n, a;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.move("msgd 102", "荫凉之地");
                                case 2:
                                    return e.next = 4, (0, s.getMainDataAsync)();
                                case 4:
                                    if (t = e.sent.map.npc, n = t.find((function(e) {
                                            var n = e.code;
                                            return "npc 1003" === n && t && t.length
                                        })), !n) {
                                        e.next = 21;
                                        break
                                    }
                                    if (a = n.list.find((function(e) {
                                            var t = e.title;
                                            return t.includes("探索黑暗世界")
                                        })), !a) {
                                        e.next = 21;
                                        break
                                    }
                                    return e.next = 11, s.task.sleep();
                                case 11:
                                    return e.next = 13, s.task.send("npc 1003 ".concat(a.code), ["[~1]"]);
                                case 13:
                                    return e.next = 15, s.task.sleep();
                                case 15:
                                    return e.next = 17, s.task.send("1", ["mps]"]);
                                case 17:
                                    return e.next = 19, s.task.sleep();
                                case 19:
                                    return e.next = 21, s.task.send("cl");
                                case 21:
                                    return e.next = 23, r();
                                case 23:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), n.apply(this, arguments)
                }

                function r() {
                    return u.apply(this, arguments)
                }

                function u() {
                    return u = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var t, n, a, c, u, o, f;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.next = 4, s.task.move("hajlsj 105", "黑暗起点");
                                case 4:
                                    return e.next = 6, (0, s.getMainDataAsync)();
                                case 6:
                                    if (t = e.sent.map.npc, n = t.find((function(e) {
                                            var t = e.code,
                                                n = e.list;
                                            return "npc 1000" === t && n && n.length
                                        })), !n) {
                                        e.next = 30;
                                        break
                                    }
                                    return a = n.list[0].code, e.next = 12, s.task.sleep();
                                case 12:
                                    return e.next = 14, s.task.send("npc 1000 ".concat(a), ["[~1]"]);
                                case 14:
                                    if (c = e.sent, u = c.index, 0 !== u) {
                                        e.next = 28;
                                        break
                                    }
                                    return e.next = 19, s.task.sleep();
                                case 19:
                                    return e.next = 21, s.task.send("1", ["mps]", "您得到了"]);
                                case 21:
                                    if (o = e.sent, f = o.index, 0 !== f) {
                                        e.next = 28;
                                        break
                                    }
                                    return e.next = 26, s.task.sleep();
                                case 26:
                                    return e.next = 28, s.task.send("cl");
                                case 28:
                                    return e.next = 30, r();
                                case 30:
                                    return e.next = 32, i();
                                case 32:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), u.apply(this, arguments)
                }

                function i() {
                    return o.apply(this, arguments)
                }

                function o() {
                    return o = (0, a.default)(regeneratorRuntime.mark((function t() {
                        var n, r, a, u, o, f, l, p, d, x, h, k;
                        return regeneratorRuntime.wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, s.task.sleep();
                                case 2:
                                    return t.next = 4, s.task.move("hajlsj 105", "黑暗起点");
                                case 4:
                                    return t.next = 6, (0, s.getMainDataAsync)();
                                case 6:
                                    if (n = t.sent.map.npc, r = n.find((function(e) {
                                            var t = e.code;
                                            return "npc 1001" === t
                                        })), a = r.list, !a.length) {
                                        t.next = 53;
                                        break
                                    }
                                    if (u = a[e], u) {
                                        t.next = 13;
                                        break
                                    }
                                    return t.abrupt("return");
                                case 13:
                                    return o = u.code, t.next = 16, s.task.sleep();
                                case 16:
                                    return f = [{
                                        title: "黑火山口",
                                        code: "hajlsj 104",
                                        npc: "暴龙领主"
                                    }, {
                                        title: "黑月山崖",
                                        code: "hajlsj 103",
                                        npc: "疯鸟领主"
                                    }, {
                                        title: "黑谷之地",
                                        code: "hajlsj 101",
                                        npc: "野猪领主"
                                    }, {
                                        title: "黑暗沼泽",
                                        code: "hajlsj 102",
                                        npc: "蜘蛛领主"
                                    }, {
                                        title: "灰色谷地",
                                        code: "hajlsj 108",
                                        npc: "灰跳猪"
                                    }, {
                                        title: "灰色沼泽",
                                        code: "hajlsj 106",
                                        npc: "灰螳螂"
                                    }, {
                                        title: "灰色山地",
                                        code: "hajlsj 109",
                                        npc: "灰头蛇"
                                    }, {
                                        title: "灰色断崖",
                                        code: "hajlsj 107",
                                        npc: "灰毛鸟"
                                    }], t.next = 19, s.task.send("npc 1001 ".concat(o), ["[~1]", "需要击败", "每天只能做", "明天再来"]);
                                case 19:
                                    if (l = t.sent, p = l.index, d = l.text, 0 !== p) {
                                        t.next = 36;
                                        break
                                    }
                                    return t.next = 25, s.task.sleep();
                                case 25:
                                    return t.next = 27, s.task.send("1", ["mps]", "您得到了"]);
                                case 27:
                                    if (x = t.sent, h = x.index, 0 !== h) {
                                        t.next = 34;
                                        break
                                    }
                                    return t.next = 32, s.task.sleep();
                                case 32:
                                    return t.next = 34, s.task.send("cl");
                                case 34:
                                    t.next = 51;
                                    break;
                                case 36:
                                    if (1 !== p) {
                                        t.next = 50;
                                        break
                                    }
                                    return k = f.find((function(e) {
                                        var t = e.npc;
                                        return d.includes(t)
                                    })), t.next = 40, s.task.sleep();
                                case 40:
                                    return t.next = 42, s.task.move(k.code, k.title);
                                case 42:
                                    return c.default.reset(), c.default.set({
                                        code: "npc 1000 h",
                                        find: new RegExp("需要击败.+?：".concat(10, " \\/ ", 10)),
                                        killMax: 10
                                    }), t.next = 46, s.task.sleep();
                                case 46:
                                    return t.next = 48, c.default.start(!1, !1);
                                case 48:
                                    t.next = 51;
                                    break;
                                case 50:
                                    e++;
                                case 51:
                                    return t.next = 53, i();
                                case 53:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    }))), o.apply(this, arguments)
                }
                return t()
            }));
        t.default = u
    },
    e050: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0;
        var r = n("3f7e"),
            a = new r.Task({
                title: "使用技能挂机卡",
                tags: ["item"]
            }, (function() {
                function e() {
                    return r.task.sleep().then((function() {
                        return (0, r.findItem)("技能挂机魂")
                    })).then((function(t) {
                        var n = t.code;
                        return r.task.sleep().then((function() {
                            return r.task.send("".concat(n, " 0"), ["你的等级已经太高了", "认证完毕"])
                        })).then((function(t) {
                            var n = t.index,
                                r = t.text;
                            if (0 === n) throw new Error(r);
                            return e()
                        }))
                    }))
                }
                return r.task.sleep().then(e)
            }));
        t.default = a
    },
    e11e: function(e, t) {
        e.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")
    },
    e148: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("a481"), n("96cf");
        var a = r(n("3b8d"));
        n("c5f6");
        var s = n("3f7e"),
            c = 99,
            u = new s.Task({
                title: "购买团宝",
                tags: ["item"],
                form: [{
                    title: "购买数量",
                    type: "input",
                    focus: !0,
                    value: ""
                }]
            }, (function() {
                var e = this.form[0].value,
                    t = Number(e) || 1;

                function n() {
                    return r.apply(this, arguments)
                }

                function r() {
                    return r = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var r, a, u, i, o, f, l, p, d, x, h;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.next = 4, (0, s.findItem)("团宝", "1 6kind5", 1);
                                case 4:
                                    return r = e.sent, a = r.code, e.next = 8, s.task.sleep();
                                case 8:
                                    return e.next = 10, s.task.send("".concat(a, " 3"), "<input");
                                case 10:
                                    return u = e.sent, i = u.text, o = (0, s.parseMsg)(i).props.x, f = t > c ? c : t, l = "".concat(f), p = "^&" === o ? ["".concat(o).concat(l)] : [o.replace(/^~/, ""), l], d = p.join(" ").trim(), e.next = 19, s.task.sleep();
                                case 19:
                                    return e.next = 21, s.task.send(d, ["你从神秘商店那里买下了", "元宝数不够"]);
                                case 21:
                                    if (x = e.sent, h = x.index, 0 !== h) {
                                        e.next = 28;
                                        break
                                    }
                                    if (t -= f, !(t > 0)) {
                                        e.next = 28;
                                        break
                                    }
                                    return e.next = 28, n();
                                case 28:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), r.apply(this, arguments)
                }
                return n()
            }));
        t.default = u
    },
    e236: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("c5f6"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = new s.Task({
                title: "兑换雪团",
                tags: ["change"],
                form: [{
                    title: "一品",
                    type: "checkbox",
                    value: !0
                }, {
                    title: "二品",
                    type: "checkbox",
                    value: !0
                }, {
                    title: "三品",
                    type: "checkbox",
                    value: !0
                }, {
                    title: "四品",
                    type: "checkbox",
                    value: !0
                }, {
                    title: "五品",
                    type: "checkbox",
                    value: !0
                }, {
                    title: "神品",
                    type: "checkbox",
                    value: !0
                }, {
                    title: "魂品",
                    type: "checkbox",
                    value: !0
                }, {
                    title: "圣品",
                    type: "checkbox",
                    value: !0
                }, {
                    title: "兑换次数",
                    type: "input",
                    value: "1"
                }]
            }, (0, a.default)(regeneratorRuntime.mark((function e() {
                var t, n, r, a, c, u, i, o, f, l, p, d, x, h, k;
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                            for (t = [], n = 0; n < 8; n++) r = this.form[n], a = r.value, a && t.push(r.title);
                            return c = Number(this.form[8].value) || 1, e.next = 5, s.task.sleep();
                        case 5:
                            return e.next = 7, s.task.move("sdj 101", "北极广场");
                        case 7:
                            return e.next = 9, s.task.sleep();
                        case 9:
                            u = 0;
                        case 10:
                            if (!(u < c)) {
                                e.next = 39;
                                break
                            }
                            i = 0;
                        case 12:
                            if (!(i < t.length)) {
                                e.next = 36;
                                break
                            }
                            return o = "npc 1000", e.next = 16, (0, s.findNpcItem)({
                                code: o
                            }, "兑换奖励");
                        case 16:
                            return f = e.sent, l = f.code, e.next = 20, s.task.sleep();
                        case 20:
                            return e.next = 22, (0, s.findItem)(t[i], "".concat(o, " ").concat(l), -1);
                        case 22:
                            return p = e.sent, d = p.code, e.next = 26, s.task.sleep();
                        case 26:
                            return e.next = 28, s.task.send(d, ["积分不够", "<r>cnt"]);
                        case 28:
                            if (x = e.sent, h = x.index, k = x.text, 0 !== h) {
                                e.next = 33;
                                break
                            }
                            throw new Error(k);
                        case 33:
                            i++, e.next = 12;
                            break;
                        case 36:
                            u++, e.next = 10;
                            break;
                        case 39:
                        case "end":
                            return e.stop()
                    }
                }), e, this)
            }))));
        t.default = c
    },
    e4ae: function(e, t, n) {
        var r = n("f772");
        e.exports = function(e) {
            if (!r(e)) throw TypeError(e + " is not an object!");
            return e
        }
    },
    e53d: function(e, t) {
        var n = e.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
        "number" == typeof __g && (__g = n)
    },
    e578: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("6b54"), n("3b2b"), n("c5f6"), n("4917"), n("28a5"), n("aef6"), n("6762"), n("2fdb"), n("7514"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = r(n("275e")),
            u = r(n("aa72")),
            i = r(n("5b6c")),
            o = r(n("31ee")),
            f = /花生|松仁|栗子|牛肉|火腿|五花肉|龙涎香|桂花|蛋黄|胡萝卜|红枣|莲子/,
            l = new s.Task({
                title: "飘香粽子",
                tags: ["event"],
                form: [{
                    title: "挂机类型",
                    type: "picker",
                    range: ["暗怪", "BOSS", "混合"],
                    value: 2
                }, {
                    title: "爱心处理方式",
                    type: "picker",
                    range: ["奉献爱心", "不处理"],
                    value: 0
                }, {
                    title: "精魄处理方式",
                    type: "picker",
                    range: ["兑换经验", "兑换材料", "存仓库", "不处理"],
                    value: 1
                }]
            }, (function() {
                var e = this.form[0].value,
                    t = this.form[1].value,
                    n = this.form[2].value;

                function r() {
                    return l.apply(this, arguments)
                }

                function l() {
                    return l = (0, a.default)(regeneratorRuntime.mark((function e() {
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    if (t) {
                                        e.next = 3;
                                        break
                                    }
                                    return e.next = 3, u.default.start(!1);
                                case 3:
                                    if (2 !== n) {
                                        e.next = 10;
                                        break
                                    }
                                    return o.default.reset(), o.default.set({
                                        target: 0,
                                        items: ["燃烧的精魄"]
                                    }), e.next = 8, o.default.start(!1, !1);
                                case 8:
                                    e.next = 14;
                                    break;
                                case 10:
                                    if (3 === n) {
                                        e.next = 14;
                                        break
                                    }
                                    return i.default.set({
                                        target: n
                                    }), e.next = 14, i.default.start(!1);
                                case 14:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), l.apply(this, arguments)
                }

                function p() {
                    return d.apply(this, arguments)
                }

                function d() {
                    return d = (0, a.default)(regeneratorRuntime.mark((function t() {
                        var n, a, u, i, o, l, d, x, h, k, v, m, b, g, y, w, _, R, M, j, E, S, O, P, A;
                        return regeneratorRuntime.wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, s.task.sleep();
                                case 2:
                                    return t.next = 4, s.task.move("msgd 104", "寂寥之地");
                                case 4:
                                    return t.next = 6, (0, s.getMainDataAsync)();
                                case 6:
                                    if (n = t.sent.map.npc, a = n.find((function(e) {
                                            var t = e.code;
                                            return "npc 1003" === t
                                        })), u = a.list, i = u.find((function(e) {
                                            var t = e.title;
                                            return t.includes("飘香粽子")
                                        })), i) {
                                        t.next = 11;
                                        break
                                    }
                                    throw new Error("非活动时间");
                                case 11:
                                    return t.next = 13, s.task.sleep();
                                case 13:
                                    return t.next = 15, s.task.send("npc 1003 ".concat(i.code), ["[~1]", "需要"]);
                                case 15:
                                    if (l = t.sent, d = l.index, x = l.text, 0 !== d) {
                                        t.next = 30;
                                        break
                                    }
                                    return t.next = 21, s.task.sleep();
                                case 21:
                                    return t.next = 23, s.task.send("1", ["[~0 mps]", "得到了", "需要"]);
                                case 23:
                                    h = t.sent, k = h.index, v = h.text, o = k, x = v, t.next = 31;
                                    break;
                                case 30:
                                    o = 2;
                                case 31:
                                    if (0 !== o) {
                                        t.next = 37;
                                        break
                                    }
                                    return t.next = 34, s.task.sleep();
                                case 34:
                                    return t.next = 36, s.task.send("cl", "cnt");
                                case 36:
                                    return t.abrupt("return", p());
                                case 37:
                                    if (1 !== o) {
                                        t.next = 43;
                                        break
                                    }
                                    return t.next = 40, p();
                                case 40:
                                    return t.abrupt("return", t.sent);
                                case 43:
                                    if (2 !== o) {
                                        t.next = 64;
                                        break
                                    }
                                    return t.next = 46, s.task.sleep();
                                case 46:
                                    return t.next = 48, r();
                                case 48:
                                    return t.next = 50, s.task.sleep();
                                case 50:
                                    return t.next = 52, s.task.send("9 1", "查看任务");
                                case 52:
                                    return b = t.sent, g = b.text, y = (0, s.parseMsg)(g).data.list, w = y.find((function(e) {
                                        var t = e.title;
                                        return (0, s.clearText)(t).endsWith("飘香粽子")
                                    })), t.next = 58, s.task.sleep();
                                case 58:
                                    return t.next = 60, s.task.send("".concat(w.code, " m mps"), "选择地图目标");
                                case 60:
                                    _ = t.sent, m = _.text, t.next = 65;
                                    break;
                                case 64:
                                    m = x;
                                case 65:
                                    return t.next = 67, s.task.sleep();
                                case 67:
                                    return R = x.split(s.chars[""]).filter((function(e) {
                                        return /(\d+) \//.test(e)
                                    })).map((function(e) {
                                        return {
                                            title: e.match(f)[0],
                                            num: Number(e.match(/(\d+) \//)[1])
                                        }
                                    })), M = R.find((function(e) {
                                        var t = e.num;
                                        return t < 20
                                    })), j = (0, s.parseMsg)(m).data.list, E = j.find((function(e) {
                                        var t = e.title;
                                        return t.includes(M.title)
                                    })), t.next = 73, s.task.send(E.code, ["<mp>"]);
                                case 73:
                                    return S = t.sent, O = S.text, P = O.split("|"), P = P.slice(P.length - 2), A = O.match(new RegExp("00".concat(Number(P[0]).toString(16).toUpperCase(), "(.+?)\\$")))[1], t.next = 80, s.task.sleep();
                                case 80:
                                    return t.next = 82, s.task.move("".concat(P[1], " ").concat(P[0]), A);
                                case 82:
                                    return t.next = 84, s.task.sleep();
                                case 84:
                                    return console.log(e, 2 === e ? ["kill npc", "kill"] : e ? "kill npc" : "kill"), c.default.reset(), c.default.set({
                                        code: 2 === e ? ["npc 1000 h", "kill"] : e ? "kill npc" : "kill",
                                        find: new RegExp(M.title),
                                        findMax: 20 - M.num
                                    }), t.next = 89, c.default.start(!1, !1);
                                case 89:
                                    return t.next = 91, p();
                                case 91:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    }))), d.apply(this, arguments)
                }
                return p()
            }));
        t.default = l
    },
    e605: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("6762"), n("2fdb"), n("c5f6"), n("7514"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = new s.Task({
                title: "佣兵修炼(灵魂进化)",
                tags: ["event"],
                form: [{
                    title: "佣兵",
                    type: "input",
                    placeholder: "名称或序号",
                    focus: !0,
                    value: ""
                }]
            }, (function() {
                var e = this.form[0].value || "x";

                function t(e) {
                    return n.apply(this, arguments)
                }

                function n() {
                    return n = (0, a.default)(regeneratorRuntime.mark((function t(n) {
                        var r, a, c, u;
                        return regeneratorRuntime.wrap((function(t) {
                            while (1) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, s.task.sleep();
                                case 2:
                                    return t.next = 4, s.task.send("vs_cmd vs_call", "<menu");
                                case 4:
                                    return r = t.sent, a = r.text, c = (0, s.parseMsg)(a).data.list, u = c.find((function(t, n) {
                                        var r = t.title;
                                        return /^\d+$/.test(e) && Number(e) < 30 ? Number(e) === n + 1 : r.includes(e)
                                    })), t.next = 10, s.task.sleep();
                                case 10:
                                    return t.next = 12, s.task.send("".concat(u.code, " ").concat(n), "你成功");
                                case 12:
                                    return t.next = 14, s.task.sleep();
                                case 14:
                                    return t.next = 16, s.task.cancel();
                                case 16:
                                case "end":
                                    return t.stop()
                            }
                        }), t)
                    }))), n.apply(this, arguments)
                }

                function r(e) {
                    return c.apply(this, arguments)
                }

                function c() {
                    return c = (0, a.default)(regeneratorRuntime.mark((function e(t) {
                        var n, a;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.next = 4, s.task.send(t, ["[sure_ce]", "灵魂进化成功", "灵魂粉末不足"]);
                                case 4:
                                    if (n = e.sent, a = n.index, 0 !== a) {
                                        e.next = 9;
                                        break
                                    }
                                    return e.next = 9, r("sure_ce");
                                case 9:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), c.apply(this, arguments)
                }

                function u() {
                    return i.apply(this, arguments)
                }

                function i() {
                    return i = (0, a.default)(regeneratorRuntime.mark((function n() {
                        var a, c, i, o, f, l, p, d;
                        return regeneratorRuntime.wrap((function(n) {
                            while (1) switch (n.prev = n.next) {
                                case 0:
                                    return n.next = 2, s.task.sleep();
                                case 2:
                                    return n.next = 4, s.task.send("vs_cmd vs_mend", "<menu");
                                case 4:
                                    return n.next = 6, s.task.sleep();
                                case 6:
                                    return n.next = 8, s.task.send("t:l mend_do", ["<menu", "你当前没有"]);
                                case 8:
                                    if (a = n.sent, c = a.text, i = a.index, 1 !== i) {
                                        n.next = 13;
                                        break
                                    }
                                    throw new Error(c);
                                case 13:
                                    if (o = (0, s.parseMsg)(c).data.list, f = o.find((function(t, n) {
                                            var r = t.title;
                                            return /^\d+$/.test(e) && Number(e) < 30 ? Number(e) === n + 1 : r.includes(e)
                                        })), f) {
                                        n.next = 21;
                                        break
                                    }
                                    return n.next = 18, s.task.cancel();
                                case 18:
                                    throw l = "目标未找到", s.task.log(l), new Error(l);
                                case 21:
                                    return n.next = 23, s.task.sleep();
                                case 23:
                                    return n.next = 25, s.task.send(f.code, ["<menu", "请先收回"]);
                                case 25:
                                    if (p = n.sent, d = p.index, 1 !== d) {
                                        n.next = 35;
                                        break
                                    }
                                    return n.next = 30, t("in");
                                case 30:
                                    return n.next = 32, u();
                                case 32:
                                    return n.next = 34, t("out");
                                case 34:
                                    return n.abrupt("return");
                                case 35:
                                    return n.next = 37, s.task.sleep();
                                case 37:
                                    return n.next = 39, r("vs_soul_grow");
                                case 39:
                                case "end":
                                    return n.stop()
                            }
                        }), n)
                    }))), i.apply(this, arguments)
                }
                return u()
            }));
        t.default = c
    },
    e61b: function(e, t, n) {
        (function(t, r, a) {
            e.exports = r(n("21bf"), n("3252"))
        })(0, (function(e) {
            return function(t) {
                var n = e,
                    r = n.lib,
                    a = r.WordArray,
                    s = r.Hasher,
                    c = n.x64,
                    u = c.Word,
                    i = n.algo,
                    o = [],
                    f = [],
                    l = [];
                (function() {
                    for (var e = 1, t = 0, n = 0; n < 24; n++) {
                        o[e + 5 * t] = (n + 1) * (n + 2) / 2 % 64;
                        var r = t % 5,
                            a = (2 * e + 3 * t) % 5;
                        e = r, t = a
                    }
                    for (e = 0; e < 5; e++)
                        for (t = 0; t < 5; t++) f[e + 5 * t] = t + (2 * e + 3 * t) % 5 * 5;
                    for (var s = 1, c = 0; c < 24; c++) {
                        for (var i = 0, p = 0, d = 0; d < 7; d++) {
                            if (1 & s) {
                                var x = (1 << d) - 1;
                                x < 32 ? p ^= 1 << x : i ^= 1 << x - 32
                            }
                            128 & s ? s = s << 1 ^ 113 : s <<= 1
                        }
                        l[c] = u.create(i, p)
                    }
                })();
                var p = [];
                (function() {
                    for (var e = 0; e < 25; e++) p[e] = u.create()
                })();
                var d = i.SHA3 = s.extend({
                    cfg: s.cfg.extend({
                        outputLength: 512
                    }),
                    _doReset: function() {
                        for (var e = this._state = [], t = 0; t < 25; t++) e[t] = new u.init;
                        this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32
                    },
                    _doProcessBlock: function(e, t) {
                        for (var n = this._state, r = this.blockSize / 2, a = 0; a < r; a++) {
                            var s = e[t + 2 * a],
                                c = e[t + 2 * a + 1];
                            s = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8), c = 16711935 & (c << 8 | c >>> 24) | 4278255360 & (c << 24 | c >>> 8);
                            var u = n[a];
                            u.high ^= c, u.low ^= s
                        }
                        for (var i = 0; i < 24; i++) {
                            for (var d = 0; d < 5; d++) {
                                for (var x = 0, h = 0, k = 0; k < 5; k++) {
                                    u = n[d + 5 * k];
                                    x ^= u.high, h ^= u.low
                                }
                                var v = p[d];
                                v.high = x, v.low = h
                            }
                            for (d = 0; d < 5; d++) {
                                var m = p[(d + 4) % 5],
                                    b = p[(d + 1) % 5],
                                    g = b.high,
                                    y = b.low;
                                for (x = m.high ^ (g << 1 | y >>> 31), h = m.low ^ (y << 1 | g >>> 31), k = 0; k < 5; k++) {
                                    u = n[d + 5 * k];
                                    u.high ^= x, u.low ^= h
                                }
                            }
                            for (var w = 1; w < 25; w++) {
                                u = n[w];
                                var _ = u.high,
                                    R = u.low,
                                    M = o[w];
                                M < 32 ? (x = _ << M | R >>> 32 - M, h = R << M | _ >>> 32 - M) : (x = R << M - 32 | _ >>> 64 - M, h = _ << M - 32 | R >>> 64 - M);
                                var j = p[f[w]];
                                j.high = x, j.low = h
                            }
                            var E = p[0],
                                S = n[0];
                            E.high = S.high, E.low = S.low;
                            for (d = 0; d < 5; d++)
                                for (k = 0; k < 5; k++) {
                                    w = d + 5 * k, u = n[w];
                                    var O = p[w],
                                        P = p[(d + 1) % 5 + 5 * k],
                                        A = p[(d + 2) % 5 + 5 * k];
                                    u.high = O.high ^ ~P.high & A.high, u.low = O.low ^ ~P.low & A.low
                                }
                            u = n[0];
                            var T = l[i];
                            u.high ^= T.high, u.low ^= T.low
                        }
                    },
                    _doFinalize: function() {
                        var e = this._data,
                            n = e.words,
                            r = (this._nDataBytes, 8 * e.sigBytes),
                            s = 32 * this.blockSize;
                        n[r >>> 5] |= 1 << 24 - r % 32, n[(t.ceil((r + 1) / s) * s >>> 5) - 1] |= 128, e.sigBytes = 4 * n.length, this._process();
                        for (var c = this._state, u = this.cfg.outputLength / 8, i = u / 8, o = [], f = 0; f < i; f++) {
                            var l = c[f],
                                p = l.high,
                                d = l.low;
                            p = 16711935 & (p << 8 | p >>> 24) | 4278255360 & (p << 24 | p >>> 8), d = 16711935 & (d << 8 | d >>> 24) | 4278255360 & (d << 24 | d >>> 8), o.push(d), o.push(p)
                        }
                        return new a.init(o, u)
                    },
                    clone: function() {
                        for (var e = s.clone.call(this), t = e._state = this._state.slice(0), n = 0; n < 25; n++) t[n] = t[n].clone();
                        return e
                    }
                });
                n.SHA3 = s._createHelper(d), n.HmacSHA3 = s._createHmacHelper(d)
            }(Math), e.SHA3
        }))
    },
    e630: function(e, t, n) {
        "use strict";
        n.d(t, "a", (function() {
            return c
        }));
        var r = n("774e"),
            a = n.n(r),
            s = n("db2a");

        function c(e, t) {
            if (e) {
                if ("string" === typeof e) return Object(s["a"])(e, t);
                var n = Object.prototype.toString.call(e).slice(8, -1);
                return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? a()(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Object(s["a"])(e, t) : void 0
            }
        }
    },
    e6f3: function(e, t, n) {
        var r = n("07e3"),
            a = n("36c3"),
            s = n("5b4e")(!1),
            c = n("5559")("IE_PROTO");
        e.exports = function(e, t) {
            var n, u = a(e),
                i = 0,
                o = [];
            for (n in u) n != c && r(u, n) && o.push(n);
            while (t.length > i) r(u, n = t[i++]) && (~s(o, n) || o.push(n));
            return o
        }
    },
    e845: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = [{
                title: "荷叶粽子",
                code: "~q2"
            }, {
                title: "月亮石",
                code: "~q5"
            }, {
                title: "太阳石",
                code: "~q8"
            }, {
                title: "虎.字牌",
                code: "~q9"
            }, {
                title: "打孔器",
                code: "~q12"
            }, {
                title: "锻皇礼券",
                code: "~q15"
            }, {
                title: "显影卷轴",
                code: "~q23"
            }],
            u = new s.Task({
                title: "打包物品（100）",
                tags: ["item"],
                form: [{
                    title: "物品名称",
                    type: "picker",
                    range: c,
                    value: 0
                }]
            }, (function(e) {
                var t = this.form[0].value,
                    n = c["number" === typeof e ? e : t];

                function r() {
                    return u.apply(this, arguments)
                }

                function u() {
                    return u = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var t, a;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.next = 4, s.task.send("npc 1002 ".concat(n.code), ["[~1]"]);
                                case 4:
                                    return e.next = 6, s.task.sleep();
                                case 6:
                                    return e.next = 8, s.task.send("1", ["m mps]", "你得到", "需要"]);
                                case 8:
                                    if (t = e.sent, a = t.index, 0 !== a) {
                                        e.next = 17;
                                        break
                                    }
                                    return e.next = 13, s.task.sleep();
                                case 13:
                                    return e.next = 15, s.task.send("cl", "cnt");
                                case 15:
                                    e.next = 19;
                                    break;
                                case 17:
                                    if (2 !== a) {
                                        e.next = 19;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 19:
                                    return e.next = 21, r();
                                case 21:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), u.apply(this, arguments)
                }
                return s.task.move("sgz 104", "闪光镇北").then(r)
            }));
        t.default = u
    },
    e853: function(e, t, n) {
        var r = n("d3f4"),
            a = n("1169"),
            s = n("2b4c")("species");
        e.exports = function(e) {
            var t;
            return a(e) && (t = e.constructor, "function" != typeof t || t !== Array && !a(t.prototype) || (t = void 0), r(t) && (t = t[s], null === t && (t = void 0))), void 0 === t ? Array : t
        }
    },
    ea3b: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("6762"), n("2fdb"), n("96cf");
        var a = r(n("3b8d"));
        n("c5f6");
        var s = n("3f7e"),
            c = new s.Task({
                title: "家族功臣兑换",
                tags: ["change"],
                form: [{
                    title: "挂机地点",
                    type: "picker",
                    range: ["神兽召唤卷轴", "魂宠召唤卷轴", "魂品.宠物进化书", "魂品.宠物经验书"],
                    value: 2
                }, {
                    title: "兑换次数",
                    type: "input",
                    placeholder: "",
                    value: "9999"
                }]
            }, (function() {
                var e = this.form[0],
                    t = e.range[e.value],
                    n = this.form[1].value,
                    r = Number(n) || 9999,
                    c = 0;

                function u() {
                    return i.apply(this, arguments)
                }

                function i() {
                    return i = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var n, a, i, o, f, l, p, d, x, h, k, v, m, b;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, (0, s.getMainDataAsync)();
                                case 2:
                                    n = e.sent.map.npc, i = 0;
                                case 4:
                                    if (!(i < n.length)) {
                                        e.next = 20;
                                        break
                                    }
                                    o = n[i], f = o.list, l = o.code, p = 0;
                                case 7:
                                    if (!(p < f.length)) {
                                        e.next = 15;
                                        break
                                    }
                                    if (d = f[p], x = d.title, h = d.code, !x.includes(t)) {
                                        e.next = 12;
                                        break
                                    }
                                    return a = "".concat(l, " ").concat(h), e.abrupt("break", 15);
                                case 12:
                                    p++, e.next = 7;
                                    break;
                                case 15:
                                    if (!a) {
                                        e.next = 17;
                                        break
                                    }
                                    return e.abrupt("break", 20);
                                case 17:
                                    i++, e.next = 4;
                                    break;
                                case 20:
                                    return e.next = 22, s.task.sleep();
                                case 22:
                                    return e.next = 24, s.task.send(a, ["<menu"]);
                                case 24:
                                    return e.next = 26, s.task.sleep();
                                case 26:
                                    return e.next = 28, s.task.send("change", ["[yes]", "你现在还不是", "不能享有"]);
                                case 28:
                                    if (k = e.sent, v = k.index, 0 !== v) {
                                        e.next = 41;
                                        break
                                    }
                                    return e.next = 33, s.task.send("yes", ["成功", "兑换条件不足"]);
                                case 33:
                                    if (m = e.sent, b = m.index, 0 !== b) {
                                        e.next = 41;
                                        break
                                    }
                                    if (c++, s.task.log("兑换次数：".concat(c)), !(c < r)) {
                                        e.next = 41;
                                        break
                                    }
                                    return e.next = 41, u();
                                case 41:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), i.apply(this, arguments)
                }
                return s.task.move("sgpy 130", "家族会馆").then(u)
            }));
        t.default = c
    },
    ebd6: function(e, t, n) {
        var r = n("cb7c"),
            a = n("d8e8"),
            s = n("2b4c")("species");
        e.exports = function(e, t) {
            var n, c = r(e).constructor;
            return void 0 === c || void 0 == (n = r(c)[s]) ? t : a(n)
        }
    },
    ebfd: function(e, t, n) {
        var r = n("62a0")("meta"),
            a = n("f772"),
            s = n("07e3"),
            c = n("d9f6").f,
            u = 0,
            i = Object.isExtensible || function() {
                return !0
            },
            o = !n("294c")((function() {
                return i(Object.preventExtensions({}))
            })),
            f = function(e) {
                c(e, r, {
                    value: {
                        i: "O" + ++u,
                        w: {}
                    }
                })
            },
            l = function(e, t) {
                if (!a(e)) return "symbol" == typeof e ? e : ("string" == typeof e ? "S" : "P") + e;
                if (!s(e, r)) {
                    if (!i(e)) return "F";
                    if (!t) return "E";
                    f(e)
                }
                return e[r].i
            },
            p = function(e, t) {
                if (!s(e, r)) {
                    if (!i(e)) return !0;
                    if (!t) return !1;
                    f(e)
                }
                return e[r].w
            },
            d = function(e) {
                return o && x.NEED && i(e) && !s(e, r) && f(e), e
            },
            x = e.exports = {
                KEY: r,
                NEED: !1,
                fastKey: l,
                getWeak: p,
                onFreeze: d
            }
    },
    ec00: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, t.search = c, n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e");

        function c(e) {
            return u.apply(this, arguments)
        }

        function u() {
            return u = (0, a.default)(regeneratorRuntime.mark((function e(t) {
                var n, r, c, u, i, o, f, l, p, d, x, h, k;
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                            return c = function() {
                                return c = (0, a.default)(regeneratorRuntime.mark((function e(t, a) {
                                    var c, u, i, o, f, l, p, d, x;
                                    return regeneratorRuntime.wrap((function(e) {
                                        while (1) switch (e.prev = e.next) {
                                            case 0:
                                                return e.next = 2, (0, s.getMainDataAsync)();
                                            case 2:
                                                c = e.sent.map.npc, u = 0;
                                            case 4:
                                                if (!(u < c.length)) {
                                                    e.next = 33;
                                                    break
                                                }
                                                i = c[u], o = i.list, f = 0;
                                            case 8:
                                                if (!(f < o.length)) {
                                                    e.next = 30;
                                                    break
                                                }
                                                if (l = o[f], p = l.title, d = l.code, x = (0, s.clearText)(p), !/^冒险.*?(宝箱|寻宝)$/.test(x)) {
                                                    e.next = 26;
                                                    break
                                                }
                                                return e.next = 15, s.task.sleep();
                                            case 15:
                                                return e.next = 17, s.task.send("".concat(i.code, " ").concat(d), "[~1]");
                                            case 17:
                                                return e.next = 19, s.task.sleep();
                                            case 19:
                                                return e.next = 21, s.task.send("1", "个宝箱");
                                            case 21:
                                                return e.next = 23, r();
                                            case 23:
                                                return e.abrupt("return", e.sent);
                                            case 26:
                                                /^冒险.*?(之[一二三四]|[(（][一二三四][）)]|\(\d\/\d\))$/.test(x) && n.push([x, t, a]);
                                            case 27:
                                                f++, e.next = 8;
                                                break;
                                            case 30:
                                                u++, e.next = 4;
                                                break;
                                            case 33:
                                            case "end":
                                                return e.stop()
                                        }
                                    }), e)
                                }))), c.apply(this, arguments)
                            }, r = function(e, t) {
                                return c.apply(this, arguments)
                            }, n = [], e.next = 5, s.task.sleep();
                        case 5:
                            return e.next = 7, s.task.send(t, "<mp>");
                        case 7:
                            u = e.sent, i = u.text, o = (0, s.parseMsg)(i).data, f = o.code, l = o.list, p = 0;
                        case 11:
                            if (!(p < l.length)) {
                                e.next = 33;
                                break
                            }
                            return d = l[p], x = !1, h = "".concat(f, " ").concat(d.code), k = d.title, e.prev = 16, e.next = 19, s.task.sleep();
                        case 19:
                            return e.next = 21, s.task.move(h, k);
                        case 21:
                            x = !0, e.next = 27;
                            break;
                        case 24:
                            e.prev = 24, e.t0 = e["catch"](16), console.error(e.t0);
                        case 27:
                            if (!x) {
                                e.next = 30;
                                break
                            }
                            return e.next = 30, r(h, k);
                        case 30:
                            p++, e.next = 11;
                            break;
                        case 33:
                            return console.log(n), e.abrupt("return", n);
                        case 35:
                        case "end":
                            return e.stop()
                    }
                }), e, null, [
                    [16, 24]
                ])
            }))), u.apply(this, arguments)
        }
        var i = new s.Task({
            title: "搜索区域宝箱",
            tags: ["other"]
        }, (0, a.default)(regeneratorRuntime.mark((function e() {
            return regeneratorRuntime.wrap((function(e) {
                while (1) switch (e.prev = e.next) {
                    case 0:
                        return e.next = 2, c("9 2 mps");
                    case 2:
                    case "end":
                        return e.stop()
                }
            }), e)
        }))));
        t.default = i
    },
    f049: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = new s.Task({
                title: "家族修炼(老区)",
                tags: ["event"],
                form: [{
                    title: "修炼类型",
                    type: "picker",
                    range: ["灵能术", "防护术", "巨力术", "厚皮术"],
                    value: 0
                }]
            }, (function() {
                var e = this.form[0].value;

                function t() {
                    return n.apply(this, arguments)
                }

                function n() {
                    return n = (0, a.default)(regeneratorRuntime.mark((function n() {
                        var r, a;
                        return regeneratorRuntime.wrap((function(n) {
                            while (1) switch (n.prev = n.next) {
                                case 0:
                                    return n.next = 2, s.task.sleep();
                                case 2:
                                    return n.next = 4, s.task.send("fmcmds mgm", "<menu");
                                case 4:
                                    return n.next = 6, s.task.sleep();
                                case 6:
                                    return n.next = 8, s.task.send("1", "<menu");
                                case 8:
                                    return n.next = 10, s.task.sleep();
                                case 10:
                                    return n.next = 12, s.task.send("".concat(e + 1), "<menu");
                                case 12:
                                    return n.next = 14, s.task.sleep();
                                case 14:
                                    return n.next = 16, s.task.send("1", ["[yes]", "内政值不足"]);
                                case 16:
                                    if (r = n.sent, a = r.index, 0 !== a) {
                                        n.next = 25;
                                        break
                                    }
                                    return n.next = 21, s.task.sleep();
                                case 21:
                                    return n.next = 23, s.task.send("yes", "成功修炼");
                                case 23:
                                    return n.next = 25, t();
                                case 25:
                                case "end":
                                    return n.stop()
                            }
                        }), n)
                    }))), n.apply(this, arguments)
                }
                return t()
            }));
        t.default = c
    },
    f161: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.chars = void 0, t.clearText = M, t.log = void 0, t.parseMsg = w, t.removeColor = R, t.removeImgs = _, t.request = j, t.send = void 0, t.showActionSheet = S, t.toArray = E, n("6b54"), n("c5f6"), n("ac6a");
        var a = r(n("75fc"));
        n("6762"), n("2fdb"), n("a481"), n("f559"), n("4917");
        var s = r(n("768b"));
        n("28a5");
        var c = function(e) {
            uni.$emit("send", e)
        };
        t.send = c;
        var u = function(e) {
            uni.$emit("log", e)
        };
        t.log = u;
        var i = {
            "": "",
            "": "",
            "": "<br/>",
            "": "<hr/>"
        };

        function o(e) {
            var t = e.split(/[｜|]/),
                n = t[0],
                r = t.slice(1).map((function(e) {
                    var t = e.match(/\[(\d+)\](.+)/),
                        n = (0, s.default)(t, 3),
                        r = (n[0], n[1]),
                        a = n[2];
                    return {
                        id: r,
                        title: a
                    }
                }));
            return {
                title: n,
                list: r
            }
        }

        function f(e, t) {
            var n = t.c,
                r = void 0 === n ? "" : n,
                a = t.cc,
                s = void 0 === a ? "" : a,
                c = p(r || s),
                u = "",
                o = e.split(i[""]);
            return 2 === o.length && (u = o[0], e = o[1]), {
                title: u,
                text: e,
                list: c
            }
        }

        function l(e, t, n, r) {
            var a = e.split("]"),
                c = (0, s.default)(a, 2),
                u = c[0],
                o = c[1];
            u = t ? "".concat(t).concat(t.startsWith("~") || r ? "" : " ").concat(u) : u;
            var f = {
                title: o,
                code: u
            };
            if (n) {
                var l = o.split(i[""]),
                    p = (0, s.default)(l, 2),
                    d = p[0],
                    x = p[1],
                    h = void 0 === x ? "" : x;
                f.title = d.trim(), f.list = h.split("")
            }
            return f
        }

        function p() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
            if (!e) return [];
            var t = e.replace(/\[/, "").split("|[");
            return t.map((function(e) {
                return l(e)
            }))
        }
        t.chars = i;
        var d = {
                a: "{x26}快速查看",
                b: "{nb}发送私聊信件",
                c: "{x6}发悄悄话",
                d: "{m5}加入队伍",
                e: "{m2}战斗切磋 (需对方同意)",
                f: "{flw}添加口袋好友",
                g: "{flw}添加幸运好友",
                q: "{box}3查看摆摊的商品a",
                p: "{m2}强行击杀"
            },
            x = {
                j: "{x7}购买物品",
                k: "{box}卖出物品"
            },
            h = {
                a: "{x26}查看",
                l: "{box}给人",
                m: "{x25}丢弃"
            },
            k = {
                z: "无效操作",
                0: "无效操作",
                1: "无效操作"
            };

        function v(e, t) {
            var n = t.x,
                r = void 0 === n ? "" : n,
                s = t.c,
                c = void 0 === s ? "" : s,
                u = t.g,
                o = void 0 === u ? "" : u,
                f = e.split("|["),
                v = f[0],
                m = f.slice(1).map((function(e) {
                    var t, n = e.split(";["),
                        s = l(n[0], r, !0, v.includes("家族物资") && /\dg/.test(r));
                    (s.list = s.list.map((function(e) {
                        return {
                            code: e,
                            title: "a" === o ? d[e] || x[e] || h[e] : h[e] || d[e] || x[e] || k[e] || e
                        }
                    })).filter((function(e) {
                        var t = e.title;
                        return "无效操作" !== t
                    })), !c || /[上下]一页/.test(s.title) || "宝库看守者" === v || v.includes("查看任务") && !/\d+/.test(s.code)) || (t = s.list).push.apply(t, (0, a.default)(p(c)));
                    return n.slice(1).forEach((function(e) {
                        s.list.push(l(e, r))
                    })), s
                })),
                b = v.split(i[""]);
            return 2 === b.length ? (v = b[0], e = b[1]) : e = "", {
                title: v,
                text: e,
                list: m
            }
        }

        function m(e, t) {
            var n = t.cells;
            n = n.split("*");
            var r = Number(n[0]),
                a = Number(n[1]),
                s = e.split("|"),
                c = s.shift(),
                u = [];
            s.forEach((function(e, t) {
                var n = u[Math.floor(t / a)] = u[Math.floor(t / a)] || [];
                n.push(e)
            }));
            var i = u.shift();
            return {
                title: c,
                row: r,
                column: a,
                text: i.join("｜").replace(/\/$/, ""),
                list: u.map((function(e) {
                    var t = e.join("｜"),
                        n = t.replace(/^\[/, "").replace(/\/$/, "").split("]");
                    return {
                        code: n[0],
                        title: n[1]
                    }
                }))
            }
        }

        function b(e, t) {
            var n = t.x,
                r = void 0 === n ? "" : n,
                a = t.p,
                c = e.split(/[｜|]/),
                u = c[0],
                o = c.slice(1).map((function(e) {
                    var t, n = e.match(/\[(\d+)\](.+)/),
                        r = (0, s.default)(n, 3),
                        a = (r[0], r[1]),
                        c = r[2],
                        u = c.split("$");
                    return 2 === u.length ? (c = u[0], t = u[1]) : t = "", {
                        value: Number(a),
                        title: c,
                        text: t
                    }
                })),
                f = u.split(i[""]);
            return 2 === f.length ? (u = f[0], e = f[1]) : e = "", {
                title: u,
                text: e,
                list: o,
                number: Number(a),
                code: r
            }
        }

        function g(e) {
            var t = e.split(":"),
                n = (0, s.default)(t, 2),
                r = n[0],
                a = n[1],
                c = {
                    method: r
                };
            return a && (c[r] = w(e.match(/\S+?:(.+)/)[1]).data), c
        }

        function y(e) {
            for (var t, n, r, a, c, u, i = e.split("|"), o = i[0].split(""), f = (0, s.default)(o, 2), l = f[0], p = f[1], d = i[1].split(","), x = [], h = 0, k = i[2]; h < k.length; h += 4) x.push({
                from: {
                    x: Number("0x".concat(k[h + 0])),
                    y: Number("0x".concat(k[h + 1]))
                },
                to: {
                    x: Number("0x".concat(k[h + 2])),
                    y: Number("0x".concat(k[h + 3]))
                }
            });
            l ? (t = i[3].split("&"), a = i[4].replace("", ""), u = i[5], l = i[6]) : (l = i[5] || i[6], n = i[7], t = i[8].split("&"));
            var v = Number("0x".concat(d.shift())).toString(),
                m = {
                    width: 0,
                    height: 0,
                    x: 999,
                    y: 999
                };
            return d = d.map((function(e, i) {
                var o = Number("0x".concat(e[0])),
                    f = Number("0x".concat(e[1]));
                m.width = Math.max(m.width, o + 1), m.height = Math.max(m.height, f + 1), m.x = Math.min(m.x, o), m.y = Math.min(m.y, f);
                var l = Number("0x".concat(e.substring(4, 8))).toString(),
                    p = e.substring(8, e.length).split("$"),
                    d = (0, s.default)(p, 2),
                    x = d[0],
                    h = d[1],
                    k = {
                        "龙牙集市": "龙牙市集",
                        "通往平原": "通往闪光平原"
                    },
                    v = {
                        code: l,
                        title: k[x] || x.trim(),
                        text: h,
                        position: {
                            x: o,
                            y: f
                        },
                        img: t[i],
                        num: n ? Number("".concat(n[2 * i]).concat(n[2 * i + 1])) : NaN
                    };
                return r = a === l ? v : r, c = u === l ? v : c, v
            })), {
                title: p,
                code: l,
                length: v,
                list: d,
                lines: x,
                at: r,
                target: c,
                size: m
            }
        }

        function w(e) {
            e = e.replace(/\(c:.+?<login>.+?取消\)/, ""), e = e.replace(/\(c:.+?进入官网.+?返回\)/, "");
            var t = /^<([a-z0-9*]+)(.*?)>(.*)/,
                n = e.match(t) || [],
                r = n[2] || "",
                a = {};
            if (r) {
                var c = r.match(/\(.*?\)/g);
                c && c.forEach((function(e) {
                    e = e.replace(/^\(|\)$/g, "");
                    var t = e.split(":"),
                        n = (0, s.default)(t, 2),
                        r = n[0],
                        c = n[1];
                    a[r] = c ? c.trim() : c
                }))
            }
            var u, i = n[1] || "",
                l = n[1] ? n[3] || "" : e;
            switch (i) {
                case "sell":
                    u = o(l);
                    break;
                case "pmg":
                    u = f(l, a);
                    break;
                case "menu":
                    u = v(l, a);
                    break;
                case "table":
                    u = m(l, a);
                    break;
                case "addp":
                    u = b(l, a);
                    break;
                case "pilot":
                    u = g(l);
                    break;
                case "mp":
                    u = y(l, a);
                    break
            }
            return {
                type: i,
                other: r,
                props: a,
                text: l,
                data: u
            }
        }

        function _(e) {
            return e ? (e = e.replace(/\{.+?\}/g, "").replace(/<span.+?span>/, "").replace(/<sub.+?sub>/, ""), e) : e
        }

        function R(e) {
            return e.replace(/\u001b[a-z0-9]/g, "").replace(/<color.+?>/g, "").replace(/<\/color>/g, "").replace(/<light.+?>/g, "").replace(/<\/light>/g, "")
        }

        function M(e) {
            return e ? (e = R(e), e = _(e), e.replace(/<\S+>.*?<\/\S+>/g, "")) : e
        }

        function j(e) {
            return new Promise((function(t, n) {
                uni.request(Object.assign({}, e, {
                    success: t,
                    fail: n
                }))
            }))
        }

        function E(e) {
            return e.split(/[｜|]/).filter((function(e) {
                return e.length
            }))
        }

        function S(e) {
            return new Promise((function(t, n) {
                uni.showActionSheet(Object.assign({}, e, {
                    success: t,
                    fail: n
                }))
            }))
        }
    },
    f201: function(e, t, n) {
        var r = n("e4ae"),
            a = n("79aa"),
            s = n("5168")("species");
        e.exports = function(e, t) {
            var n, c = r(e).constructor;
            return void 0 === c || void 0 == (n = r(c)[s]) ? t : a(n)
        }
    },
    f2e2: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("c5f6"), n("7514"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = new s.Task({
                title: "英雄之家-智慧试炼",
                tags: ["event"]
            }, (function() {
                function e() {
                    return t.apply(this, arguments)
                }

                function t() {
                    return t = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var t;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.move("yxzl 113", "智慧小屋");
                                case 2:
                                    return e.next = 4, s.task.sleep();
                                case 4:
                                    return e.next = 6, s.task.send("npc 1000 0", ["<menu", "今天你已经完成了本试炼"]);
                                case 6:
                                    if (t = e.sent, 1 !== t.index) {
                                        e.next = 9;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 9:
                                    return e.next = 11, n(t);
                                case 11:
                                    return e.abrupt("return", e.sent);
                                case 12:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), t.apply(this, arguments)
                }

                function n(e) {
                    return r.apply(this, arguments)
                }

                function r() {
                    return r = (0, a.default)(regeneratorRuntime.mark((function e(t) {
                        var r, a, c, u, i, o, f, l, p, d;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return r = t.text, e.next = 3, s.task.sleep();
                                case 3:
                                    return a = (0, s.parseMsg)(r), c = a.data, c.text, c.list, u = (0, s.clearText)(a.text), console.log("question:", u), e.next = 9, (0, s.request)({
                                        url: "https://i-weather.cn/api/?key=zhsl&question=".concat(encodeURIComponent(u))
                                    });
                                case 9:
                                    return i = e.sent, o = i.data, f = void 0 === o ? {} : o, l = f.answer || "2", e.next = 15, s.task.sleep();
                                case 15:
                                    return console.log("answer:", l), e.next = 18, s.task.send(l, ["<menu", "智慧试炼"]);
                                case 18:
                                    if (p = e.sent, p.msgs.find((function(e) {
                                            return /错误！/.test(e)
                                        })) && (console.warn("错误！"), d = String(Number(l) - 2 || 0), (0, s.request)({
                                            url: "https://i-weather.cn/api/?key=zhsl&question=".concat(encodeURIComponent(u), "&fail=").concat(d)
                                        })), 0 !== p.index) {
                                        e.next = 23;
                                        break
                                    }
                                    return e.next = 23, n(p);
                                case 23:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), r.apply(this, arguments)
                }
                return e()
            }));
        t.default = c
    },
    f410: function(e, t, n) {
        n("1af6"), e.exports = n("584a").Array.isArray
    },
    f4ea: function(e, t, n) {
        (function(t, r, a) {
            e.exports = r(n("21bf"), n("38ba"))
        })(0, (function(e) {
            return e.mode.CTR = function() {
                var t = e.lib.BlockCipherMode.extend(),
                    n = t.Encryptor = t.extend({
                        processBlock: function(e, t) {
                            var n = this._cipher,
                                r = n.blockSize,
                                a = this._iv,
                                s = this._counter;
                            a && (s = this._counter = a.slice(0), this._iv = void 0);
                            var c = s.slice(0);
                            n.encryptBlock(c, 0), s[r - 1] = s[r - 1] + 1 | 0;
                            for (var u = 0; u < r; u++) e[t + u] ^= c[u]
                        }
                    });
                return t.Decryptor = n, t
            }(), e.mode.CTR
        }))
    },
    f559: function(e, t, n) {
        "use strict";
        var r = n("5ca1"),
            a = n("9def"),
            s = n("d2c8"),
            c = "startsWith",
            u = "" [c];
        r(r.P + r.F * n("5147")(c), "String", {
            startsWith: function(e) {
                var t = s(this, e, c),
                    n = a(Math.min(arguments.length > 1 ? arguments[1] : void 0, t.length)),
                    r = String(e);
                return u ? u.call(t, r, n) : t.slice(n, n + r.length) === r
            }
        })
    },
    f772: function(e, t) {
        e.exports = function(e) {
            return "object" === typeof e ? null !== e : "function" === typeof e
        }
    },
    f921: function(e, t, n) {
        n("014b"), n("c207"), n("69d3"), n("765d"), e.exports = n("584a").Symbol
    },
    f9c9: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0;
        var a = r(n("7618"));
        n("ac6a"), n("456d"), n("3b2b"), n("a481"), n("4917"), n("6762"), n("2fdb"), n("7514"), n("96cf");
        var s = r(n("3b8d")),
            c = n("3f7e"),
            u = r(n("275e")),
            i = [{
                code: "myxj 107",
                title: "公爵小屋",
                npcs: {
                    "厨娘": "npc 1001",
                    "公爵夫人": "npc 1002",
                    "狠毒猫": "npc 1003",
                    "男仆": "npc 1000"
                }
            }, {
                code: "myxj 111",
                title: "纸牌王宫",
                npcs: {
                    "红心国王": "npc 1000",
                    "红心皇后": "npc 1001"
                }
            }, {
                code: "myxj 104",
                title: "树屋酒吧",
                npcs: {
                    "拳击猴": "npc 1000",
                    "大水怪": "npc 1001"
                }
            }, {
                code: "myxj 106",
                title: "迷途森林",
                npcs: {
                    "蓝毛毛虫": "npc 1000",
                    "鸽子女王": "npc 1001"
                }
            }, {
                code: "myxj 108",
                title: "月兔之家",
                npcs: {
                    "睡鼠": "npc 1002",
                    "看守者": "npc 1003",
                    "帽匠": "npc 1001"
                }
            }, {
                code: "myxj 109",
                title: "皇后球场",
                npcs: {
                    "刺猬球": "npc 1001",
                    "卫队长": "npc 1002"
                }
            }, {
                code: "myxj 110",
                title: "梦幻海滩",
                npcs: {
                    "龙龟": "npc 1000",
                    "鹰头狮": "npc 1001",
                    "小海狮": "npc 1002",
                    "青绵鸟": "npc 1003"
                }
            }, {
                code: "myxj 103",
                title: "泪之池",
                npcs: {
                    "粉红鼠": "npc 1000",
                    "大白兔": "npc 1001"
                }
            }, {
                code: "myxj 102",
                title: "神秘小屋一层",
                npcs: {
                    "酒杯精灵": "npc 1000",
                    "神秘精灵": "npc 1001",
                    "哈巴狗": "npc 1002"
                }
            }, {
                code: "myxj 105",
                title: "神秘小屋二层",
                npcs: {
                    "兔子先生": "npc 1000"
                }
            }],
            o = [/^[中][级极]/, /^[高终][级极]/, /^[中高终][级极]/],
            f = new c.Task({
                title: "梦游仙境(刷点心)",
                tags: ["event"],
                form: [{
                    title: "类型",
                    type: "picker",
                    range: ["中级", "终级", "中级和终级(自动重置)"],
                    value: 0
                }]
            }, (function() {
                var e = this.form[0].value,
                    t = o[e];

                function n() {
                    return r.apply(this, arguments)
                }

                function r() {
                    return r = (0, s.default)(regeneratorRuntime.mark((function e() {
                        var t, n, r, a;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, x("刷新故事");
                                case 2:
                                    return t = e.sent, e.next = 5, c.task.sleep();
                                case 5:
                                    return e.next = 7, c.task.send("npc 1000 ".concat(t.code), ["[~1]", "明天再来吧"]);
                                case 7:
                                    if (n = e.sent, r = n.index, a = n.text, 1 !== r) {
                                        e.next = 12;
                                        break
                                    }
                                    throw new Error(a);
                                case 12:
                                    return e.next = 14, c.task.sleep();
                                case 14:
                                    return e.next = 16, c.task.send("1", "帮你把任务都重置好了");
                                case 16:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), r.apply(this, arguments)
                }

                function f() {
                    return l.apply(this, arguments)
                }

                function l() {
                    return l = (0, s.default)(regeneratorRuntime.mark((function e() {
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, c.task.sleep();
                                case 2:
                                    return e.next = 4, c.task.send("npc 1000 ~q0", "[~1]");
                                case 4:
                                    return e.next = 6, c.task.sleep();
                                case 6:
                                    return e.next = 8, c.task.send("1", "请再撞");
                                case 8:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), l.apply(this, arguments)
                }

                function p(e) {
                    return d.apply(this, arguments)
                }

                function d() {
                    return d = (0, s.default)(regeneratorRuntime.mark((function e(t) {
                        var n, r, a;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, c.task.sleep();
                                case 2:
                                    return e.next = 4, c.task.send("npc 1000 ".concat(t.code), ["[~1]", "您得到了", "明天再来吧"]);
                                case 4:
                                    if (n = e.sent, r = n.index, a = n.text, 1 !== r) {
                                        e.next = 11;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 11:
                                    if (2 !== r) {
                                        e.next = 13;
                                        break
                                    }
                                    throw new Error(a);
                                case 13:
                                    return e.next = 15, c.task.sleep();
                                case 15:
                                    return e.next = 17, c.task.send("1", "mps]");
                                case 17:
                                    return e.next = 19, c.task.sleep();
                                case 19:
                                    return e.next = 21, c.task.send("cl", "cnt");
                                case 21:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), d.apply(this, arguments)
                }

                function x(e) {
                    return h.apply(this, arguments)
                }

                function h() {
                    return h = (0, s.default)(regeneratorRuntime.mark((function e(t) {
                        var n, r = arguments;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return n = r.length > 1 && void 0 !== r[1] ? r[1] : "npc 1000", e.next = 3, (0, c.findNpcItem)({
                                        code: n
                                    }, t);
                                case 3:
                                    return e.abrupt("return", e.sent);
                                case 4:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), h.apply(this, arguments)
                }
                var k, v = [];

                function m() {
                    return b.apply(this, arguments)
                }

                function b() {
                    return b = (0, s.default)(regeneratorRuntime.mark((function e() {
                        var n, r, a, s, u, i, o, f;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return n = "", e.next = 3, c.task.sleep();
                                case 3:
                                    return e.next = 5, c.task.send("9 1", "查看任务");
                                case 5:
                                    if (r = e.sent, a = r.text, s = (0, c.parseMsg)(a).data.list, u = s.find((function(e) {
                                            var n = e.title;
                                            return t.test(n) && !n.includes("财富") && !v.includes(n)
                                        })), !u) {
                                        e.next = 18;
                                        break
                                    }
                                    return k = u.title, e.next = 13, c.task.sleep();
                                case 13:
                                    return e.next = 15, c.task.send("".concat(u.code, " a"), "mps]");
                                case 15:
                                    i = e.sent, o = i.text, n = o;
                                case 18:
                                    return e.next = 20, c.task.sleep();
                                case 20:
                                    return e.next = 22, c.task.cancel(!0);
                                case 22:
                                    return console.log("need:", n), f = n.match(/([\u4e00-\u9fa5]+)[13]0个.+?已击败[13]0个/), console.log("res:", f), n = f ? n.replace(new RegExp(f[1], "g"), "") : n.replace("失眠的睡鼠", "").replace("偷懒的厨娘", ""), e.abrupt("return", n);
                                case 27:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), b.apply(this, arguments)
                }

                function g() {
                    return y.apply(this, arguments)
                }

                function y() {
                    return y = (0, s.default)(regeneratorRuntime.mark((function e() {
                        var r, s, l, d, h, b, y, w, _, R, M, j, E, S;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, c.task.sleep();
                                case 2:
                                    return e.next = 4, c.task.move("myxj 101", "真实梦境");
                                case 4:
                                    return e.next = 6, x("抽取任务");
                                case 6:
                                    if (r = e.sent, !r) {
                                        e.next = 10;
                                        break
                                    }
                                    return e.next = 10, f();
                                case 10:
                                    return e.next = 12, x("领取任务");
                                case 12:
                                    if (s = e.sent, !s) {
                                        e.next = 16;
                                        break
                                    }
                                    return e.next = 16, p(s);
                                case 16:
                                    return e.next = 18, x("领取任务");
                                case 18:
                                    if (l = e.sent, !l) {
                                        e.next = 22;
                                        break
                                    }
                                    return e.next = 22, p(l);
                                case 22:
                                    return e.next = 24, x((function(e) {
                                        var n = e.title;
                                        return t.test((0, c.clearText)(n))
                                    }));
                                case 24:
                                    if (d = e.sent, d) {
                                        e.next = 29;
                                        break
                                    }
                                    return e.next = 28, m();
                                case 28:
                                    h = e.sent;
                                case 29:
                                    if (!d && !h) {
                                        e.next = 83;
                                        break
                                    }
                                    return e.next = 32, c.task.sleep();
                                case 32:
                                    if (h) {
                                        e.next = 66;
                                        break
                                    }
                                    return e.next = 35, c.task.send("npc 1000 ".concat(d.code), ["[~1]", "需要"]);
                                case 35:
                                    if (b = e.sent, y = b.index, w = b.text, 0 !== y) {
                                        e.next = 65;
                                        break
                                    }
                                    return e.next = 41, c.task.send("1", ["mps]", "得到了", "需要"]);
                                case 41:
                                    if (_ = e.sent, R = _.index, _.text, 0 !== R) {
                                        e.next = 54;
                                        break
                                    }
                                    return e.next = 47, c.task.sleep();
                                case 47:
                                    return e.next = 49, c.task.send("cl", "cnt");
                                case 49:
                                    return e.next = 51, g();
                                case 51:
                                    return e.abrupt("return");
                                case 54:
                                    if (1 !== R) {
                                        e.next = 60;
                                        break
                                    }
                                    return e.next = 57, g();
                                case 57:
                                    return e.abrupt("return");
                                case 60:
                                    return e.next = 62, m();
                                case 62:
                                    h = e.sent;
                                case 63:
                                    e.next = 66;
                                    break;
                                case 65:
                                    h = w;
                                case 66:
                                    M = 0;
                                case 67:
                                    if (!(M < i.length)) {
                                        e.next = 80;
                                        break
                                    }
                                    if (j = i[M], E = Object.keys(j.npcs).find((function(e) {
                                            return h.includes(e)
                                        })), !E) {
                                        e.next = 77;
                                        break
                                    }
                                    return e.delegateYield(regeneratorRuntime.mark((function e() {
                                        var t, n, r, a, s;
                                        return regeneratorRuntime.wrap((function(e) {
                                            while (1) switch (e.prev = e.next) {
                                                case 0:
                                                    return t = k, k = null, e.next = 4, c.task.sleep();
                                                case 4:
                                                    return e.next = 6, c.task.move(j.code, j.title);
                                                case 6:
                                                    if (n = j.npcs[E], "kill" === n) {
                                                        e.next = 30;
                                                        break
                                                    }
                                                    return e.next = 10, x((function(e) {
                                                        var n = e.title;
                                                        return (0, c.clearText)(n) === (0, c.clearText)(t)
                                                    }), n);
                                                case 10:
                                                    if (r = e.sent, !r) {
                                                        e.next = 30;
                                                        break
                                                    }
                                                    return e.next = 14, c.task.sleep();
                                                case 14:
                                                    return e.next = 16, c.task.send("".concat(n, " ").concat(r.code), "[~1]");
                                                case 16:
                                                    return e.next = 18, c.task.sleep();
                                                case 18:
                                                    return e.next = 20, c.task.send("1", ["mps]", "得到了"]);
                                                case 20:
                                                    if (a = e.sent, s = a.index, 0 !== s) {
                                                        e.next = 27;
                                                        break
                                                    }
                                                    return e.next = 25, c.task.sleep();
                                                case 25:
                                                    return e.next = 27, c.task.send("cl", "cnt");
                                                case 27:
                                                    return e.next = 29, g();
                                                case 29:
                                                    return e.abrupt("return", {
                                                        v: void 0
                                                    });
                                                case 30:
                                                    return e.next = 32, c.task.sleep();
                                                case 32:
                                                    return u.default.reset(), u.default.set({
                                                        code: "kill" === n ? n : "".concat(n, " h"),
                                                        find: /需要击败.+?：10 \/ 10|需要击败.+?：30 \/ 30|\(?需要: 10 \/ 10\)?|\(?需要: 30 \/ 30\)?/
                                                    }), e.next = 36, u.default.start(!1, !1);
                                                case 36:
                                                    return e.abrupt("return", "break");
                                                case 37:
                                                case "end":
                                                    return e.stop()
                                            }
                                        }), e)
                                    }))(), "t0", 72);
                                case 72:
                                    if (S = e.t0, "break" !== S) {
                                        e.next = 75;
                                        break
                                    }
                                    return e.abrupt("break", 80);
                                case 75:
                                    if ("object" !== (0, a.default)(S)) {
                                        e.next = 77;
                                        break
                                    }
                                    return e.abrupt("return", S.v);
                                case 77:
                                    M++, e.next = 67;
                                    break;
                                case 80:
                                    return k && (v.push(k), k = null), e.next = 83, g();
                                case 83:
                                    if (t !== o[2]) {
                                        e.next = 88;
                                        break
                                    }
                                    return e.next = 86, n();
                                case 86:
                                    return e.next = 88, g();
                                case 88:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), y.apply(this, arguments)
                }
                return g()
            }));
        t.default = f
    },
    fa5b: function(e, t, n) {
        e.exports = n("5537")("native-function-to-string", Function.toString)
    },
    fab2: function(e, t, n) {
        var r = n("7726").document;
        e.exports = r && r.documentElement
    },
    fdef: function(e, t) {
        e.exports = "\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff"
    },
    fe0d: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = r(n("275e")),
            u = new s.Task({
                title: "技能成长-天赐天罚",
                tags: ["event"]
            }, (function() {
                function e() {
                    return t.apply(this, arguments)
                }

                function t() {
                    return t = (0, a.default)(regeneratorRuntime.mark((function e() {
                        var t, n, r;
                        return regeneratorRuntime.wrap((function(e) {
                            while (1) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, s.task.sleep();
                                case 2:
                                    return e.next = 4, s.task.send("npc 1006 ~q1", ["这个任务每天只能做", "还要学会如何成长啊", "已击败50个", "需要击败", "cnt"]);
                                case 4:
                                    if (t = e.sent, n = t.index, r = t.text, 0 !== n && 4 !== n) {
                                        e.next = 9;
                                        break
                                    }
                                    throw new Error(r);
                                case 9:
                                    if (1 !== n) {
                                        e.next = 18;
                                        break
                                    }
                                    return e.next = 12, s.task.sleep();
                                case 12:
                                    return e.next = 14, s.task.send("1", ["领取其他任务"]);
                                case 14:
                                    return e.next = 16, s.task.sleep();
                                case 16:
                                    return e.next = 18, s.task.send("cl", ["cnt"]);
                                case 18:
                                    if (1 !== n && 3 !== n) {
                                        e.next = 37;
                                        break
                                    }
                                    return e.next = 21, s.task.sleep();
                                case 21:
                                    return e.next = 23, s.task.move("lbsc 229", "鲤鱼塘");
                                case 23:
                                    return e.next = 25, s.task.sleep();
                                case 25:
                                    return c.default.reset(), c.default.set({
                                        find: /每日任务技能成长：.+50 \/ 50/
                                    }), e.next = 29, c.default.start(!1, !1);
                                case 29:
                                    return e.next = 31, s.task.sleep();
                                case 31:
                                    return e.next = 33, s.task.move("lbsc 213", "绿宝石广场");
                                case 33:
                                    return e.next = 35, s.task.sleep();
                                case 35:
                                    return e.next = 37, s.task.send("npc 1006 ~q1", ["已击败50个"]);
                                case 37:
                                    return e.next = 39, s.task.sleep();
                                case 39:
                                    return e.next = 41, s.task.send("1", ["得到了"]);
                                case 41:
                                case "end":
                                    return e.stop()
                            }
                        }), e)
                    }))), t.apply(this, arguments)
                }
                return s.task.move("lbsc 213", "绿宝石广场").then(e)
            }));
        t.default = u
    },
    ff63: function(e, t, n) {
        "use strict";
        var r = n("4ea4");
        Object.defineProperty(t, "__esModule", {
            value: !0
        }), t.default = void 0, n("c5f6"), n("96cf");
        var a = r(n("3b8d")),
            s = n("3f7e"),
            c = r(n("275e"));

        function u(e) {
            return e = e instanceof Date ? e : new Date(e), "".concat(e.getFullYear(), "-").concat(e.getMonth() + 1, "-").concat(e.getDate())
        }

        function i() {
            return o.apply(this, arguments)
        }

        function o() {
            return o = (0, a.default)(regeneratorRuntime.mark((function e() {
                var t;
                return regeneratorRuntime.wrap((function(e) {
                    while (1) switch (e.prev = e.next) {
                        case 0:
                            t = 0;
                        case 1:
                            if (!(t < 5)) {
                                e.next = 7;
                                break
                            }
                            return e.next = 4, s.userSettings.setAsync("xrws-".concat(t), "");
                        case 4:
                            t++, e.next = 1;
                            break;
                        case 7:
                        case "end":
                            return e.stop()
                    }
                }), e)
            }))), o.apply(this, arguments)
        }
        var f = new s.Task({
            title: "仙人无双塔",
            tags: ["event"],
            options: {
                begin: !1
            },
            before: function() {
                var e = (0, a.default)(regeneratorRuntime.mark((function e() {
                    var t;
                    return regeneratorRuntime.wrap((function(e) {
                        while (1) switch (e.prev = e.next) {
                            case 0:
                                t = this.options, t.begin = !0;
                            case 2:
                            case "end":
                                return e.stop()
                        }
                    }), e, this)
                })));

                function t() {
                    return e.apply(this, arguments)
                }
                return t
            }(),
            form: [{
                title: "重新挑战",
                type: "checkbox",
                value: !1
            }, {
                title: "自动重置",
                type: "checkbox",
                value: !0
            }]
        }, (0, a.default)(regeneratorRuntime.mark((function e() {
            var t, n, r, o, f, l;
            return regeneratorRuntime.wrap((function(e) {
                while (1) switch (e.prev = e.next) {
                    case 0:
                        if (l = function() {
                                return l = (0, a.default)(regeneratorRuntime.mark((function e() {
                                    var t, n, a, l, p;
                                    return regeneratorRuntime.wrap((function(e) {
                                        while (1) switch (e.prev = e.next) {
                                            case 0:
                                                return e.next = 2, s.task.sleep();
                                            case 2:
                                                if (0 !== o) {
                                                    e.next = 7;
                                                    break
                                                }
                                                return e.next = 5, s.task.move("xrwst 102", "手之修炼");
                                            case 5:
                                                e.next = 28;
                                                break;
                                            case 7:
                                                if (5 === o) {
                                                    e.next = 12;
                                                    break
                                                }
                                                return e.next = 10, s.task.send("t l 5001", "<title>");
                                            case 10:
                                                e.next = 28;
                                                break;
                                            case 12:
                                                if (!r) {
                                                    e.next = 27;
                                                    break
                                                }
                                                return e.next = 15, s.task.move("xrwst 101", "仙人无双塔");
                                            case 15:
                                                return e.next = 17, s.task.sleep();
                                            case 17:
                                                return e.next = 19, s.task.send("npc 1000 0", ["重置成功", "不能重置"]);
                                            case 19:
                                                if (t = e.sent, n = t.index, 0 !== n) {
                                                    e.next = 27;
                                                    break
                                                }
                                                return e.next = 24, i();
                                            case 24:
                                                return o = 0, e.next = 27, f();
                                            case 27:
                                                return e.abrupt("return");
                                            case 28:
                                                return e.next = 30, s.task.sleep();
                                            case 30:
                                                return e.next = 32, s.task.send("npc 1000 0", ["你还不能领取奖品哦", "你得到了"]);
                                            case 32:
                                                return a = e.sent, l = a.index, e.next = 36, s.userSettings.getAsync("xrws-".concat(o), Date.now());
                                            case 36:
                                                if (p = e.sent, 0 !== l || u(p ? Number(p) : null) === u(new Date)) {
                                                    e.next = 44;
                                                    break
                                                }
                                                return c.default.reset(), c.default.set({
                                                    code: "npc 1000 h",
                                                    find: /已经击败仙人无双塔/
                                                }), e.next = 42, c.default.start();
                                            case 42:
                                                return e.next = 44, s.task.send("npc 1000 0", ["你还不能领取奖品哦", "你得到了"]);
                                            case 44:
                                                return o++, e.next = 47, f();
                                            case 47:
                                            case "end":
                                                return e.stop()
                                        }
                                    }), e)
                                }))), l.apply(this, arguments)
                            }, f = function() {
                                return l.apply(this, arguments)
                            }, t = this.options, n = this.form[0].value, r = this.form[1].value, !n || !t.begin) {
                            e.next = 9;
                            break
                        }
                        return e.next = 8, i();
                    case 8:
                        t.begin = !1;
                    case 9:
                        return o = 0, e.next = 12, f();
                    case 12:
                    case "end":
                        return e.stop()
                }
            }), e, this)
        }))));
        t.default = f
    }
});